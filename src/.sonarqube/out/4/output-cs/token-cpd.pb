ò©
]E:\_Workspace\Github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiAccountController.cs
	namespace!! 	
Swastika!!
 
.!! 
Core!! 
.!! 
Controllers!! #
{"" 
[## 
Route## 

(##
 
$str## 
)## 
]## 
public$$ 

class$$  
ApiAccountController$$ %
:$$& '
BaseApiController$$( 9
{%% 
private&& 
readonly&& 
UserManager&& $
<&&$ %
ApplicationUser&&% 4
>&&4 5
_userManager&&6 B
;&&B C
private'' 
readonly'' 
SignInManager'' &
<''& '
ApplicationUser''' 6
>''6 7
_signInManager''8 F
;''F G
private(( 
readonly(( 
RoleManager(( $
<(($ %
IdentityRole((% 1
>((1 2
_roleManager((3 ?
;((? @
private)) 
readonly)) 
IEmailSender)) %
_emailSender))& 2
;))2 3
private** 
readonly** 
ILogger**  
_logger**! (
;**( )
public,,  
ApiAccountController,, #
(,,# $
UserManager-- 
<-- 
ApplicationUser-- '
>--' (
userManager--) 4
,--4 5
SignInManager.. 
<.. 
ApplicationUser.. )
>..) *
signInManager..+ 8
,..8 9
RoleManager// 
<// 
IdentityRole// $
>//$ %
roleManager//& 1
,//1 2
IEmailSender00 
emailSender00 $
,00$ %
ILogger11 
<11  
ApiAccountController11 (
>11( )
logger11* 0
)110 1
{22 	
_userManager33 
=33 
userManager33 &
;33& '
_signInManager44 
=44 
signInManager44 *
;44* +
_roleManager55 
=55 
roleManager55 &
;55& '
_emailSender66 
=66 
emailSender66 &
;66& '
_logger77 
=77 
logger77 
;77 
}88 	
[:: 	
TempData::	 
]:: 
public;; 
string;; 
ErrorMessage;; "
{;;# $
get;;% (
;;;( )
set;;* -
;;;- .
};;/ 0
[?? 	
	Authorize??	 
(?? !
AuthenticationSchemes?? (
=??) *
JwtBearerDefaults??+ <
.??< = 
AuthenticationScheme??= Q
)??Q R
]??R S
[@@ 	
Route@@	 
(@@ 
$str@@ 
)@@ 
]@@ 
[AA 	
HttpGetAA	 
,AA 
HttpPostAA 
]AA 
publicBB 
asyncBB 
TaskBB 
<BB 
RepositoryResponseBB ,
<BB, -
boolBB- 1
>BB1 2
>BB2 3
LogoutBB4 :
(BB: ;
)BB; <
{CC 	
varDD 
resultDD 
=DD 
newDD 
RepositoryResponseDD /
<DD/ 0
boolDD0 4
>DD4 5
(DD5 6
)DD6 7
{DD8 9
	IsSucceedDD: C
=DDD E
trueDDF J
,DDJ K
DataDDL P
=DDQ R
trueDDS W
}DDX Y
;DDY Z
awaitEE 
_signInManagerEE  
.EE  !
SignOutAsyncEE! -
(EE- .
)EE. /
.EE/ 0
ConfigureAwaitEE0 >
(EE> ?
falseEE? D
)EED E
;EEE F
awaitFF 
HttpContextFF 
.FF 
SignOutAsyncFF *
(FF* +(
CookieAuthenticationDefaultsFF+ G
.FFG H 
AuthenticationSchemeFFH \
)FF\ ]
.FF] ^
ConfigureAwaitFF^ l
(FFl m
falseFFm r
)FFr s
;FFs t
awaitGG !
RefreshTokenViewModelGG '
.GG' (

RepositoryGG( 2
.GG2 3
RemoveModelAsyncGG3 C
(GGC D
rGGD E
=>GGF H
rGGI J
.GGJ K
UsernameGGK S
==GGT V
UserGGW [
.GG[ \
IdentityGG\ d
.GGd e
NameGGe i
)GGi j
;GGj k
returnHH 
resultHH 
;HH 
}II 	
[KK 	
RouteKK	 
(KK 
$strKK 
)KK 
]KK 
[LL 	
HttpPostLL	 
]LL 
[MM 	
AllowAnonymousMM	 
]MM 
publicOO 
asyncOO 
TaskOO 
<OO 
RepositoryResponseOO ,
<OO, - 
AccessTokenViewModelOO- A
>OOA B
>OOB C
LoginOOD I
(OOI J
[OOJ K
FromBodyOOK S
]OOS T
LoginViewModelOOU c
modelOOd i
)OOi j
{PP 	
RepositoryResponseQQ 
<QQ  
AccessTokenViewModelQQ 3
>QQ3 4
loginResultQQ5 @
=QQA B
newQQC F
RepositoryResponseQQG Y
<QQY Z 
AccessTokenViewModelQQZ n
>QQn o
(QQo p
)QQp q
;QQq r
ifRR 
(RR 

ModelStateRR 
.RR 
IsValidRR "
)RR" #
{SS 
varVV 
resultVV 
=VV 
awaitVV "
_signInManagerVV# 1
.VV1 2
PasswordSignInAsyncVV2 E
(VVE F
modelWW 
.WW 
UserNameWW "
,WW" #
modelWW$ )
.WW) *
PasswordWW* 2
,WW2 3
isPersistentWW4 @
:WW@ A
modelWWB G
.WWG H

RememberMeWWH R
,WWR S
lockoutOnFailureWWT d
:WWd e
falseWWf k
)WWk l
.WWl m
ConfigureAwaitWWm {
(WW{ |
false	WW| Å
)
WWÅ Ç
;
WWÇ É
ifXX 
(XX 
resultXX 
.XX 
	SucceededXX $
)XX$ %
{YY 
varZZ 
userZZ 
=ZZ 
awaitZZ $
_userManagerZZ% 1
.ZZ1 2
FindByNameAsyncZZ2 A
(ZZA B
modelZZB G
.ZZG H
UserNameZZH P
)ZZP Q
.ZZQ R
ConfigureAwaitZZR `
(ZZ` a
falseZZa f
)ZZf g
;ZZg h
var[[ 
roles[[ 
=[[ 
await[[  %
_userManager[[& 2
.[[2 3
GetRolesAsync[[3 @
([[@ A
user[[A E
)[[E F
;[[F G
var\\ 
info\\ 
=\\ 
await\\ $
InfoUserViewModel\\% 6
.\\6 7

Repository\\7 A
.\\A B
GetSingleModelAsync\\B U
(\\U V
u\\V W
=>\\X Z
u\\[ \
.\\\ ]
Username\\] e
==\\f h
user\\i m
.\\m n
UserName\\n v
)\\v w
;\\w x
info]] 
.]] 
Data]] 
.]] 
Roles]] #
=]]$ %
roles]]& +
.]]+ ,
ToList]], 2
(]]2 3
)]]3 4
;]]4 5
var__ 
token__ 
=__ 
await__  %$
GenerateAccessTokenAsync__& >
(__> ?
user__? C
)__C D
;__D E
if`` 
(`` 
token`` 
!=``  
null``! %
)``% &
{aa 
tokenbb 
.bb 
UserDatabb &
=bb' (
infobb) -
.bb- .
Databb. 2
;bb2 3
loginResultcc #
.cc# $
	IsSucceedcc$ -
=cc. /
truecc0 4
;cc4 5
loginResultdd #
.dd# $
Statusdd$ *
=dd+ ,
$numdd- .
;dd. /
loginResultee #
.ee# $
Dataee$ (
=ee) *
tokenee+ 0
;ee0 1
_loggerff 
.ff  
LogInformationff  .
(ff. /
$strff/ @
)ff@ A
;ffA B
returngg 
loginResultgg *
;gg* +
}hh 
elseii 
{jj 
returnkk 
loginResultkk *
;kk* +
}ll 
}mm 
elsenn 
{oo 
returnpp 
loginResultpp &
;pp& '
}qq 
}rr 
elsess 
{tt 
returnuu 
loginResultuu "
;uu" #
}vv 
}ww 	
[yy 	
Routeyy	 
(yy 
$stryy .
)yy. /
]yy/ 0
[zz 	
HttpGetzz	 
]zz 
[{{ 	
AllowAnonymous{{	 
]{{ 
public|| 
async|| 
Task|| 
<|| 
RepositoryResponse|| ,
<||, - 
AccessTokenViewModel||- A
>||A B
>||B C
RefreshToken||D P
(||P Q
string||Q W
refreshTokenId||X f
)||f g
{}} 	
RepositoryResponse~~ 
<~~  
AccessTokenViewModel~~ 3
>~~3 4
result~~5 ;
=~~< =
new~~> A
RepositoryResponse~~B T
<~~T U 
AccessTokenViewModel~~U i
>~~i j
(~~j k
)~~k l
;~~l m
var 
getRefreshToken 
=  !
await" '!
RefreshTokenViewModel( =
.= >

Repository> H
.H I
GetSingleModelAsyncI \
(\ ]
t] ^
=>_ a
tb c
.c d
Idd f
==g i
refreshTokenIdj x
)x y
;y z
if
ÄÄ 
(
ÄÄ 
getRefreshToken
ÄÄ 
.
ÄÄ  
	IsSucceed
ÄÄ  )
)
ÄÄ) *
{
ÅÅ 
var
ÇÇ 
oldToken
ÇÇ 
=
ÇÇ 
getRefreshToken
ÇÇ .
.
ÇÇ. /
Data
ÇÇ/ 3
;
ÇÇ3 4
if
ÉÉ 
(
ÉÉ 
oldToken
ÉÉ 
.
ÉÉ 

ExpiresUtc
ÉÉ '
>
ÉÉ( )
DateTime
ÉÉ* 2
.
ÉÉ2 3
UtcNow
ÉÉ3 9
)
ÉÉ9 :
{
ÑÑ 
var
ÖÖ 
user
ÖÖ 
=
ÖÖ 
await
ÖÖ $
_userManager
ÖÖ% 1
.
ÖÖ1 2
FindByEmailAsync
ÖÖ2 B
(
ÖÖB C
oldToken
ÖÖC K
.
ÖÖK L
Email
ÖÖL Q
)
ÖÖQ R
;
ÖÖR S
var
ÜÜ 
token
ÜÜ 
=
ÜÜ 
await
ÜÜ  %&
GenerateAccessTokenAsync
ÜÜ& >
(
ÜÜ> ?
user
ÜÜ? C
)
ÜÜC D
;
ÜÜD E
if
áá 
(
áá 
token
áá 
!=
áá  
null
áá! %
)
áá% &
{
àà 
await
ââ 
oldToken
ââ &
.
ââ& '
RemoveModelAsync
ââ' 7
(
ââ7 8
)
ââ8 9
;
ââ9 :
}
ää 
result
ãã 
.
ãã 
	IsSucceed
ãã $
=
ãã% &
true
ãã' +
;
ãã+ ,
result
åå 
.
åå 
Data
åå 
=
åå  !
token
åå" '
;
åå' (
return
çç 
result
çç !
;
çç! "
}
éé 
else
èè 
{
êê 
await
ëë 
oldToken
ëë "
.
ëë" #
RemoveModelAsync
ëë# 3
(
ëë3 4
)
ëë4 5
;
ëë5 6
result
íí 
.
íí 
Errors
íí !
.
íí! "
Add
íí" %
(
íí% &
$str
íí& 5
)
íí5 6
;
íí6 7
return
ìì 
result
ìì !
;
ìì! "
}
îî 
}
ïï 
else
ññ 
{
óó 
result
òò 
.
òò 
Errors
òò 
.
òò 
Add
òò !
(
òò! "
$str
òò" 1
)
òò1 2
;
òò2 3
return
ôô 
result
ôô 
;
ôô 
}
öö 
}
õõ 	
[
ùù 	
Route
ùù	 
(
ùù 
$str
ùù 
)
ùù 
]
ùù 
[
ûû 	
HttpPost
ûû	 
]
ûû 
[
üü 	
AllowAnonymous
üü	 
]
üü 
public
†† 
async
†† 
Task
†† 
<
††  
RepositoryResponse
†† ,
<
††, -"
AccessTokenViewModel
††- A
>
††A B
>
††B C
Register
††D L
(
††L M
RegisterViewModel
††M ^
model
††_ d
)
††d e
{
°° 	 
RepositoryResponse
¢¢ 
<
¢¢ "
AccessTokenViewModel
¢¢ 3
>
¢¢3 4
result
¢¢5 ;
=
¢¢< =
new
¢¢> A 
RepositoryResponse
¢¢B T
<
¢¢T U"
AccessTokenViewModel
¢¢U i
>
¢¢i j
(
¢¢j k
)
¢¢k l
;
¢¢l m
if
££ 
(
££ 

ModelState
££ 
.
££ 
IsValid
££ "
)
££" #
{
§§ 
var
•• 
user
•• 
=
•• 
new
•• 
ApplicationUser
•• .
{
¶¶ 
UserName
ßß 
=
ßß 
model
ßß $
.
ßß$ %
UserName
ßß% -
,
ßß- .
Email
®® 
=
®® 
model
®® !
.
®®! "
Email
®®" '
,
®®' (
	FirstName
©© 
=
©© 
model
©©  %
.
©©% &
	FirstName
©©& /
,
©©/ 0
LastName
™™ 
=
™™ 
model
™™ $
.
™™$ %
LastName
™™% -
,
™™- .
JoinDate
´´ 
=
´´ 
DateTime
´´ '
.
´´' (
UtcNow
´´( .
}
¨¨ 
;
¨¨ 
var
≠≠ 
createResult
≠≠  
=
≠≠! "
await
≠≠# (
_userManager
≠≠) 5
.
≠≠5 6
CreateAsync
≠≠6 A
(
≠≠A B
user
≠≠B F
,
≠≠F G
password
≠≠H P
:
≠≠P Q
model
≠≠R W
.
≠≠W X
Password
≠≠X `
)
≠≠` a
.
≠≠a b
ConfigureAwait
≠≠b p
(
≠≠p q
false
≠≠q v
)
≠≠v w
;
≠≠w x
if
ÆÆ 
(
ÆÆ 
createResult
ÆÆ  
.
ÆÆ  !
	Succeeded
ÆÆ! *
)
ÆÆ* +
{
ØØ 
_logger
∞∞ 
.
∞∞ 
LogInformation
∞∞ *
(
∞∞* +
$str
∞∞+ V
)
∞∞V W
;
∞∞W X
user
≤≤ 
=
≤≤ 
await
≤≤  
_userManager
≤≤! -
.
≤≤- .
FindByEmailAsync
≤≤. >
(
≤≤> ?
model
≤≤? D
.
≤≤D E
Email
≤≤E J
)
≤≤J K
.
≤≤K L
ConfigureAwait
≤≤L Z
(
≤≤Z [
false
≤≤[ `
)
≤≤` a
;
≤≤a b
InfoUserViewModel
µµ %
cmsUser
µµ& -
=
µµ. /
new
µµ0 3
InfoUserViewModel
µµ4 E
(
µµE F
)
µµF G
{
∂∂ 
Id
∑∑ 
=
∑∑ 
user
∑∑ !
.
∑∑! "
Id
∑∑" $
,
∑∑$ %
Username
∏∏  
=
∏∏! "
model
∏∏# (
.
∏∏( )
UserName
∏∏) 1
,
∏∏1 2
	FirstName
ππ !
=
ππ" #
model
ππ$ )
.
ππ) *
	FirstName
ππ* 3
,
ππ3 4
LastName
∫∫  
=
∫∫! "
model
∫∫# (
.
∫∫( )
LastName
∫∫) 1
,
∫∫1 2
CreatedDateTime
ªª '
=
ªª( )
DateTime
ªª* 2
.
ªª2 3
UtcNow
ªª3 9
}
ºº 
;
ºº 
await
ΩΩ 
cmsUser
ΩΩ !
.
ΩΩ! "
SaveModelAsync
ΩΩ" 0
(
ΩΩ0 1
)
ΩΩ1 2
;
ΩΩ2 3
var
øø 
token
øø 
=
øø 
await
øø  %&
GenerateAccessTokenAsync
øø& >
(
øø> ?
user
øø? C
)
øøC D
;
øøD E
if
¿¿ 
(
¿¿ 
token
¿¿ 
!=
¿¿  
null
¿¿! %
)
¿¿% &
{
¡¡ 
result
¬¬ 
.
¬¬ 
	IsSucceed
¬¬ (
=
¬¬) *
true
¬¬+ /
;
¬¬/ 0
result
√√ 
.
√√ 
Data
√√ #
=
√√$ %
token
√√& +
;
√√+ ,
_logger
ƒƒ 
.
ƒƒ  
LogInformation
ƒƒ  .
(
ƒƒ. /
$str
ƒƒ/ @
)
ƒƒ@ A
;
ƒƒA B
return
≈≈ 
result
≈≈ %
;
≈≈% &
}
∆∆ 
else
«« 
{
»» 
return
…… 
result
…… %
;
……% &
}
   
}
““ 
else
”” 
{
‘‘ 
foreach
’’ 
(
’’ 
var
’’  
error
’’! &
in
’’' )
createResult
’’* 6
.
’’6 7
Errors
’’7 =
)
’’= >
{
÷÷ 
result
◊◊ 
.
◊◊ 
Errors
◊◊ %
.
◊◊% &
Add
◊◊& )
(
◊◊) *
error
◊◊* /
.
◊◊/ 0
Description
◊◊0 ;
)
◊◊; <
;
◊◊< =
}
ÿÿ 
return
ŸŸ 
result
ŸŸ !
;
ŸŸ! "
}
⁄⁄ 
}
€€ 
return
›› 
result
›› 
;
›› 
}
ﬁﬁ 	
[
‡‡ 	
	Authorize
‡‡	 
(
‡‡ #
AuthenticationSchemes
‡‡ (
=
‡‡) *
JwtBearerDefaults
‡‡+ <
.
‡‡< ="
AuthenticationScheme
‡‡= Q
,
‡‡Q R
Roles
‡‡S X
=
‡‡Y Z
$str
‡‡[ g
)
‡‡g h
]
‡‡h i
[
·· 	
Route
··	 
(
·· 
$str
·· 
)
·· 
]
·· 
[
‚‚ 	
HttpPost
‚‚	 
]
‚‚ 
public
„„ 
async
„„ 
Task
„„ 
<
„„  
RepositoryResponse
„„ ,
<
„„, -
bool
„„- 1
>
„„1 2
>
„„2 3
ManageUserInRole
„„4 D
(
„„D E
UserRoleModel
„„E R
model
„„S X
)
„„X Y
{
‰‰ 	
var
ÂÂ 
role
ÂÂ 
=
ÂÂ 
await
ÂÂ 
_roleManager
ÂÂ )
.
ÂÂ) *
FindByIdAsync
ÂÂ* 7
(
ÂÂ7 8
model
ÂÂ8 =
.
ÂÂ= >
RoleId
ÂÂ> D
)
ÂÂD E
;
ÂÂE F
var
ÊÊ 
result
ÊÊ 
=
ÊÊ 
new
ÊÊ  
RepositoryResponse
ÊÊ /
<
ÊÊ/ 0
bool
ÊÊ0 4
>
ÊÊ4 5
(
ÊÊ5 6
)
ÊÊ6 7
;
ÊÊ7 8
List
ËË 
<
ËË 
string
ËË 
>
ËË 
errors
ËË 
=
ËË  !
new
ËË" %
List
ËË& *
<
ËË* +
string
ËË+ 1
>
ËË1 2
(
ËË2 3
)
ËË3 4
;
ËË4 5
if
ÍÍ 
(
ÍÍ 
role
ÍÍ 
==
ÍÍ 
null
ÍÍ 
)
ÍÍ 
{
ÎÎ 
errors
ÏÏ 
.
ÏÏ 
Add
ÏÏ 
(
ÏÏ 
$"
ÏÏ 
Role: 
ÏÏ #
{
ÏÏ# $
model
ÏÏ$ )
.
ÏÏ) *
RoleId
ÏÏ* 0
}
ÏÏ0 1
 does not exists
ÏÏ1 A
"
ÏÏA B
)
ÏÏB C
;
ÏÏC D
}
ÌÌ 
else
ÓÓ 
if
ÓÓ 
(
ÓÓ 
model
ÓÓ 
.
ÓÓ 
IsUserInRole
ÓÓ '
)
ÓÓ' (
{
ÔÔ 
var
 
appUser
 
=
 
await
 #
_userManager
$ 0
.
0 1
FindByIdAsync
1 >
(
> ?
model
? D
.
D E
UserId
E K
)
K L
;
L M
if
ÚÚ 
(
ÚÚ 
appUser
ÚÚ 
==
ÚÚ 
null
ÚÚ #
)
ÚÚ# $
{
ÛÛ 
errors
ÙÙ 
.
ÙÙ 
Add
ÙÙ 
(
ÙÙ 
$"
ÙÙ !
User: 
ÙÙ! '
{
ÙÙ' (
model
ÙÙ( -
.
ÙÙ- .
UserId
ÙÙ. 4
}
ÙÙ4 5
 does not exists
ÙÙ5 E
"
ÙÙE F
)
ÙÙF G
;
ÙÙG H
}
ıı 
else
ˆˆ 
if
ˆˆ 
(
ˆˆ 
!
ˆˆ 
(
ˆˆ 
await
ˆˆ  
_userManager
ˆˆ! -
.
ˆˆ- .
IsInRoleAsync
ˆˆ. ;
(
ˆˆ; <
appUser
ˆˆ< C
,
ˆˆC D
role
ˆˆE I
.
ˆˆI J
Name
ˆˆJ N
)
ˆˆN O
)
ˆˆO P
)
ˆˆP Q
{
˜˜ 
var
¯¯ 
	addResult
¯¯ !
=
¯¯" #
await
¯¯$ )
_userManager
¯¯* 6
.
¯¯6 7
AddToRoleAsync
¯¯7 E
(
¯¯E F
appUser
¯¯F M
,
¯¯M N
role
¯¯O S
.
¯¯S T
Name
¯¯T X
)
¯¯X Y
;
¯¯Y Z
if
˙˙ 
(
˙˙ 
!
˙˙ 
	addResult
˙˙ "
.
˙˙" #
	Succeeded
˙˙# ,
)
˙˙, -
{
˚˚ 
errors
¸¸ 
.
¸¸ 
Add
¸¸ "
(
¸¸" #
$"
¸¸# %
User: 
¸¸% +
{
¸¸+ ,
model
¸¸, 1
.
¸¸1 2
UserId
¸¸2 8
}
¸¸8 9)
 could not be added to role
¸¸9 T
"
¸¸T U
)
¸¸U V
;
¸¸V W
}
˝˝ 
}
˛˛ 
}
ˇˇ 
else
ÄÄ 
{
ÅÅ 
var
ÇÇ 
appUser
ÇÇ 
=
ÇÇ 
await
ÇÇ #
_userManager
ÇÇ$ 0
.
ÇÇ0 1
FindByIdAsync
ÇÇ1 >
(
ÇÇ> ?
model
ÇÇ? D
.
ÇÇD E
UserId
ÇÇE K
)
ÇÇK L
;
ÇÇL M
if
ÑÑ 
(
ÑÑ 
appUser
ÑÑ 
==
ÑÑ 
null
ÑÑ #
)
ÑÑ# $
{
ÖÖ 
errors
ÜÜ 
.
ÜÜ 
Add
ÜÜ 
(
ÜÜ 
$"
ÜÜ !
User: 
ÜÜ! '
{
ÜÜ' (
model
ÜÜ( -
.
ÜÜ- .
UserId
ÜÜ. 4
}
ÜÜ4 5
 does not exists
ÜÜ5 E
"
ÜÜE F
)
ÜÜF G
;
ÜÜG H
}
áá 
var
ââ 
removeResult
ââ  
=
ââ! "
await
ââ# (
_userManager
ââ) 5
.
ââ5 6!
RemoveFromRoleAsync
ââ6 I
(
ââI J
appUser
ââJ Q
,
ââQ R
role
ââS W
.
ââW X
Name
ââX \
)
ââ\ ]
;
ââ] ^
if
ää 
(
ää 
!
ää 
removeResult
ää !
.
ää! "
	Succeeded
ää" +
)
ää+ ,
{
ãã 
errors
åå 
.
åå 
Add
åå 
(
åå 
$"
åå !
User: 
åå! '
{
åå' (
model
åå( -
.
åå- .
UserId
åå. 4
}
åå4 5-
 could not be removed from role
åå5 T
"
ååT U
)
ååU V
;
ååV W
}
çç 
}
éé 
result
èè 
.
èè 
	IsSucceed
èè 
=
èè 
errors
èè %
.
èè% &
Count
èè& +
==
èè, .
$num
èè/ 0
;
èè0 1
result
êê 
.
êê 
Data
êê 
=
êê 
errors
êê  
.
êê  !
Count
êê! &
==
êê' )
$num
êê* +
;
êê+ ,
result
ëë 
.
ëë 
Errors
ëë 
=
ëë 
errors
ëë "
;
ëë" #
return
íí 
result
íí 
;
íí 
}
ìì 	
[
ññ 	
HttpPost
ññ	 
,
ññ 
HttpOptions
ññ 
]
ññ 
[
óó 	
Route
óó	 
(
óó 
$str
óó 
)
óó 
]
óó 
public
òò 
async
òò 
Task
òò 
<
òò  
RepositoryResponse
òò ,
<
òò, -
PaginationModel
òò- <
<
òò< =
InfoUserViewModel
òò= N
>
òòN O
>
òòO P
>
òòP Q
GetList
òòR Y
(
òòY Z
RequestPaging
òòZ g
request
òòh o
)
òòo p
{
ôô 	

Expression
öö 
<
öö 
Func
öö 
<
öö 
SiocCmsUser
öö '
,
öö' (
bool
öö) -
>
öö- .
>
öö. /
	predicate
öö0 9
=
öö: ;
model
öö< A
=>
ööB D
(
õõ 
!
õõ 
request
õõ 
.
õõ 
Status
õõ  
.
õõ  !
HasValue
õõ! )
||
õõ* ,
model
õõ- 2
.
õõ2 3
Status
õõ3 9
==
õõ: <
(
õõ= >
int
õõ> A
)
õõA B
request
õõB I
.
õõI J
Status
õõJ P
.
õõP Q
Value
õõQ V
)
õõV W
&&
úú 
(
úú 
string
úú 
.
úú  
IsNullOrWhiteSpace
úú -
(
úú- .
request
úú. 5
.
úú5 6
Keyword
úú6 =
)
úú= >
||
ùù 
(
ùù 
model
ûû 
.
ûû 
Username
ûû "
.
ûû" #
Contains
ûû# +
(
ûû+ ,
request
ûû, 3
.
ûû3 4
Keyword
ûû4 ;
)
ûû; <
||
üü 
model
üü 
.
üü 
	FirstName
üü %
.
üü% &
Contains
üü& .
(
üü. /
request
üü/ 6
.
üü6 7
Keyword
üü7 >
)
üü> ?
||
†† 
model
†† 
.
†† 
LastName
†† $
.
††$ %
Contains
††% -
(
††- .
request
††. 5
.
††5 6
Keyword
††6 =
)
††= >
)
°° 
)
¢¢ 
&&
££ 
(
££ 
!
££ 
request
££ 
.
££ 
FromDate
££ %
.
££% &
HasValue
££& .
||
§§ 
(
§§ 
model
§§ 
.
§§ 
CreatedDateTime
§§ -
>=
§§. 0
request
§§1 8
.
§§8 9
FromDate
§§9 A
.
§§A B
Value
§§B G
.
§§G H
ToUniversalTime
§§H W
(
§§W X
)
§§X Y
)
§§Y Z
)
•• 
&&
¶¶ 
(
¶¶ 
!
¶¶ 
request
¶¶ 
.
¶¶ 
ToDate
¶¶ #
.
¶¶# $
HasValue
¶¶$ ,
||
ßß 
(
ßß 
model
ßß 
.
ßß 
CreatedDateTime
ßß -
<=
ßß. 0
request
ßß1 8
.
ßß8 9
ToDate
ßß9 ?
.
ßß? @
Value
ßß@ E
.
ßßE F
ToUniversalTime
ßßF U
(
ßßU V
)
ßßV W
)
ßßW X
)
®® 
;
®® 
var
™™ 
data
™™ 
=
™™ 
await
™™ 
InfoUserViewModel
™™ .
.
™™. /

Repository
™™/ 9
.
™™9 :!
GetModelListByAsync
™™: M
(
™™M N
	predicate
™™N W
,
™™W X
request
™™Y `
.
™™` a
OrderBy
™™a h
,
™™h i
request
™™j q
.
™™q r
	Direction
™™r {
,
™™{ |
request™™} Ñ
.™™Ñ Ö
PageSize™™Ö ç
,™™ç é
request™™è ñ
.™™ñ ó
	PageIndex™™ó †
)™™† °
.™™° ¢
ConfigureAwait™™¢ ∞
(™™∞ ±
false™™± ∂
)™™∂ ∑
;™™∑ ∏
if
´´ 
(
´´ 
data
´´ 
.
´´ 
	IsSucceed
´´ 
)
´´ 
{
¨¨ 
data
≠≠ 
.
≠≠ 
Data
≠≠ 
.
≠≠ 
Items
≠≠ 
.
≠≠  
ForEach
≠≠  '
(
≠≠' (
a
≠≠( )
=>
≠≠* ,
{
ÆÆ 
a
ØØ 
.
ØØ 

DetailsUrl
ØØ  
=
ØØ! "
SWCmsHelper
ØØ# .
.
ØØ. /
GetRouterUrl
ØØ/ ;
(
ØØ; <
$str
∞∞ !
,
∞∞! "
new
∞∞# &
{
∞∞' (
a
∞∞) *
.
∞∞* +
Id
∞∞+ -
}
∞∞. /
,
∞∞/ 0
Request
∞∞1 8
,
∞∞8 9
Url
∞∞: =
)
∞∞= >
;
∞∞> ?
}
∞∞O P
)
±± 
;
±± 
}
≤≤ 
return
≥≥ 
data
≥≥ 
;
≥≥ 
}
¥¥ 	
private
∂∂ 
async
∂∂ 
Task
∂∂ 
<
∂∂ "
AccessTokenViewModel
∂∂ /
>
∂∂/ 0&
GenerateAccessTokenAsync
∂∂1 I
(
∂∂I J
ApplicationUser
∂∂J Y
user
∂∂Z ^
)
∂∂^ _
{
∑∑ 	
string
∏∏ 
refreshToken
∏∏ 
=
∏∏  !
Guid
∏∏" &
.
∏∏& '
NewGuid
∏∏' .
(
∏∏. /
)
∏∏/ 0
.
∏∏0 1
ToString
∏∏1 9
(
∏∏9 :
)
∏∏: ;
;
∏∏; <
var
ππ 
dtIssued
ππ 
=
ππ 
DateTime
ππ #
.
ππ# $
UtcNow
ππ$ *
;
ππ* +
var
∫∫ 
	dtExpired
∫∫ 
=
∫∫ 
dtIssued
∫∫ $
.
∫∫$ %

AddMinutes
∫∫% /
(
∫∫/ 0
SWCmsConstants
∫∫0 >
.
∫∫> ?
AuthConfiguration
∫∫? P
.
∫∫P Q"
AuthCookieExpiration
∫∫Q e
)
∫∫e f
;
∫∫f g
var
ªª #
dtRefreshTokenExpired
ªª %
=
ªª& '
dtIssued
ªª( 0
.
ªª0 1
AddDays
ªª1 8
(
ªª8 9
SWCmsConstants
ªª9 G
.
ªªG H
AuthConfiguration
ªªH Y
.
ªªY Z"
AuthCookieExpiration
ªªZ n
)
ªªn o
;
ªªo p#
RefreshTokenViewModel
ΩΩ !
vmRefreshToken
ΩΩ" 0
=
ΩΩ1 2
new
ΩΩ3 6#
RefreshTokenViewModel
ΩΩ7 L
(
ΩΩL M
new
ææ 
RefreshTokens
ææ )
(
ææ) *
)
ææ* +
{
øø 
Id
¿¿ 
=
¿¿  
refreshToken
¿¿! -
,
¿¿- .
Email
¡¡ !
=
¡¡" #
user
¡¡$ (
.
¡¡( )
Email
¡¡) .
,
¡¡. /
	IssuedUtc
¬¬ %
=
¬¬& '
dtIssued
¬¬( 0
,
¬¬0 1
ClientId
√√ $
=
√√% &
SWCmsConstants
√√' 5
.
√√5 6
AuthConfiguration
√√6 G
.
√√G H
Audience
√√H P
,
√√P Q
Username
ƒƒ $
=
ƒƒ% &
user
ƒƒ' +
.
ƒƒ+ ,
UserName
ƒƒ, 4
,
ƒƒ4 5

ExpiresUtc
∆∆ &
=
∆∆' (#
dtRefreshTokenExpired
∆∆) >
}
«« 
)
«« 
;
«« 
var
…… $
saveRefreshTokenResult
…… &
=
……' (
await
……) .
vmRefreshToken
……/ =
.
……= >
SaveModelAsync
……> L
(
……L M
)
……M N
;
……N O"
AccessTokenViewModel
    
token
  ! &
=
  ' (
new
  ) ,"
AccessTokenViewModel
  - A
(
  A B
)
  B C
{
ÀÀ 
Access_token
ÃÃ 
=
ÃÃ 
await
ÃÃ $ 
GenerateTokenAsync
ÃÃ% 7
(
ÃÃ7 8
user
ÃÃ8 <
,
ÃÃ< =
	dtExpired
ÃÃ> G
,
ÃÃG H
refreshToken
ÃÃI U
)
ÃÃU V
,
ÃÃV W
Refresh_token
ÕÕ 
=
ÕÕ $
saveRefreshTokenResult
ÕÕ  6
.
ÕÕ6 7
Data
ÕÕ7 ;
.
ÕÕ; <
Id
ÕÕ< >
,
ÕÕ> ?

Token_type
ŒŒ 
=
ŒŒ 
SWCmsConstants
ŒŒ +
.
ŒŒ+ ,
AuthConfiguration
ŒŒ, =
.
ŒŒ= >
	TokenType
ŒŒ> G
,
ŒŒG H

Expires_in
œœ 
=
œœ 
SWCmsConstants
œœ +
.
œœ+ ,
AuthConfiguration
œœ, =
.
œœ= >"
AuthCookieExpiration
œœ> R
,
œœR S
Issued
—— 
=
—— 
dtIssued
—— !
,
——! "
Expires
““ 
=
““ 
	dtExpired
““ #
,
““# $
}
”” 
;
”” 
return
‘‘ 
token
‘‘ 
;
‘‘ 
}
’’ 	
private
◊◊ 
async
◊◊ 
Task
◊◊ 
<
◊◊ 
string
◊◊ !
>
◊◊! " 
GenerateTokenAsync
◊◊# 5
(
◊◊5 6
ApplicationUser
◊◊6 E
user
◊◊F J
,
◊◊J K
DateTime
◊◊L T
expires
◊◊U \
,
◊◊\ ]
string
◊◊^ d
refreshToken
◊◊e q
)
◊◊q r
{
ÿÿ 	
List
ŸŸ 
<
ŸŸ 
Claim
ŸŸ 
>
ŸŸ 
claims
ŸŸ 
=
ŸŸ  
await
ŸŸ! &
GetClaimsAsync
ŸŸ' 5
(
ŸŸ5 6
user
ŸŸ6 :
)
ŸŸ: ;
;
ŸŸ; <
claims
⁄⁄ 
.
⁄⁄ 
AddRange
⁄⁄ 
(
⁄⁄ 
new
⁄⁄ 
[
⁄⁄  
]
⁄⁄  !
{
€€ 
new
‹‹ 
Claim
‹‹ 
(
‹‹ 
$str
‹‹ "
,
‹‹" #
user
‹‹$ (
.
‹‹( )
Id
‹‹) +
.
‹‹+ ,
ToString
‹‹, 4
(
‹‹4 5
)
‹‹5 6
)
‹‹6 7
,
‹‹7 8
new
›› 
Claim
›› 
(
›› 
$str
›› ,
,
››, -
refreshToken
››. :
)
››: ;
}
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ 
JwtSecurityToken
ﬂﬂ 
jwtSecurityToken
ﬂﬂ -
=
ﬂﬂ. /
new
ﬂﬂ0 3
JwtSecurityToken
ﬂﬂ4 D
(
ﬂﬂD E
issuer
‡‡ 
:
‡‡ 
SWCmsConstants
‡‡ &
.
‡‡& '
JWTSettings
‡‡' 2
.
‡‡2 3
ISSUER
‡‡3 9
,
‡‡9 :
audience
·· 
:
·· 
SWCmsConstants
·· (
.
··( )
JWTSettings
··) 4
.
··4 5
AUDIENCE
··5 =
,
··= >
	notBefore
‚‚ 
:
‚‚ 
DateTime
‚‚ #
.
‚‚# $
UtcNow
‚‚$ *
,
‚‚* +
claims
„„ 
:
„„ 
claims
„„ 
,
„„ 
expires
ÂÂ 
:
ÂÂ 
expires
ÂÂ  
,
ÂÂ  ! 
signingCredentials
ÊÊ "
:
ÊÊ" #
new
ÊÊ$ ' 
SigningCredentials
ÊÊ( :
(
ÊÊ: ;
JwtSecurityKey
ÊÊ; I
.
ÊÊI J
Create
ÊÊJ P
(
ÊÊP Q
SWCmsConstants
ÊÊQ _
.
ÊÊ_ `
JWTSettings
ÊÊ` k
.
ÊÊk l

SECRET_KEY
ÊÊl v
)
ÊÊv w
,
ÊÊw x!
SecurityAlgorithmsÊÊy ã
.ÊÊã å

HmacSha256ÊÊå ñ
)ÊÊñ ó
)ÊÊó ò
;ÊÊò ô
return
ÁÁ 
new
ÁÁ %
JwtSecurityTokenHandler
ÁÁ .
(
ÁÁ. /
)
ÁÁ/ 0
.
ÁÁ0 1

WriteToken
ÁÁ1 ;
(
ÁÁ; <
jwtSecurityToken
ÁÁ< L
)
ÁÁL M
;
ÁÁM N
}
ËË 	
	protected
ÍÍ 
async
ÍÍ 
Task
ÍÍ 
<
ÍÍ 
List
ÍÍ !
<
ÍÍ! "
Claim
ÍÍ" '
>
ÍÍ' (
>
ÍÍ( )
GetClaimsAsync
ÍÍ* 8
(
ÍÍ8 9
ApplicationUser
ÍÍ9 H
user
ÍÍI M
)
ÍÍM N
{
ÎÎ 	
List
ÏÏ 
<
ÏÏ 
Claim
ÏÏ 
>
ÏÏ 
claims
ÏÏ 
=
ÏÏ  
new
ÏÏ! $
List
ÏÏ% )
<
ÏÏ) *
Claim
ÏÏ* /
>
ÏÏ/ 0
(
ÏÏ0 1
)
ÏÏ1 2
;
ÏÏ2 3
var
ÌÌ 
	userRoles
ÌÌ 
=
ÌÌ 
await
ÌÌ !
_userManager
ÌÌ" .
.
ÌÌ. /
GetRolesAsync
ÌÌ/ <
(
ÌÌ< =
user
ÌÌ= A
)
ÌÌA B
;
ÌÌB C
foreach
ÓÓ 
(
ÓÓ 
var
ÓÓ 
claim
ÓÓ 
in
ÓÓ !
user
ÓÓ" &
.
ÓÓ& '
Claims
ÓÓ' -
)
ÓÓ- .
{
ÔÔ 
claims
 
.
 
Add
 
(
 
CreateClaim
 &
(
& '
claim
' ,
.
, -
	ClaimType
- 6
,
6 7
claim
8 =
.
= >

ClaimValue
> H
)
H I
)
I J
;
J K
}
ÒÒ 
foreach
ÛÛ 
(
ÛÛ 
var
ÛÛ 
userRole
ÛÛ !
in
ÛÛ" $
	userRoles
ÛÛ% .
)
ÛÛ. /
{
ÙÙ 
claims
ıı 
.
ıı 
Add
ıı 
(
ıı 
new
ıı 
Claim
ıı $
(
ıı$ %

ClaimTypes
ıı% /
.
ıı/ 0
Role
ıı0 4
,
ıı4 5
userRole
ıı6 >
)
ıı> ?
)
ıı? @
;
ıı@ A
var
ˆˆ 
role
ˆˆ 
=
ˆˆ 
await
ˆˆ  
_roleManager
ˆˆ! -
.
ˆˆ- .
FindByNameAsync
ˆˆ. =
(
ˆˆ= >
userRole
ˆˆ> F
)
ˆˆF G
;
ˆˆG H
if
˜˜ 
(
˜˜ 
role
˜˜ 
!=
˜˜ 
null
˜˜  
)
˜˜  !
{
¯¯ 
var
˘˘ 

roleClaims
˘˘ "
=
˘˘# $
await
˘˘% *
_roleManager
˘˘+ 7
.
˘˘7 8
GetClaimsAsync
˘˘8 F
(
˘˘F G
role
˘˘G K
)
˘˘K L
;
˘˘L M
foreach
˙˙ 
(
˙˙ 
Claim
˙˙ "
	roleClaim
˙˙# ,
in
˙˙- /

roleClaims
˙˙0 :
)
˙˙: ;
{
˚˚ 
claims
¸¸ 
.
¸¸ 
Add
¸¸ "
(
¸¸" #
	roleClaim
¸¸# ,
)
¸¸, -
;
¸¸- .
}
˝˝ 
}
˛˛ 
}
ˇˇ 
return
ÄÄ 
claims
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
	protected
ÉÉ 
Claim
ÉÉ 
CreateClaim
ÉÉ #
(
ÉÉ# $
string
ÉÉ$ *
type
ÉÉ+ /
,
ÉÉ/ 0
string
ÉÉ1 7
value
ÉÉ8 =
)
ÉÉ= >
{
ÑÑ 	
return
ÖÖ 
new
ÖÖ 
Claim
ÖÖ 
(
ÖÖ 
type
ÖÖ !
,
ÖÖ! "
value
ÖÖ# (
,
ÖÖ( )
ClaimValueTypes
ÖÖ* 9
.
ÖÖ9 :
String
ÖÖ: @
)
ÖÖ@ A
;
ÖÖA B
}
ÜÜ 	
}
áá 
}àà Ø⁄
]E:\_Workspace\Github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiArticleController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Route 

(
 
$str "
)" #
]# $
public   

class    
ApiArticleController   %
:  & '
BaseApiController!! 
<!! 
SiocCmsContext!! (
,!!( )
SiocArticle!!* 5
>!!5 6
{"" 
public##  
ApiArticleController## #
(### $
IHostingEnvironment##$ 7
env##8 ;
)##; <
:##= >
base##? C
(##C D
env##D G
)##G H
{$$ 	
}%% 	
[** 	
HttpGet**	 
]** 
[++ 	
Route++	 
(++ 
$str++ (
)++( )
]++) *
public,, 
async,, 
Task,, 
<,, 
JObject,, !
>,,! "
	BEDetails,,# ,
(,,, -
string,,- 3
viewType,,4 <
,,,< =
string,,> D
id,,E G
),,G H
{-- 	
switch.. 
(.. 
viewType.. 
).. 
{// 
case00 
$str00 
:00 
var11 
	spaResult11 !
=11" #
await11$ )
SpaArticleViewModel11* =
.11= >

Repository11> H
.11H I
GetSingleModelAsync11I \
(11\ ]
model11] b
=>11c e
model11f k
.11k l
Id11l n
==11o q
id11r t
&&11u w
model11x }
.11} ~
Specificulture	11~ å
==
11ç è
_lang
11ê ï
)
11ï ñ
.
11ñ ó
ConfigureAwait
11ó •
(
11• ¶
false
11¶ ´
)
11´ ¨
;
11¨ ≠
return22 
JObject22 "
.22" #

FromObject22# -
(22- .
	spaResult22. 7
)227 8
;228 9
case44 
$str44 
:44 
var55 
beResult55  
=55! "
await55# (
BEArticleViewModel55) ;
.55; <

Repository55< F
.55F G
GetSingleModelAsync55G Z
(55Z [
model55[ `
=>55a c
model55d i
.55i j
Id55j l
==55m o
id55p r
&&55s u
model55v {
.55{ |
Specificulture	55| ä
==
55ã ç
_lang
55é ì
)
55ì î
.
55î ï
ConfigureAwait
55ï £
(
55£ §
false
55§ ©
)
55© ™
;
55™ ´
return66 
JObject66 "
.66" #

FromObject66# -
(66- .
beResult66. 6
)666 7
;667 8
default88 
:88 
var99 
feResult99  
=99! "
await99# (
FEArticleViewModel99) ;
.99; <

Repository99< F
.99F G
GetSingleModelAsync99G Z
(99Z [
model99[ `
=>99a c
model99d i
.99i j
Id99j l
==99m o
id99p r
&&99s u
model99v {
.99{ |
Specificulture	99| ä
==
99ã ç
_lang
99é ì
)
99ì î
.
99î ï
ConfigureAwait
99ï £
(
99£ §
false
99§ ©
)
99© ™
;
99™ ´
return:: 
JObject:: "
.::" #

FromObject::# -
(::- .
feResult::. 6
)::6 7
;::7 8
};; 
}<< 	
[?? 	
HttpGet??	 
]?? 
[@@ 	
Route@@	 
(@@ 
$str@@ 
)@@ 
]@@ 
publicAA 
RepositoryResponseAA !
<AA! "
BEArticleViewModelAA" 4
>AA4 5
CreateAA6 <
(AA< =
)AA= >
{BB 	
SiocArticleCC 
articleCC 
=CC  !
newCC" %
SiocArticleCC& 1
(CC1 2
)CC2 3
{DD 
SpecificultureFF 
=FF  
_langFF! &
}GG 
;GG 
returnHH 
newHH 
RepositoryResponseHH )
<HH) *
BEArticleViewModelHH* <
>HH< =
(HH= >
)HH> ?
{II 
	IsSucceedJJ 
=JJ 
trueJJ  
,JJ  !
DataKK 
=KK 
newKK 
BEArticleViewModelKK -
(KK- .
articleKK. 5
)KK5 6
{KK7 8
DomainKK9 ?
=KK@ A
thisKKB F
.KKF G
_domainKKG N
}KKO P
}LL 
;LL 
}MM 	
[PP 	
HttpGetPP	 
]PP 
[QQ 	
RouteQQ	 
(QQ 
$strQQ 
)QQ 
]QQ 
publicRR 
asyncRR 
TaskRR 
<RR 
RepositoryResponseRR ,
<RR, - 
InfoArticleViewModelRR- A
>RRA B
>RRB C
RecycleRRD K
(RRK L
stringRRL R
idRRS U
)RRU V
{SS 	
varTT 

getArticleTT 
=TT  
InfoArticleViewModelTT 1
.TT1 2

RepositoryTT2 <
.TT< =
GetSingleModelTT= K
(TTK L
aTTL M
=>TTN P
aTTQ R
.TTR S
IdTTS U
==TTV X
idTTY [
)TT[ \
;TT\ ]
ifUU 
(UU 

getArticleUU 
.UU 
	IsSucceedUU $
)UU$ %
{VV 
varWW 
dataWW 
=WW 

getArticleWW %
.WW% &
DataWW& *
;WW* +
dataXX 
.XX 
StatusXX 
=XX 
SWStatusXX &
.XX& '
DeletedXX' .
;XX. /
returnYY 
awaitYY 
dataYY !
.YY! "
SaveModelAsyncYY" 0
(YY0 1
)YY1 2
.YY2 3
ConfigureAwaitYY3 A
(YYA B
falseYYB G
)YYG H
;YYH I
}ZZ 
else[[ 
{\\ 
return]] 
new]] 
RepositoryResponse]] -
<]]- . 
InfoArticleViewModel]]. B
>]]B C
(]]C D
)]]D E
{]]F G
	IsSucceed]]H Q
=]]R S
false]]T Y
}]]Z [
;]][ \
}^^ 
}__ 	
[bb 	
HttpGetbb	 
]bb 
[cc 	
Routecc	 
(cc 
$strcc 
)cc 
]cc 
publicdd 
asyncdd 
Taskdd 
<dd 
RepositoryResponsedd ,
<dd, - 
InfoArticleViewModeldd- A
>ddA B
>ddB C
RestoreddD K
(ddK L
stringddL R
idddS U
)ddU V
{ee 	
varff 

getArticleff 
=ff  
InfoArticleViewModelff 1
.ff1 2

Repositoryff2 <
.ff< =
GetSingleModelff= K
(ffK L
affL M
=>ffN P
affQ R
.ffR S
IdffS U
==ffV X
idffY [
)ff[ \
;ff\ ]
ifgg 
(gg 

getArticlegg 
.gg 
	IsSucceedgg $
)gg$ %
{hh 
varii 
dataii 
=ii 

getArticleii %
.ii% &
Dataii& *
;ii* +
datajj 
.jj 
Statusjj 
=jj 
SWStatusjj &
.jj& '
Previewjj' .
;jj. /
returnkk 
awaitkk 
datakk !
.kk! "
SaveModelAsynckk" 0
(kk0 1
)kk1 2
.kk2 3
ConfigureAwaitkk3 A
(kkA B
falsekkB G
)kkG H
;kkH I
}ll 
elsemm 
{nn 
returnoo 
newoo 
RepositoryResponseoo -
<oo- . 
InfoArticleViewModeloo. B
>ooB C
(ooC D
)ooD E
{ooF G
	IsSucceedooH Q
=ooR S
falseooT Y
}ooZ [
;oo[ \
}pp 
}qq 	
[tt 	
HttpGettt	 
]tt 
[uu 	
Routeuu	 
(uu 
$struu 
)uu 
]uu 
publicvv 
asyncvv 
Taskvv 
<vv 
RepositoryResponsevv ,
<vv, -
boolvv- 1
>vv1 2
>vv2 3
Deletevv4 :
(vv: ;
stringvv; A
idvvB D
)vvD E
{ww 	
varxx 

getArticlexx 
=xx 
BEArticleViewModelxx /
.xx/ 0

Repositoryxx0 :
.xx: ;
GetSingleModelxx; I
(xxI J
axxJ K
=>xxL N
axxO P
.xxP Q
IdxxQ S
==xxT V
idxxW Y
&&xxZ \
axx] ^
.xx^ _
Specificulturexx_ m
==xxn p
_langxxq v
)xxv w
;xxw x
ifyy 
(yy 

getArticleyy 
.yy 
	IsSucceedyy $
)yy$ %
{zz 
return{{ 
await{{ 

getArticle{{ '
.{{' (
Data{{( ,
.{{, -
RemoveModelAsync{{- =
({{= >
true{{> B
){{B C
.{{C D
ConfigureAwait{{D R
({{R S
false{{S X
){{X Y
;{{Y Z
}|| 
else}} 
{~~ 
return 
new 
RepositoryResponse -
<- .
bool. 2
>2 3
(3 4
)4 5
{6 7
	IsSucceed8 A
=B C
falseD I
}J K
;K L
}
ÄÄ 
}
ÅÅ 	
[
ÑÑ 	
HttpGet
ÑÑ	 
]
ÑÑ 
[
ÜÜ 	
Route
ÜÜ	 
(
ÜÜ 
$str
ÜÜ 
)
ÜÜ 
]
ÜÜ 
[
áá 	
Route
áá	 
(
áá 
$str
áá 6
)
áá6 7
]
áá7 8
[
àà 	
Route
àà	 
(
àà 
$str
àà +
)
àà+ ,
]
àà, -
[
ââ 	
Route
ââ	 
(
ââ 
$str
ââ L
)
ââL M
]
ââM N
public
ää 
async
ää 
Task
ää 
<
ää  
RepositoryResponse
ää ,
<
ää, -
PaginationModel
ää- <
<
ää< ="
InfoArticleViewModel
ää= Q
>
ääQ R
>
ääR S
>
ääS T
Get
ääU X
(
ääX Y
int
ääY \
?
ää\ ]
pageSize
ää^ f
=
ääg h
$num
ääi k
,
ääk l
int
ääm p
?
ääp q
	pageIndex
äär {
=
ää| }
$num
ää~ 
,ää Ä
stringääÅ á
orderByääà è
=ääê ë
$strääí ñ
,ääñ ó 
OrderByDirectionääò ®
	directionää© ≤
=ää≥ ¥ 
OrderByDirectionääµ ≈
.ää≈ ∆
	Ascendingää∆ œ
)ääœ –
{
ãã 	
var
åå 
data
åå 
=
åå 
await
åå "
InfoArticleViewModel
åå 1
.
åå1 2

Repository
åå2 <
.
åå< =!
GetModelListByAsync
åå= P
(
ååP Q
m
çç 
=>
çç 
m
çç 
.
çç 
Status
çç 
!=
çç  
(
çç! "
int
çç" %
)
çç% &
SWStatus
çç& .
.
çç. /
Deleted
çç/ 6
&&
çç7 9
m
çç: ;
.
çç; <
Specificulture
çç< J
==
ççK M
_lang
ççN S
,
ççS T
orderBy
ççU \
,
çç\ ]
	direction
çç^ g
,
ççg h
pageSize
ççi q
,
ççq r
	pageIndex
ççs |
)
çç| }
.
çç} ~
ConfigureAwaitçç~ å
(ççå ç
falseççç í
)ççí ì
;ççì î
if
éé 
(
éé 
data
éé 
.
éé 
	IsSucceed
éé 
)
éé 
{
èè 
data
êê 
.
êê 
Data
êê 
.
êê 
Items
êê 
.
êê  
ForEach
êê  '
(
êê' (
a
êê( )
=>
êê* ,
a
êê- .
.
êê. /

DetailsUrl
êê/ 9
=
êê: ;
SWCmsHelper
êê< G
.
êêG H
GetRouterUrl
êêH T
(
êêT U
$str
êêU ^
,
êê^ _
new
êê` c
{
êêd e
a
êêf g
.
êêg h
SeoName
êêh o
}
êêp q
,
êêq r
Request
êês z
,
êêz {
Url
êê| 
)êê Ä
)êêÄ Å
;êêÅ Ç
}
ëë 
return
íí 
data
íí 
;
íí 
}
ìì 	
[
ññ 	
HttpGet
ññ	 
]
ññ 
[
óó 	
Route
óó	 
(
óó 
$str
óó !
)
óó! "
]
óó" #
[
òò 	
Route
òò	 
(
òò 
$str
òò B
)
òòB C
]
òòC D
[
ôô 	
Route
ôô	 
(
ôô 
$str
ôô X
)
ôôX Y
]
ôôY Z
public
öö 
async
öö 
Task
öö 
<
öö  
RepositoryResponse
öö ,
<
öö, -
PaginationModel
öö- <
<
öö< ="
InfoArticleViewModel
öö= Q
>
ööQ R
>
ööR S
>
ööS T
Search
ööU [
(
öö[ \
string
öö\ b
keyword
ööc j
=
öök l
null
ööm q
,
ööq r
int
öös v
?
ööv w
pageSizeööx Ä
=ööÅ Ç
nullööÉ á
,ööá à
intööâ å
?ööå ç
	pageIndexööé ó
=ööò ô
nullööö û
,ööû ü
stringöö† ¶
orderByööß Æ
=ööØ ∞
$ströö± µ
,ööµ ∂ 
OrderByDirectionöö∑ «
	directionöö» —
=öö“ ” 
OrderByDirectionöö‘ ‰
.öö‰ Â
	AscendingööÂ Ó
)ööÓ Ô
{
õõ 	

Expression
úú 
<
úú 
Func
úú 
<
úú 
SiocArticle
úú '
,
úú' (
bool
úú) -
>
úú- .
>
úú. /
	predicate
úú0 9
=
úú: ;
model
úú< A
=>
úúB D
model
ùù 
.
ùù 
Specificulture
ùù $
==
ùù% '
_lang
ùù( -
&&
ûû 
model
ûû 
.
ûû 
Status
ûû 
!=
ûû  "
(
ûû# $
int
ûû$ '
)
ûû' (
SWStatus
ûû( 0
.
ûû0 1
Deleted
ûû1 8
&&
üü 
(
üü 
string
üü 
.
üü  
IsNullOrWhiteSpace
üü -
(
üü- .
keyword
üü. 5
)
üü5 6
||
†† 
(
†† 
model
†† 
.
†† 
Title
†† #
.
††# $
Contains
††$ ,
(
††, -
keyword
††- 4
)
††4 5
||
°° 
model
°° 
.
°° 
Content
°° $
.
°°$ %
Contains
°°% -
(
°°- .
keyword
°°. 5
)
°°5 6
)
°°6 7
)
°°7 8
;
°°8 9
var
££ 
data
££ 
=
££ 
await
££ "
InfoArticleViewModel
££ 1
.
££1 2

Repository
££2 <
.
££< =!
GetModelListByAsync
££= P
(
££P Q
	predicate
££Q Z
,
££Z [
orderBy
££\ c
,
££c d
	direction
££e n
,
££n o
pageSize
££p x
,
££x y
	pageIndex££z É
)££É Ñ
.££Ñ Ö
ConfigureAwait££Ö ì
(££ì î
false££î ô
)££ô ö
;££ö õ
return
™™ 
data
™™ 
;
™™ 
}
´´ 	
[
ÆÆ 	
HttpGet
ÆÆ	 
]
ÆÆ 
[
ØØ 	
Route
ØØ	 
(
ØØ 
$str
ØØ  
)
ØØ  !
]
ØØ! "
[
∞∞ 	
Route
∞∞	 
(
∞∞ 
$str
∞∞ 7
)
∞∞7 8
]
∞∞8 9
[
±± 	
Route
±±	 
(
±± 
$str
±± A
)
±±A B
]
±±B C
[
≤≤ 	
Route
≤≤	 
(
≤≤ 
$str
≤≤ W
)
≤≤W X
]
≤≤X Y
public
≥≥ 
async
≥≥ 
Task
≥≥ 
<
≥≥  
RepositoryResponse
≥≥ ,
<
≥≥, -
PaginationModel
≥≥- <
<
≥≥< ="
InfoArticleViewModel
≥≥= Q
>
≥≥Q R
>
≥≥R S
>
≥≥S T
Draft
≥≥U Z
(
≥≥Z [
string
¥¥ 
keyword
¥¥ 
=
¥¥ 
null
¥¥ !
,
¥¥! "
int
¥¥# &
?
¥¥& '
pageSize
¥¥( 0
=
¥¥1 2
null
¥¥3 7
,
¥¥7 8
int
¥¥9 <
?
¥¥< =
	pageIndex
¥¥> G
=
¥¥H I
null
¥¥J N
,
¥¥N O
string
¥¥P V
orderBy
¥¥W ^
=
¥¥_ `
$str
¥¥a e
,
µµ 
OrderByDirection
µµ 
	direction
µµ (
=
µµ) *
OrderByDirection
µµ+ ;
.
µµ; <
	Ascending
µµ< E
)
µµE F
{
∂∂ 	

Expression
∑∑ 
<
∑∑ 
Func
∑∑ 
<
∑∑ 
SiocArticle
∑∑ '
,
∑∑' (
bool
∑∑) -
>
∑∑- .
>
∑∑. /
	predicate
∑∑0 9
=
∑∑: ;
model
∑∑< A
=>
∑∑B D
model
∏∏ 
.
∏∏ 
Specificulture
∏∏  
==
∏∏! #
_lang
∏∏$ )
&&
∫∫ 
model
∫∫ 
.
∫∫ 
Status
∫∫ 
!=
∫∫ 
(
∫∫  
int
∫∫  #
)
∫∫# $
SWStatus
∫∫$ ,
.
∫∫, -
Deleted
∫∫- 4
&&
ªª 
(
ªª 
string
ºº 
.
ºº  
IsNullOrWhiteSpace
ºº %
(
ºº% &
keyword
ºº& -
)
ºº- .
||
ΩΩ 
(
ΩΩ 
model
ΩΩ 
.
ΩΩ 
Title
ΩΩ 
.
ΩΩ  
Contains
ΩΩ  (
(
ΩΩ( )
keyword
ΩΩ) 0
)
ΩΩ0 1
||
ΩΩ2 4
model
ΩΩ5 :
.
ΩΩ: ;
Content
ΩΩ; B
.
ΩΩB C
Contains
ΩΩC K
(
ΩΩK L
keyword
ΩΩL S
)
ΩΩS T
)
ΩΩT U
)
ææ 
;
ææ 
var
øø 
data
øø 
=
øø 
await
øø "
InfoArticleViewModel
øø 1
.
øø1 2

Repository
øø2 <
.
øø< =!
GetModelListByAsync
øø= P
(
øøP Q
	predicate
øøQ Z
,
øøZ [
orderBy
øø\ c
,
øøc d
	direction
øøe n
,
øøn o
pageSize
øøp x
,
øøx y
	pageIndexøøz É
)øøÉ Ñ
.øøÑ Ö
ConfigureAwaitøøÖ ì
(øøì î
falseøøî ô
)øøô ö
;øøö õ
return
∆∆ 
data
∆∆ 
;
∆∆ 
}
«« 	
[
ŒŒ 	
HttpPost
ŒŒ	 
,
ŒŒ 
HttpOptions
ŒŒ 
]
ŒŒ 
[
œœ 	
Route
œœ	 
(
œœ 
$str
œœ 
)
œœ 
]
œœ 
public
–– 
async
–– 
Task
–– 
<
––  
RepositoryResponse
–– ,
<
––, - 
BEArticleViewModel
––- ?
>
––? @
>
––@ A
Post
––B F
(
––F G
[
––G H
FromBody
––H P
]
––P Q 
BEArticleViewModel
––Q c
model
––d i
)
––i j
{
—— 	
if
““ 
(
““ 
model
““ 
!=
““ 
null
““ 
)
““ 
{
”” 
var
‘‘ 
result
‘‘ 
=
‘‘ 
await
‘‘ "
model
‘‘# (
.
‘‘( )
SaveModelAsync
‘‘) 7
(
‘‘7 8
true
‘‘8 <
)
‘‘< =
.
‘‘= >
ConfigureAwait
‘‘> L
(
‘‘L M
false
‘‘M R
)
‘‘R S
;
‘‘S T
if
’’ 
(
’’ 
result
’’ 
.
’’ 
	IsSucceed
’’ $
)
’’$ %
{
÷÷ 
result
◊◊ 
.
◊◊ 
Data
◊◊ 
.
◊◊  
Domain
◊◊  &
=
◊◊' (
this
◊◊) -
.
◊◊- .
_domain
◊◊. 5
;
◊◊5 6
}
ÿÿ 
return
ŸŸ 
result
ŸŸ 
;
ŸŸ 
}
⁄⁄ 
return
€€ 
new
€€  
RepositoryResponse
€€ )
<
€€) * 
BEArticleViewModel
€€* <
>
€€< =
(
€€= >
)
€€> ?
;
€€? @
}
‹‹ 	
[
ﬂﬂ 	
HttpPost
ﬂﬂ	 
,
ﬂﬂ 
HttpOptions
ﬂﬂ 
]
ﬂﬂ 
[
‡‡ 	
Route
‡‡	 
(
‡‡ 
$str
‡‡ 
)
‡‡ 
]
‡‡ 
public
·· 
async
·· 
Task
·· 
<
··  
RepositoryResponse
·· ,
<
··, -
bool
··- 1
>
··1 2
>
··2 3

SaveFields
··4 >
(
··> ?
string
··? E
id
··F H
,
··H I
[
··J K
FromBody
··K S
]
··S T
List
··T X
<
··X Y
EntityField
··Y d
>
··d e
fields
··f l
)
··l m
{
‚‚ 	
if
„„ 
(
„„ 
fields
„„ 
!=
„„ 
null
„„ 
)
„„ 
{
‰‰ 
foreach
ÂÂ 
(
ÂÂ 
var
ÂÂ 
property
ÂÂ %
in
ÂÂ& (
fields
ÂÂ) /
)
ÂÂ/ 0
{
ÊÊ 
var
ÁÁ 
result
ÁÁ 
=
ÁÁ  
await
ÁÁ! & 
BEArticleViewModel
ÁÁ' 9
.
ÁÁ9 :

Repository
ÁÁ: D
.
ÁÁD E
UpdateFieldsAsync
ÁÁE V
(
ÁÁV W
c
ÁÁW X
=>
ÁÁY [
c
ÁÁ\ ]
.
ÁÁ] ^
Id
ÁÁ^ `
==
ÁÁa c
id
ÁÁd f
,
ÁÁf g
fields
ÁÁh n
)
ÁÁn o
.
ÁÁo p
ConfigureAwait
ÁÁp ~
(
ÁÁ~ 
falseÁÁ Ñ
)ÁÁÑ Ö
;ÁÁÖ Ü
return
ÈÈ 
result
ÈÈ !
;
ÈÈ! "
}
ÍÍ 
}
ÎÎ 
return
ÏÏ 
new
ÏÏ  
RepositoryResponse
ÏÏ )
<
ÏÏ) *
bool
ÏÏ* .
>
ÏÏ. /
(
ÏÏ/ 0
)
ÏÏ0 1
;
ÏÏ1 2
}
ÌÌ 	
[
 	
HttpPost
	 
,
 
HttpOptions
 
]
 
[
ÒÒ 	
Route
ÒÒ	 
(
ÒÒ 
$str
ÒÒ 
)
ÒÒ 
]
ÒÒ 
public
ÚÚ 
async
ÚÚ 
Task
ÚÚ 
<
ÚÚ  
RepositoryResponse
ÚÚ ,
<
ÚÚ, -
PaginationModel
ÚÚ- <
<
ÚÚ< ="
InfoArticleViewModel
ÚÚ= Q
>
ÚÚQ R
>
ÚÚR S
>
ÚÚS T
GetList
ÚÚU \
(
ÚÚ\ ]
RequestPaging
ÚÚ] j
request
ÚÚk r
)
ÚÚr s
{
ÛÛ 	
string
ÙÙ 
domain
ÙÙ 
=
ÙÙ 
string
ÙÙ "
.
ÙÙ" #
Format
ÙÙ# )
(
ÙÙ) *
$str
ÙÙ* 5
,
ÙÙ5 6
Request
ÙÙ7 >
.
ÙÙ> ?
Scheme
ÙÙ? E
,
ÙÙE F
Request
ÙÙG N
.
ÙÙN O
Host
ÙÙO S
)
ÙÙS T
;
ÙÙT U

Expression
ˆˆ 
<
ˆˆ 
Func
ˆˆ 
<
ˆˆ 
SiocArticle
ˆˆ '
,
ˆˆ' (
bool
ˆˆ) -
>
ˆˆ- .
>
ˆˆ. /
	predicate
ˆˆ0 9
=
ˆˆ: ;
model
ˆˆ< A
=>
ˆˆB D
model
˜˜ 
.
˜˜ 
Specificulture
˜˜ $
==
˜˜% '
_lang
˜˜( -
&&
¯¯ 
(
¯¯ 
!
¯¯ 
request
¯¯ 
.
¯¯ 
Status
¯¯ #
.
¯¯# $
HasValue
¯¯$ ,
||
¯¯- /
model
¯¯0 5
.
¯¯5 6
Status
¯¯6 <
==
¯¯= ?
(
¯¯@ A
int
¯¯A D
)
¯¯D E
request
¯¯E L
.
¯¯L M
Status
¯¯M S
.
¯¯S T
Value
¯¯T Y
)
¯¯Y Z
&&
˘˘ 
(
˘˘ 
string
˘˘ 
.
˘˘  
IsNullOrWhiteSpace
˘˘ -
(
˘˘- .
request
˘˘. 5
.
˘˘5 6
Keyword
˘˘6 =
)
˘˘= >
||
˙˙ 
(
˙˙ 
model
˙˙ 
.
˙˙ 
Title
˙˙ 
.
˙˙  
Contains
˙˙  (
(
˙˙( )
request
˙˙) 0
.
˙˙0 1
Keyword
˙˙1 8
)
˙˙8 9
||
¸¸ 
model
¸¸ 
.
¸¸ 
Excerpt
¸¸  
.
¸¸  !
Contains
¸¸! )
(
¸¸) *
request
¸¸* 1
.
¸¸1 2
Keyword
¸¸2 9
)
¸¸9 :
)
¸¸: ;
)
¸¸; <
&&
˝˝ 
(
˝˝ 
!
˝˝ 
request
˝˝ 
.
˝˝ 
FromDate
˝˝ %
.
˝˝% &
HasValue
˝˝& .
||
˛˛ 
(
˛˛ 
model
˛˛ 
.
˛˛ 
CreatedDateTime
˛˛ -
>=
˛˛. 0
request
˛˛1 8
.
˛˛8 9
FromDate
˛˛9 A
.
˛˛A B
Value
˛˛B G
.
˛˛G H
ToUniversalTime
˛˛H W
(
˛˛W X
)
˛˛X Y
)
˛˛Y Z
)
ˇˇ 
&&
ÄÄ 
(
ÄÄ 
!
ÄÄ 
request
ÄÄ 
.
ÄÄ 
ToDate
ÄÄ #
.
ÄÄ# $
HasValue
ÄÄ$ ,
||
ÅÅ 
(
ÅÅ 
model
ÅÅ 
.
ÅÅ 
CreatedDateTime
ÅÅ -
<=
ÅÅ. 0
request
ÅÅ1 8
.
ÅÅ8 9
ToDate
ÅÅ9 ?
.
ÅÅ? @
Value
ÅÅ@ E
.
ÅÅE F
ToUniversalTime
ÅÅF U
(
ÅÅU V
)
ÅÅV W
)
ÅÅW X
)
ÇÇ 
;
ÇÇ 
var
ÑÑ 
data
ÑÑ 
=
ÑÑ 
await
ÑÑ "
InfoArticleViewModel
ÑÑ 1
.
ÑÑ1 2

Repository
ÑÑ2 <
.
ÑÑ< =!
GetModelListByAsync
ÑÑ= P
(
ÑÑP Q
	predicate
ÑÑQ Z
,
ÑÑZ [
request
ÑÑ\ c
.
ÑÑc d
OrderBy
ÑÑd k
,
ÑÑk l
request
ÑÑm t
.
ÑÑt u
	Direction
ÑÑu ~
,
ÑÑ~ 
requestÑÑÄ á
.ÑÑá à
PageSizeÑÑà ê
,ÑÑê ë
requestÑÑí ô
.ÑÑô ö
	PageIndexÑÑö £
)ÑÑ£ §
.ÑÑ§ •
ConfigureAwaitÑÑ• ≥
(ÑÑ≥ ¥
falseÑÑ¥ π
)ÑÑπ ∫
;ÑÑ∫ ª
if
ÖÖ 
(
ÖÖ 
data
ÖÖ 
.
ÖÖ 
	IsSucceed
ÖÖ 
)
ÖÖ 
{
ÜÜ 
data
áá 
.
áá 
Data
áá 
.
áá 
Items
áá 
.
áá  
ForEach
áá  '
(
áá' (
a
áá( )
=>
áá* ,
{
àà 
a
ââ 
.
ââ 

DetailsUrl
ââ  
=
ââ! "
SWCmsHelper
ââ# .
.
ââ. /
GetRouterUrl
ââ/ ;
(
ââ; <
$str
ää !
,
ää! "
new
ää# &
{
ää' (
a
ää) *
.
ää* +
SeoName
ää+ 2
}
ää3 4
,
ää4 5
Request
ää6 =
,
ää= >
Url
ää? B
)
ääB C
;
ääC D
a
ãã 
.
ãã 
Domain
ãã 
=
ãã 
domain
ãã %
;
ãã% &
}
åå 
)
çç 
;
çç 
}
éé 
return
èè 
data
èè 
;
èè 
}
êê 	
}
ìì 
}îî –ç
\E:\_Workspace\Github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiCommonController.cs
	namespace 	
Swastka
 
. 
IO 
. 
Cms 
. 
Api 
. 
Controllers (
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str 
) 
] 
public 

class 
ApiPortalController $
:% &
BaseApiController 
{ 
[   	
HttpGet  	 
]   
[!! 	
Route!!	 
(!! 
$str!! 
)!! 
]!! 
public"" 
RepositoryResponse"" !
<""! "!
SiteSettingsViewModel""" 7
>""7 8
Settings""9 A
(""A B
int""B E
id""F H
)""H I
{## 	!
SiteSettingsViewModel$$ !
settings$$" *
=$$+ ,
new$$- 0!
SiteSettingsViewModel$$1 F
($$F G
)$$G H
{%% 
Lang&& 
=&& 
_lang&& 
,&& 
Cultures'' 
='' !
GlobalLanguageService'' 0
.''0 1 
ListSupportedCulture''1 E
}(( 
;(( 
return)) 
new)) 
RepositoryResponse)) )
<))) *!
SiteSettingsViewModel))* ?
>))? @
())@ A
)))A B
{** 
	IsSucceed++ 
=++ 
true++  
,++  !
Data,, 
=,, 
settings,, 
}-- 
;-- 
}.. 	
[22 	
HttpGet22	 
]22 
[33 	
Route33	 
(33 
$str33 
)33 
]33 
public44 
async44 
Task44 
<44 
RepositoryResponse44 ,
<44, -
bool44- 1
>441 2
>442 3
DeleteAsync444 ?
(44? @
int44@ C
id44D F
)44F G
{55 	
var66 
getPage66 
=66 
await66 
FECategoryViewModel66 2
.662 3

Repository663 =
.66= >
GetSingleModelAsync66> Q
(66Q R
model77 
=>77 
model77 
.77 
Id77 !
==77" $
id77% '
&&77( *
model77+ 0
.770 1
Specificulture771 ?
==77@ B
_lang77C H
)77H I
;77I J
if88 
(88 
getPage88 
.88 
	IsSucceed88 !
)88! "
{99 
return;; 
await;; 
getPage;; $
.;;$ %
Data;;% )
.;;) *
RemoveModelAsync;;* :
(;;: ;
true;;; ?
);;? @
;;;@ A
}<< 
else== 
{>> 
return?? 
new?? 
RepositoryResponse?? -
<??- .
bool??. 2
>??2 3
(??3 4
)??4 5
{@@ 
	IsSucceedAA 
=AA 
falseAA  %
}BB 
;BB 
}CC 
}DD 	
[GG 	
HttpGetGG	 
]GG 
[HH 	
RouteHH	 
(HH 
$strHH %
)HH% &
]HH& '
publicII 
TaskII 
<II 
RepositoryResponseII &
<II& '
BECategoryViewModelII' :
>II: ;
>II; <
	BEDetailsII= F
(IIF G
intIIG J
idIIK M
)IIM N
{JJ 	
returnKK 
BECategoryViewModelKK &
.KK& '

RepositoryKK' 1
.KK1 2
GetSingleModelAsyncKK2 E
(KKE F
modelLL 
=>LL 
modelLL 
.LL 
IdLL !
==LL" $
idLL% '
&&LL( *
modelLL+ 0
.LL0 1
SpecificultureLL1 ?
==LL@ B
_langLLC H
)LLH I
;LLI J
}MM 	
[PP 	
HttpGetPP	 
]PP 
[QQ 	
RouteQQ	 
(QQ 
$strQQ 
)QQ  
]QQ  !
[RR 	
RouteRR	 
(RR 
$strRR +
)RR+ ,
]RR, -
publicSS 
TaskSS 
<SS 
RepositoryResponseSS &
<SS& '
FECategoryViewModelSS' :
>SS: ;
>SS; <
GetByArticleSS= I
(SSI J
intSSJ M
idSSN P
,SSP Q
stringSSR X
	articleIdSSY b
=SSc d
nullSSe i
)SSi j
{TT 	
returnUU 
FECategoryViewModelUU &
.UU& '

RepositoryUU' 1
.UU1 2
GetSingleModelAsyncUU2 E
(UUE F
modelVV 
=>VV 
modelVV 
.VV 
IdVV !
==VV" $
idVV% '
&&VV( *
modelVV+ 0
.VV0 1
SpecificultureVV1 ?
==VV@ B
_langVVC H
)VVH I
;VVI J
}WW 	
[ZZ 	
HttpGetZZ	 
]ZZ 
[[[ 	
Route[[	 
([[ 
$str[[ 
)[[ 
][[ 
[\\ 	
Route\\	 
(\\ 
$str\\ 6
)\\6 7
]\\7 8
[]] 	
Route]]	 
(]] 
$str]] +
)]]+ ,
]]], -
[^^ 	
Route^^	 
(^^ 
$str^^ L
)^^L M
]^^M N
public__ 
async__ 
Task__ 
<__ 
RepositoryResponse__ ,
<__, -
PaginationModel__- <
<__< =!
InfoCategoryViewModel__= R
>__R S
>__S T
>__T U
Get__V Y
(__Y Z
int`` 
?`` 
PageSize`` 
=`` 
$num`` 
,`` 
int``  #
?``# $
	PageIndex``% .
=``/ 0
$num``1 2
,``2 3
string``4 :
orderBy``; B
=``C D
$str``E I
,aa 
OrderByDirectionaa 
	directionaa (
=aa) *
OrderByDirectionaa+ ;
.aa; <
	Ascendingaa< E
)aaE F
{bb 	
varcc 
datacc 
=cc 
awaitcc !
InfoCategoryViewModelcc 2
.cc2 3

Repositorycc3 =
.cc= >
GetModelListByAsynccc> Q
(ccQ R
mccR S
=>ccT V
mccW X
.ccX Y
SpecificultureccY g
==cch j
_langcck p
,ccp q
orderByccr y
,ccy z
	direction	cc{ Ñ
,
ccÑ Ö
PageSize
ccÜ é
,
ccé è
	PageIndex
ccê ô
)
ccô ö
.
ccö õ
ConfigureAwait
ccõ ©
(
cc© ™
false
cc™ Ø
)
ccØ ∞
;
cc∞ ±
stringdd 
domaindd 
=dd 
stringdd "
.dd" #
Formatdd# )
(dd) *
$strdd* 5
,dd5 6
Requestdd7 >
.dd> ?
Schemedd? E
,ddE F
RequestddG N
.ddN O
HostddO S
)ddS T
;ddT U
returngg 
datagg 
;gg 
}hh 	
[kk 	
HttpGetkk	 
]kk 
[ll 	
Routell	 
(ll 
$strll !
)ll! "
]ll" #
[mm 	
Routemm	 
(mm 
$strmm B
)mmB C
]mmC D
[nn 	
Routenn	 
(nn 
$strnn P
)nnP Q
]nnQ R
[oo 	
Routeoo	 
(oo 
$stroo X
)ooX Y
]ooY Z
[pp 	
Routepp	 
(pp 
$strpp f
)ppf g
]ppg h
publicqq 
Taskqq 
<qq 
RepositoryResponseqq &
<qq& '
PaginationModelqq' 6
<qq6 7!
InfoCategoryViewModelqq7 L
>qqL M
>qqM N
>qqN O
SearchqqP V
(qqV W
stringrr 
keywordrr 
=rr 
nullrr !
,rr! "
stringss 
descriptionss 
=ss  
nullss! %
,ss% &
inttt 
?tt 
PageSizett 
=tt 
nulltt  
,tt  !
inttt" %
?tt% &
	PageIndextt' 0
=tt1 2
nulltt3 7
,tt7 8
stringtt9 ?
orderBytt@ G
=ttH I
$strttJ N
,uu 
OrderByDirectionuu 
	directionuu (
=uu) *
OrderByDirectionuu+ ;
.uu; <
	Ascendinguu< E
)uuE F
{vv 	

Expressionww 
<ww 
Funcww 
<ww 
SiocCategoryww (
,ww( )
boolww* .
>ww. /
>ww/ 0
	predicateww1 :
=ww; <
modelww= B
=>wwC E
modelxx 
.xx 
Specificulturexx  
==xx! #
_langxx$ )
&&yy 
(yy 
stringyy 
.yy 
IsNullOrWhiteSpaceyy )
(yy) *
keywordyy* 1
)yy1 2
||yy3 5
(yy6 7
modelyy7 <
.yy< =
Titleyy= B
.yyB C
ContainsyyC K
(yyK L
keywordyyL S
)yyS T
)yyT U
)yyU V
&&zz 
(zz 
stringzz 
.zz 
IsNullOrWhiteSpacezz )
(zz) *
descriptionzz* 5
)zz5 6
||zz7 9
(zz: ;
modelzz; @
.zz@ A
ExcerptzzA H
.zzH I
ContainszzI Q
(zzQ R
descriptionzzR ]
)zz] ^
)zz^ _
)zz_ `
;zz` a
return{{ !
InfoCategoryViewModel{{ (
.|| 

Repository|| 
.}} 
GetModelListByAsync}} $
(}}$ %
	predicate}}% .
,}}. /
orderBy}}0 7
,}}7 8
	direction}}9 B
,}}B C
PageSize}}D L
,}}L M
	PageIndex}}N W
)}}W X
;}}X Y
}~~ 	
[
ÖÖ 	
HttpPost
ÖÖ	 
,
ÖÖ 
HttpOptions
ÖÖ 
]
ÖÖ 
[
ÜÜ 	
Route
ÜÜ	 
(
ÜÜ 
$str
ÜÜ 
)
ÜÜ 
]
ÜÜ 
public
áá 
async
áá 
Task
áá 
<
áá  
RepositoryResponse
áá ,
<
áá, -!
BECategoryViewModel
áá- @
>
áá@ A
>
ááA B
Post
ááC G
(
ááG H
[
ááH I
FromBody
ááI Q
]
ááQ R!
BECategoryViewModel
ááR e
model
ááf k
)
áák l
{
àà 	
if
ââ 
(
ââ 
model
ââ 
!=
ââ 
null
ââ 
)
ââ 
{
ää 
var
ãã 
result
ãã 
=
ãã 
await
ãã "
model
ãã# (
.
ãã( )
SaveModelAsync
ãã) 7
(
ãã7 8
true
ãã8 <
)
ãã< =
.
ãã= >
ConfigureAwait
ãã> L
(
ããL M
false
ããM R
)
ããR S
;
ããS T
return
åå 
result
åå 
;
åå 
}
çç 
return
éé 
new
éé  
RepositoryResponse
éé )
<
éé) *!
BECategoryViewModel
éé* =
>
éé= >
(
éé> ?
)
éé? @
;
éé@ A
}
èè 	
[
íí 	
HttpPost
íí	 
,
íí 
HttpOptions
íí 
]
íí 
[
ìì 	
Route
ìì	 
(
ìì 
$str
ìì 
)
ìì 
]
ìì 
public
îî 
async
îî 
Task
îî 
<
îî  
RepositoryResponse
îî ,
<
îî, -
bool
îî- 1
>
îî1 2
>
îî2 3

SaveFields
îî4 >
(
îî> ?
int
îî? B
id
îîC E
,
îîE F
[
îîG H
FromBody
îîH P
]
îîP Q
List
îîQ U
<
îîU V
EntityField
îîV a
>
îîa b
fields
îîc i
)
îîi j
{
ïï 	
if
ññ 
(
ññ 
fields
ññ 
!=
ññ 
null
ññ 
)
ññ 
{
óó 
foreach
òò 
(
òò 
var
òò 
property
òò %
in
òò& (
fields
òò) /
)
òò/ 0
{
ôô 
var
öö 
result
öö 
=
öö  
await
öö! &#
InfoCategoryViewModel
öö' <
.
öö< =

Repository
öö= G
.
ööG H
UpdateFieldsAsync
ööH Y
(
ööY Z
c
ööZ [
=>
öö\ ^
c
öö_ `
.
öö` a
Id
ööa c
==
ööd f
id
öög i
&&
ööj l
c
ööm n
.
öön o
Specificulture
ööo }
==öö~ Ä
_langööÅ Ü
,ööÜ á
fieldsööà é
)ööé è
.ööè ê
ConfigureAwaitööê û
(ööû ü
falseööü §
)öö§ •
;öö• ¶
return
úú 
result
úú !
;
úú! "
}
ùù 
}
ûû 
return
üü 
new
üü  
RepositoryResponse
üü )
<
üü) *
bool
üü* .
>
üü. /
(
üü/ 0
)
üü0 1
;
üü1 2
}
†† 	
[
££ 	
HttpPost
££	 
,
££ 
HttpOptions
££ 
]
££ 
[
§§ 	
Route
§§	 
(
§§ 
$str
§§ 
)
§§ 
]
§§ 
public
•• 
async
•• 
Task
•• 
<
••  
RepositoryResponse
•• ,
<
••, -
PaginationModel
••- <
<
••< =#
InfoCategoryViewModel
••= R
>
••R S
>
••S T
>
••T U
GetList
••V ]
(
••] ^
RequestPaging
••^ k
request
••l s
)
••s t
{
¶¶ 	
string
ßß 
domain
ßß 
=
ßß 
string
ßß "
.
ßß" #
Format
ßß# )
(
ßß) *
$str
ßß* 5
,
ßß5 6
Request
ßß7 >
.
ßß> ?
Scheme
ßß? E
,
ßßE F
Request
ßßG N
.
ßßN O
Host
ßßO S
)
ßßS T
;
ßßT U

Expression
©© 
<
©© 
Func
©© 
<
©© 
SiocCategory
©© (
,
©©( )
bool
©©* .
>
©©. /
>
©©/ 0
	predicate
©©1 :
=
©©; <
model
©©= B
=>
©©C E
model
™™ 
.
™™ 
Specificulture
™™ $
==
™™% '
_lang
™™( -
&&
´´ 
(
´´ 
string
´´ 
.
´´  
IsNullOrWhiteSpace
´´ -
(
´´- .
request
´´. 5
.
´´5 6
Keyword
´´6 =
)
´´= >
||
¨¨ 
(
¨¨ 
model
¨¨ 
.
¨¨ 
Title
¨¨ #
.
¨¨# $
Contains
¨¨$ ,
(
¨¨, -
request
¨¨- 4
.
¨¨4 5
Keyword
¨¨5 <
)
¨¨< =
||
≠≠ 
model
≠≠ 
.
≠≠ 
Excerpt
≠≠ $
.
≠≠$ %
Contains
≠≠% -
(
≠≠- .
request
≠≠. 5
.
≠≠5 6
Keyword
≠≠6 =
)
≠≠= >
)
≠≠> ?
)
≠≠? @
&&
ÆÆ 
(
ÆÆ 
!
ÆÆ 
request
ÆÆ 
.
ÆÆ 
FromDate
ÆÆ %
.
ÆÆ% &
HasValue
ÆÆ& .
||
ØØ 
(
ØØ 
model
ØØ 
.
ØØ 
CreatedDateTime
ØØ -
>=
ØØ. 0
request
ØØ1 8
.
ØØ8 9
FromDate
ØØ9 A
.
ØØA B
Value
ØØB G
.
ØØG H
ToUniversalTime
ØØH W
(
ØØW X
)
ØØX Y
)
ØØY Z
)
∞∞ 
&&
±± 
(
±± 
!
±± 
request
±± 
.
±± 
ToDate
±± #
.
±±# $
HasValue
±±$ ,
||
≤≤ 
(
≤≤ 
model
≤≤ 
.
≤≤ 
CreatedDateTime
≤≤ -
<=
≤≤. 0
request
≤≤1 8
.
≤≤8 9
ToDate
≤≤9 ?
.
≤≤? @
Value
≤≤@ E
.
≤≤E F
ToUniversalTime
≤≤F U
(
≤≤U V
)
≤≤V W
)
≤≤W X
)
≥≥ 
;
¥¥ 
var
∂∂ 
data
∂∂ 
=
∂∂ 
await
∂∂ #
InfoCategoryViewModel
∂∂ 2
.
∂∂2 3

Repository
∂∂3 =
.
∂∂= >!
GetModelListByAsync
∂∂> Q
(
∂∂Q R
	predicate
∂∂R [
,
∂∂[ \
request
∂∂] d
.
∂∂d e
OrderBy
∂∂e l
,
∂∂l m
request
∂∂n u
.
∂∂u v
	Direction
∂∂v 
,∂∂ Ä
request∂∂Å à
.∂∂à â
PageSize∂∂â ë
,∂∂ë í
request∂∂ì ö
.∂∂ö õ
	PageIndex∂∂õ §
)∂∂§ •
.∂∂• ¶
ConfigureAwait∂∂¶ ¥
(∂∂¥ µ
false∂∂µ ∫
)∂∂∫ ª
;∂∂ª º
if
∑∑ 
(
∑∑ 
data
∑∑ 
.
∑∑ 
	IsSucceed
∑∑ 
)
∑∑ 
{
∏∏ 
data
ππ 
.
ππ 
Data
ππ 
.
ππ 
Items
ππ 
.
ππ  
ForEach
ππ  '
(
ππ' (
a
ππ( )
=>
ππ* ,
{
∫∫ 
a
ªª 
.
ªª 

DetailsUrl
ªª  
=
ªª! "
SWCmsHelper
ªª# .
.
ªª. /
GetRouterUrl
ªª/ ;
(
ªª; <
$str
ºº 
,
ºº 
new
ºº  #
{
ºº$ %
a
ºº& '
.
ºº' (
SeoName
ºº( /
}
ºº0 1
,
ºº1 2
Request
ºº3 :
,
ºº: ;
Url
ºº< ?
)
ºº? @
;
ºº@ A
}
ΩΩ 
)
ææ 
;
ææ 
}
øø 
return
¿¿ 
data
¿¿ 
;
¿¿ 
}
¡¡ 	
}
ƒƒ 
}≈≈ ¨
ZE:\_Workspace\Github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiFileController.cs
	namespace

 	
Swastka


 
.

 
IO

 
.

 
Cms

 
.

 
Api

 
.

 
Controllers

 (
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str 
) 
] 
public 

class 
ApiFileController "
:# $
BaseApiController% 6
{ 
[ 	
Route	 
( 
$str 
) 
] 
[ 	
HttpPost	 
] 
public 
IActionResult 
Edit !
(! "
FileViewModel" /
template0 8
)8 9
{ 	
if 
( 

ModelState 
. 
IsValid "
)" #
{ 
var 
result 
= 
FileRepository +
.+ ,
Instance, 4
.4 5
SaveWebFile5 @
(@ A
templateA I
)I J
;J K
return 
GetSuccessResult '
(' (
result( .
). /
;/ 0
} 
return   
GetErrorResult   !
(  ! "
$str  " *
,  * +
$str  , 5
)  5 6
;  6 7
}!! 	
}"" 
}## ≤ë
[E:\_Workspace\Github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiMediaController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str  
)  !
]! "
public 

class 
ApiMediaController #
:$ %
BaseApiController 
< 
SiocCmsContext (
,( )
	SiocMedia* 3
>3 4
{ 
public 
ApiMediaController !
(! "
IHostingEnvironment" 5
env6 9
)9 :
:; <
base= A
(A B
envB E
)E F
{   	
}!! 	
[&& 	
HttpGet&&	 
]&& 
['' 	
Route''	 
('' 
$str'' (
)''( )
]'') *
public(( 
async(( 
Task(( 
<(( 
JObject(( !
>((! "
	BEDetails((# ,
(((, -
string((- 3
viewType((4 <
,((< =
int((> A
id((B D
)((D E
{)) 	
switch** 
(** 
viewType** 
)** 
{++ 
default,, 
:,, 
var-- 
feResult--  
=--! "
await--# (
BEMediaViewModel--) 9
.--9 :

Repository--: D
.--D E
GetSingleModelAsync--E X
(--X Y
model.. 
=>..  
model..! &
...& '
Id..' )
==..* ,
id..- /
&&..0 2
model..3 8
...8 9
Specificulture..9 G
==..H J
_lang..K P
)..P Q
...Q R
ConfigureAwait..R `
(..` a
false..a f
)..f g
;..g h
return// 
JObject// "
.//" #

FromObject//# -
(//- .
feResult//. 6
)//6 7
;//7 8
}00 
}11 	
[44 	
HttpGet44	 
]44 
[55 	
Route55	 
(55 
$str55 
)55 
]55 
public66 
async66 
Task66 
<66 
RepositoryResponse66 ,
<66, -
bool66- 1
>661 2
>662 3
Delete664 :
(66: ;
int66; >
id66? A
)66A B
{77 	
var88 
getMedia88 
=88 
BEMediaViewModel88 +
.88+ ,

Repository88, 6
.886 7
GetSingleModel887 E
(88E F
a88F G
=>88H J
a88K L
.88L M
Id88M O
==88P R
id88S U
&&88V X
a88Y Z
.88Z [
Specificulture88[ i
==88j l
_lang88m r
)88r s
;88s t
if99 
(99 
getMedia99 
.99 
	IsSucceed99 "
)99" #
{:: 
return;; 
await;; 
getMedia;; %
.;;% &
Data;;& *
.;;* +
RemoveModelAsync;;+ ;
(;;; <
true;;< @
);;@ A
.;;A B
ConfigureAwait;;B P
(;;P Q
false;;Q V
);;V W
;;;W X
}<< 
else== 
{>> 
return?? 
new?? 
RepositoryResponse?? -
<??- .
bool??. 2
>??2 3
(??3 4
)??4 5
{??6 7
	IsSucceed??8 A
=??B C
false??D I
}??J K
;??K L
}@@ 
}AA 	
[DD 	
HttpGetDD	 
]DD 
[FF 	
RouteFF	 
(FF 
$strFF 
)FF 
]FF 
[GG 	
RouteGG	 
(GG 
$strGG 6
)GG6 7
]GG7 8
[HH 	
RouteHH	 
(HH 
$strHH +
)HH+ ,
]HH, -
[II 	
RouteII	 
(II 
$strII L
)IIL M
]IIM N
publicJJ 
asyncJJ 
TaskJJ 
<JJ 
RepositoryResponseJJ ,
<JJ, -
PaginationModelJJ- <
<JJ< =
BEMediaViewModelJJ= M
>JJM N
>JJN O
>JJO P
GetJJQ T
(JJT U
intKK 
?KK 
pageSizeKK 
=KK 
$numKK 
,KK 
intKK  #
?KK# $
	pageIndexKK% .
=KK/ 0
$numKK1 2
,KK2 3
stringKK4 :
orderByKK; B
=KKC D
$strKKE I
,LL 
OrderByDirectionLL 
	directionLL (
=LL) *
OrderByDirectionLL+ ;
.LL; <
	AscendingLL< E
)LLE F
{MM 	
varNN 
dataNN 
=NN 
awaitNN 
BEMediaViewModelNN -
.NN- .

RepositoryNN. 8
.NN8 9
GetModelListByAsyncNN9 L
(NNL M
mOO 
=>OO 
mOO 
.OO 
SpecificultureOO %
==OO& (
_langOO) .
,OO. /
orderByOO0 7
,OO7 8
	directionOO9 B
,OOB C
pageSizeOOD L
,OOL M
	pageIndexOON W
)OOW X
.OOX Y
ConfigureAwaitOOY g
(OOg h
falseOOh m
)OOm n
;OOn o
returnPP 
dataPP 
;PP 
}QQ 	
[TT 	
HttpGetTT	 
]TT 
[UU 	
RouteUU	 
(UU 
$strUU !
)UU! "
]UU" #
[VV 	
RouteVV	 
(VV 
$strVV B
)VVB C
]VVC D
[WW 	
RouteWW	 
(WW 
$strWW X
)WWX Y
]WWY Z
publicXX 
asyncXX 
TaskXX 
<XX 
RepositoryResponseXX ,
<XX, -
PaginationModelXX- <
<XX< =
BEMediaViewModelXX= M
>XXM N
>XXN O
>XXO P
SearchXXQ W
(XXW X
stringYY 
keywordYY 
=YY 
nullYY !
,YY! "
intYY# &
?YY& '
pageSizeYY( 0
=YY1 2
nullYY3 7
,YY7 8
intYY9 <
?YY< =
	pageIndexYY> G
=YYH I
nullYYJ N
,YYN O
stringYYP V
orderByYYW ^
=YY_ `
$strYYa e
,ZZ 
OrderByDirectionZZ 
	directionZZ (
=ZZ) *
OrderByDirectionZZ+ ;
.ZZ; <
	AscendingZZ< E
)ZZE F
{[[ 	

Expression\\ 
<\\ 
Func\\ 
<\\ 
	SiocMedia\\ %
,\\% &
bool\\' +
>\\+ ,
>\\, -
	predicate\\. 7
=\\8 9
model\\: ?
=>\\@ B
model]] 
.]] 
Specificulture]]  
==]]! #
_lang]]$ )
&&^^ 
(^^ 
string__ 
.__ 
IsNullOrWhiteSpace__ %
(__% &
keyword__& -
)__- .
||`` 
model`` 
.`` 
FileName`` !
.``! "
Contains``" *
(``* +
keyword``+ 2
)``2 3
)aa 
;aa 
varbb 
databb 
=bb 
awaitbb 
BEMediaViewModelbb -
.bb- .

Repositorybb. 8
.bb8 9
GetModelListByAsyncbb9 L
(bbL M
	predicatebbM V
,bbV W
orderBybbX _
,bb_ `
	directionbba j
,bbj k
pageSizebbl t
,bbt u
	pageIndexbbv 
)	bb Ä
.
bbÄ Å
ConfigureAwait
bbÅ è
(
bbè ê
false
bbê ï
)
bbï ñ
;
bbñ ó
returndd 
datadd 
;dd 
}ee 	
[kk 	
Routekk	 
(kk 
$strkk 
)kk 
]kk 
[ll 	
HttpPostll	 
]ll 
publicmm 
asyncmm 
Taskmm 
<mm 
RepositoryResponsemm ,
<mm, -
BEMediaViewModelmm- =
>mm= >
>mm> ?
UploadAsyncmm@ K
(mmK L
[mmL M
FromFormmmM U
]mmU V
stringmmW ]

fileFoldermm^ h
,mmh i
[mmj k
FromFormmmk s
]mms t
stringmmu {
title	mm| Å
,
mmÅ Ç
[
mmÉ Ñ
FromForm
mmÑ å
]
mmå ç
string
mmé î
description
mmï †
)
mm† °
{nn 	
varoo 
filesoo 
=oo 
Requestoo 
.oo  
Formoo  $
.oo$ %
Filesoo% *
;oo* +
ifqq 
(qq 
filesqq 
.qq 
Countqq 
>qq 
$numqq 
)qq  
{rr 
varss 

fileUploadss 
=ss  
filesss! &
.ss& '
FirstOrDefaultss' 5
(ss5 6
)ss6 7
;ss7 8
stringuu 

folderPathuu !
=uu" #
SWCmsHelpervv 
.vv 
GetFullPathvv '
(vv' (
newvv( +
[vv+ ,
]vv, -
{vv. /
SWCmsConstantsww "
.ww" #

Parametersww# -
.ww- .
UploadFolderww. :
,ww: ;

fileFolderxx 
,xx 
DateTimeyy 
.yy 
UtcNowyy #
.yy# $
ToStringyy$ ,
(yy, -
$stryy- 7
)yy7 8
}zz 
)zz 
;zz 
string~~ 
fileName~~ 
=~~  !
SWCmsHelper 
. 
GetFullPath '
(' (
new( +
[+ ,
], -
{. /
$str
ÄÄ 
,
ÄÄ 
await
ÅÅ 
UploadFileAsync
ÅÅ )
(
ÅÅ) *
files
ÅÅ* /
.
ÅÅ/ 0
FirstOrDefault
ÅÅ0 >
(
ÅÅ> ?
)
ÅÅ? @
,
ÅÅ@ A

folderPath
ÅÅB L
)
ÅÅL M
.
ÅÅM N
ConfigureAwait
ÅÅN \
(
ÅÅ\ ]
false
ÅÅ] b
)
ÅÅb c
}
ÇÇ 
)
ÇÇ 
;
ÇÇ 
BEMediaViewModel
ÉÉ  
media
ÉÉ! &
=
ÉÉ' (
new
ÉÉ) ,
BEMediaViewModel
ÉÉ- =
(
ÉÉ= >
new
ÉÉ> A
	SiocMedia
ÉÉB K
(
ÉÉK L
)
ÉÉL M
{
ÑÑ 
Specificulture
ÖÖ "
=
ÖÖ# $
_lang
ÖÖ% *
,
ÖÖ* +
FileName
ÜÜ 
=
ÜÜ 
fileName
ÜÜ '
.
ÜÜ' (
Split
ÜÜ( -
(
ÜÜ- .
$char
ÜÜ. 1
)
ÜÜ1 2
[
ÜÜ2 3
$num
ÜÜ3 4
]
ÜÜ4 5
.
ÜÜ5 6
	Substring
ÜÜ6 ?
(
ÜÜ? @
fileName
ÜÜ@ H
.
ÜÜH I
LastIndexOf
ÜÜI T
(
ÜÜT U
$char
ÜÜU X
)
ÜÜX Y
+
ÜÜZ [
$num
ÜÜ\ ]
)
ÜÜ] ^
,
ÜÜ^ _

FileFolder
áá 
=
áá  

folderPath
áá! +
,
áá+ ,
	Extension
àà 
=
àà 
fileName
àà  (
.
àà( )
	Substring
àà) 2
(
àà2 3
fileName
àà3 ;
.
àà; <
LastIndexOf
àà< G
(
ààG H
$char
ààH K
)
ààK L
)
ààL M
,
ààM N
CreatedDateTime
ââ #
=
ââ$ %
DateTime
ââ& .
.
ââ. /
UtcNow
ââ/ 5
,
ââ5 6
FileType
ää 
=
ää 

fileUpload
ää )
.
ää) *
ContentType
ää* 5
.
ää5 6
Split
ää6 ;
(
ää; <
$char
ää< ?
)
ää? @
[
ää@ A
$num
ääA B
]
ääB C
,
ääC D
FileSize
ãã 
=
ãã 

fileUpload
ãã )
.
ãã) *
Length
ãã* 0
,
ãã0 1
Title
åå 
=
åå 
title
åå !
??
åå" $
fileName
åå% -
,
åå- .
Description
çç 
=
çç  !
description
çç" -
??
çç. 0
fileName
çç1 9
}
éé 
)
éé 
;
éé 
return
êê 
media
êê 
.
êê 
	SaveModel
êê &
(
êê& '
)
êê' (
;
êê( )
}
ëë 
else
íí 
{
ìì 
return
îî 
new
îî  
RepositoryResponse
îî -
<
îî- .
BEMediaViewModel
îî. >
>
îî> ?
(
îî? @
)
îî@ A
;
îîA B
}
ïï 
}
ññ 	
[
ôô 	
HttpPost
ôô	 
,
ôô 
HttpOptions
ôô 
]
ôô 
[
öö 	
Route
öö	 
(
öö 
$str
öö 
)
öö 
]
öö 
public
õõ 
async
õõ 
Task
õõ 
<
õõ  
RepositoryResponse
õõ ,
<
õõ, -
BEMediaViewModel
õõ- =
>
õõ= >
>
õõ> ?
Post
õõ@ D
(
õõD E
BEMediaViewModel
õõE U
model
õõV [
)
õõ[ \
{
úú 	
if
ùù 
(
ùù 
model
ùù 
!=
ùù 
null
ùù 
)
ùù 
{
ûû 
var
üü 
result
üü 
=
üü 
await
üü "
model
üü# (
.
üü( )
SaveModelAsync
üü) 7
(
üü7 8
true
üü8 <
)
üü< =
.
üü= >
ConfigureAwait
üü> L
(
üüL M
false
üüM R
)
üüR S
;
üüS T
return
°° 
result
°° 
;
°° 
}
¢¢ 
return
££ 
new
££  
RepositoryResponse
££ )
<
££) *
BEMediaViewModel
££* :
>
££: ;
(
££; <
)
££< =
;
££= >
}
§§ 	
[
®® 	
HttpPost
®®	 
,
®® 
HttpOptions
®® 
]
®® 
[
©© 	
Route
©©	 
(
©© 
$str
©© 
)
©© 
]
©© 
public
™™ 
async
™™ 
Task
™™ 
<
™™  
RepositoryResponse
™™ ,
<
™™, -
PaginationModel
™™- <
<
™™< =
BEMediaViewModel
™™= M
>
™™M N
>
™™N O
>
™™O P
GetList
™™Q X
(
™™X Y
RequestPaging
™™Y f
request
™™g n
)
™™n o
{
´´ 	

Expression
¨¨ 
<
¨¨ 
Func
¨¨ 
<
¨¨ 
	SiocMedia
¨¨ %
,
¨¨% &
bool
¨¨' +
>
¨¨+ ,
>
¨¨, -
	predicate
¨¨. 7
=
¨¨8 9
model
¨¨: ?
=>
¨¨@ B
model
≠≠ 
.
≠≠ 
Specificulture
≠≠ $
==
≠≠% '
_lang
≠≠( -
&&
ÆÆ 
(
ÆÆ 
string
ÆÆ 
.
ÆÆ  
IsNullOrWhiteSpace
ÆÆ -
(
ÆÆ- .
request
ÆÆ. 5
.
ÆÆ5 6
Keyword
ÆÆ6 =
)
ÆÆ= >
||
ØØ 
(
ØØ 
model
ØØ 
.
ØØ 
FileName
ØØ "
.
ØØ" #
Contains
ØØ# +
(
ØØ+ ,
request
ØØ, 3
.
ØØ3 4
Keyword
ØØ4 ;
)
ØØ; <
||
∞∞ 
model
∞∞ 
.
∞∞ 
Title
∞∞ 
.
∞∞ 
Contains
∞∞ '
(
∞∞' (
request
∞∞( /
.
∞∞/ 0
Keyword
∞∞0 7
)
∞∞7 8
||
±± 
model
±± 
.
±± 
Description
±± $
.
±±$ %
Contains
±±% -
(
±±- .
request
±±. 5
.
±±5 6
Keyword
±±6 =
)
±±= >
)
±±> ?
)
±±? @
;
±±@ A
var
≤≤ 
data
≤≤ 
=
≤≤ 
await
≤≤ 
BEMediaViewModel
≤≤ -
.
≤≤- .

Repository
≤≤. 8
.
≤≤8 9!
GetModelListByAsync
≤≤9 L
(
≤≤L M
	predicate
≤≤M V
,
≤≤V W
request
≤≤X _
.
≤≤_ `
OrderBy
≤≤` g
,
≤≤g h
request
≤≤i p
.
≤≤p q
	Direction
≤≤q z
,
≤≤z {
request≤≤| É
.≤≤É Ñ
PageSize≤≤Ñ å
,≤≤å ç
request≤≤é ï
.≤≤ï ñ
	PageIndex≤≤ñ ü
)≤≤ü †
.≤≤† °
ConfigureAwait≤≤° Ø
(≤≤Ø ∞
false≤≤∞ µ
)≤≤µ ∂
;≤≤∂ ∑
return
¥¥ 
data
¥¥ 
;
¥¥ 
}
µµ 	
[
∑∑ 	
HttpPost
∑∑	 
,
∑∑ 
HttpOptions
∑∑ 
]
∑∑ 
[
∏∏ 	
Route
∏∏	 
(
∏∏ 
$str
∏∏ +
)
∏∏+ ,
]
∏∏, -
[
ππ 	
Route
ππ	 
(
ππ 
$str
ππ 
)
ππ  
]
ππ  !
public
∫∫ 
async
∫∫ 
Task
∫∫ 
<
∫∫  
RepositoryResponse
∫∫ ,
<
∫∫, -
PaginationModel
∫∫- <
<
∫∫< =&
NavProductMediaViewModel
∫∫= U
>
∫∫U V
>
∫∫V W
>
∫∫W X
GetListByProduct
∫∫Y i
(
∫∫i j
RequestPaging
∫∫j w
request
∫∫x 
,∫∫ Ä
string∫∫Å á
	productId∫∫à ë
=∫∫í ì
null∫∫î ò
)∫∫ò ô
{
ªª 	
var
ºº 
data
ºº 
=
ºº 
await
ºº &
NavProductMediaViewModel
ºº 5
.
ºº5 6

Repository
ºº6 @
.
ºº@ A!
GetModelListByAsync
ººA T
(
ººT U
m
ΩΩ 
=>
ΩΩ 
m
ΩΩ 
.
ΩΩ 
	ProductId
ΩΩ 
==
ΩΩ 
	productId
ΩΩ  )
&&
ΩΩ* ,
m
ΩΩ- .
.
ΩΩ. /
Specificulture
ΩΩ/ =
==
ΩΩ> @
_lang
ΩΩA F
,
ΩΩF G
request
ΩΩH O
.
ΩΩO P
OrderBy
ΩΩP W
,
ææ 
request
ææ 
.
ææ 
	Direction
ææ 
,
ææ  
request
ææ! (
.
ææ( )
PageSize
ææ) 1
,
ææ1 2
request
ææ3 :
.
ææ: ;
	PageIndex
ææ; D
)
ææD E
.
øø 
ConfigureAwait
øø 
(
øø 
false
øø !
)
øø! "
;
øø" #
return
¡¡ 
data
¡¡ 
;
¡¡ 
}
√√ 	
}
”” 
}‘‘ ßù
\E:\_Workspace\Github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiModuleController.cs
	namespace 	
Swastka
 
. 
IO 
. 
Cms 
. 
Api 
. 
Controllers (
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str !
)! "
]" #
public 

class 
ApiModuleController $
:% &
BaseApiController 
< 
SiocCmsContext (
,( )
SiocArticle* 5
>5 6
{ 
public 
ApiModuleController "
(" #
IHostingEnvironment# 6
env7 :
): ;
:< =
base> B
(B C
envC F
)F G
{ 	
} 	
["" 	
HttpGet""	 
]"" 
[## 	
Route##	 
(## 
$str## 
)## 
]## 
public$$ 
async$$ 
Task$$ 
<$$ 
RepositoryResponse$$ ,
<$$, -
FEModuleViewModel$$- >
>$$> ?
>$$? @
Details$$A H
($$H I
int$$I L
id$$M O
)$$O P
{%% 	
var&& 
result&& 
=&& 
await&& 
FEModuleViewModel&& 0
.&&0 1

Repository&&1 ;
.&&; <
GetSingleModelAsync&&< O
(&&O P
model&&P U
=>&&V X
model&&Y ^
.&&^ _
Id&&_ a
==&&b d
id&&e g
&&&&h j
model&&k p
.&&p q
Specificulture&&q 
==
&&Ä Ç
_lang
&&É à
)
&&à â
.
&&â ä
ConfigureAwait
&&ä ò
(
&&ò ô
false
&&ô û
)
&&û ü
;
&&ü †
if'' 
('' 
result'' 
.'' 
	IsSucceed''  
)''  !
{(( 
result)) 
.)) 
Data)) 
.)) 
LoadData)) $
())$ %
)))% &
;))& '
}** 
return++ 
result++ 
;++ 
},, 	
[// 	
HttpGet//	 
]// 
[00 	
Route00	 
(00 
$str00 (
)00( )
]00) *
public11 
async11 
Task11 
<11 
JObject11 !
>11! "
DetailsByType11# 0
(110 1
string111 7
viewType118 @
,11@ A
int11B E
id11F H
)11H I
{22 	
switch33 
(33 
viewType33 
)33 
{44 
case55 
$str55 
:55 
var66 
	spaResult66 !
=66" #
await66$ )
SpaModuleViewModel66* <
.66< =

Repository66= G
.66G H
GetSingleModelAsync66H [
(66[ \
model66\ a
=>66b d
model66e j
.66j k
Id66k m
==66n p
id66q s
&&66t v
model66w |
.66| }
Specificulture	66} ã
==
66å é
_lang
66è î
)
66î ï
.
66ï ñ
ConfigureAwait
66ñ §
(
66§ •
false
66• ™
)
66™ ´
;
66´ ¨
return77 
JObject77 "
.77" #

FromObject77# -
(77- .
	spaResult77. 7
)777 8
;778 9
case99 
$str99 
:99 
var:: 
beResult::  
=::! "
await::# (
BEModuleViewModel::) :
.::: ;

Repository::; E
.::E F
GetSingleModelAsync::F Y
(::Y Z
model::Z _
=>::` b
model::c h
.::h i
Id::i k
==::l n
id::o q
&&::r t
model::u z
.::z {
Specificulture	::{ â
==
::ä å
_lang
::ç í
)
::í ì
.
::ì î
ConfigureAwait
::î ¢
(
::¢ £
false
::£ ®
)
::® ©
;
::© ™
return;; 
JObject;; "
.;;" #

FromObject;;# -
(;;- .
beResult;;. 6
);;6 7
;;;7 8
default== 
:== 
var>> 
feResult>>  
=>>! "
await>># (
FEModuleViewModel>>) :
.>>: ;

Repository>>; E
.>>E F
GetSingleModelAsync>>F Y
(>>Y Z
model>>Z _
=>>>` b
model>>c h
.>>h i
Id>>i k
==>>l n
id>>o q
&&>>r t
model>>u z
.>>z {
Specificulture	>>{ â
==
>>ä å
_lang
>>ç í
)
>>í ì
.
>>ì î
ConfigureAwait
>>î ¢
(
>>¢ £
false
>>£ ®
)
>>® ©
;
>>© ™
return?? 
JObject?? "
.??" #

FromObject??# -
(??- .
feResult??. 6
)??6 7
;??7 8
}@@ 
}AA 	
[DD 	
HttpGetDD	 
]DD 
[EE 	
RouteEE	 
(EE 
$strEE 
)EE  
]EE  !
[FF 	
RouteFF	 
(FF 
$strFF +
)FF+ ,
]FF, -
publicGG 
asyncGG 
TaskGG 
<GG 
RepositoryResponseGG ,
<GG, -
FEModuleViewModelGG- >
>GG> ?
>GG? @
GetByArticleGGA M
(GGM N
intGGN Q
idGGR T
,GGT U
stringGGV \
	articleIdGG] f
=GGg h
nullGGi m
)GGm n
{HH 	
varII 
resultII 
=II 
awaitII 
FEModuleViewModelII 0
.II0 1

RepositoryII1 ;
.II; <
GetSingleModelAsyncII< O
(IIO P
modelIIP U
=>IIV X
modelIIY ^
.II^ _
IdII_ a
==IIb d
idIIe g
&&IIh j
modelIIk p
.IIp q
SpecificultureIIq 
==
IIÄ Ç
_lang
IIÉ à
)
IIà â
.
IIâ ä
ConfigureAwait
IIä ò
(
IIò ô
false
IIô û
)
IIû ü
;
IIü †
returnJJ 
resultJJ 
;JJ 
}KK 	
[NN 	
HttpGetNN	 
]NN 
[OO 	
RouteOO	 
(OO 
$strOO 
)OO 
]OO 
[PP 	
RoutePP	 
(PP 
$strPP 6
)PP6 7
]PP7 8
[QQ 	
RouteQQ	 
(QQ 
$strQQ +
)QQ+ ,
]QQ, -
[RR 	
RouteRR	 
(RR 
$strRR L
)RRL M
]RRM N
publicSS 
asyncSS 
TaskSS 
<SS 
RepositoryResponseSS ,
<SS, -
PaginationModelSS- <
<SS< =
InfoModuleViewModelSS= P
>SSP Q
>SSQ R
>SSR S
GetSST W
(SSW X
intTT 
?TT 
pageSizeTT 
=TT 
$numTT 
,TT 
intTT  #
?TT# $
	pageIndexTT% .
=TT/ 0
$numTT1 2
,TT2 3
stringTT4 :
orderByTT; B
=TTC D
$strTTE I
,UU 
OrderByDirectionUU 
	directionUU (
=UU) *
OrderByDirectionUU+ ;
.UU; <
	AscendingUU< E
)UUE F
{VV 	
varWW 
dataWW 
=WW 
awaitWW 
InfoModuleViewModelWW 0
.WW0 1

RepositoryWW1 ;
.WW; <
GetModelListByAsyncWW< O
(WWO P
mWWP Q
=>WWR T
mWWU V
.WWV W
SpecificultureWWW e
==WWf h
_langWWi n
,WWn o
orderByWWp w
,WWw x
	direction	WWy Ç
,
WWÇ É
pageSize
WWÑ å
,
WWå ç
	pageIndex
WWé ó
)
WWó ò
.
WWò ô
ConfigureAwait
WWô ß
(
WWß ®
false
WW® ≠
)
WW≠ Æ
;
WWÆ Ø
stringXX 
domainXX 
=XX 
stringXX "
.XX" #
FormatXX# )
(XX) *
$strXX* 5
,XX5 6
RequestXX7 >
.XX> ?
SchemeXX? E
,XXE F
RequestXXG N
.XXN O
HostXXO S
)XXS T
;XXT U
return[[ 
data[[ 
;[[ 
}\\ 	
[__ 	
HttpGet__	 
]__ 
[`` 	
Route``	 
(`` 
$str`` !
)``! "
]``" #
[aa 	
Routeaa	 
(aa 
$straa B
)aaB C
]aaC D
[bb 	
Routebb	 
(bb 
$strbb P
)bbP Q
]bbQ R
[cc 	
Routecc	 
(cc 
$strcc X
)ccX Y
]ccY Z
[dd 	
Routedd	 
(dd 
$strdd f
)ddf g
]ddg h
publicee 
Taskee 
<ee 
RepositoryResponseee &
<ee& '
PaginationModelee' 6
<ee6 7
InfoModuleViewModelee7 J
>eeJ K
>eeK L
>eeL M
SearcheeN T
(eeT U
stringff 
keywordff 
=ff 
nullff !
,ff! "
stringgg 
descriptiongg 
=gg  
nullgg! %
,gg% &
inthh 
?hh 
pageSizehh 
=hh 
nullhh  
,hh  !
inthh" %
?hh% &
	pageIndexhh' 0
=hh1 2
nullhh3 7
,hh7 8
stringhh9 ?
orderByhh@ G
=hhH I
$strhhJ N
,ii 
OrderByDirectionii 
	directionii (
=ii) *
OrderByDirectionii+ ;
.ii; <
	Ascendingii< E
)iiE F
{jj 	

Expressionkk 
<kk 
Funckk 
<kk 

SiocModulekk &
,kk& '
boolkk( ,
>kk, -
>kk- .
	predicatekk/ 8
=kk9 :
modelkk; @
=>kkA C
modelll 
.ll 
Specificulturell  
==ll! #
_langll$ )
&&mm 
(mm 
stringmm 
.mm 
IsNullOrWhiteSpacemm )
(mm) *
keywordmm* 1
)mm1 2
||mm3 5
(mm6 7
modelmm7 <
.mm< =
Titlemm= B
.mmB C
ContainsmmC K
(mmK L
keywordmmL S
)mmS T
)mmT U
)mmU V
&&nn 
(nn 
stringnn 
.nn 
IsNullOrWhiteSpacenn )
(nn) *
descriptionnn* 5
)nn5 6
||nn7 9
(nn: ;
modelnn; @
.nn@ A
DescriptionnnA L
.nnL M
ContainsnnM U
(nnU V
descriptionnnV a
)nna b
)nnb c
)nnc d
;nnd e
returnoo 
InfoModuleViewModeloo &
.pp 

Repositorypp 
.qq 
GetModelListByAsyncqq $
(qq$ %
	predicateqq% .
,qq. /
orderByqq0 7
,qq7 8
	directionqq9 B
,qqB C
pageSizeqqD L
,qqL M
	pageIndexqqN W
)qqW X
;qqX Y
}rr 	
[yy 	
HttpPostyy	 
,yy 
HttpOptionsyy 
]yy 
[zz 	
Routezz	 
(zz 
$strzz 
)zz 
]zz 
public{{ 
async{{ 
Task{{ 
<{{ 
RepositoryResponse{{ ,
<{{, -
PaginationModel{{- <
<{{< =
InfoModuleViewModel{{= P
>{{P Q
>{{Q R
>{{R S
GetList{{T [
({{[ \
RequestPaging{{\ i
request{{j q
){{q r
{|| 	
if}} 
(}} 
string}} 
.}} 
IsNullOrEmpty}} $
(}}$ %
request}}% ,
.}}, -
Keyword}}- 4
)}}4 5
)}}5 6
{~~ 
var 
data 
= 
await  
InfoModuleViewModel! 4
.4 5

Repository5 ?
.? @
GetModelListByAsync@ S
(S T
mT U
=>V X
mY Z
.Z [
Specificulture[ i
==j l
_langm r
,r s
requestt {
.{ |
OrderBy	| É
,
É Ñ
request
Ö å
.
å ç
	Direction
ç ñ
,
ñ ó
request
ò ü
.
ü †
PageSize
† ®
,
® ©
request
™ ±
.
± ≤
	PageIndex
≤ ª
)
ª º
.
º Ω
ConfigureAwait
Ω À
(
À Ã
false
Ã —
)
— “
;
“ ”
string
ÄÄ 
domain
ÄÄ 
=
ÄÄ 
string
ÄÄ  &
.
ÄÄ& '
Format
ÄÄ' -
(
ÄÄ- .
$str
ÄÄ. 9
,
ÄÄ9 :
Request
ÄÄ; B
.
ÄÄB C
Scheme
ÄÄC I
,
ÄÄI J
Request
ÄÄK R
.
ÄÄR S
Host
ÄÄS W
)
ÄÄW X
;
ÄÄX Y
return
ÇÇ 
data
ÇÇ 
;
ÇÇ 
}
ÉÉ 
else
ÑÑ 
{
ÖÖ 

Expression
ÜÜ 
<
ÜÜ 
Func
ÜÜ 
<
ÜÜ  

SiocModule
ÜÜ  *
,
ÜÜ* +
bool
ÜÜ, 0
>
ÜÜ0 1
>
ÜÜ1 2
	predicate
ÜÜ3 <
=
ÜÜ= >
model
ÜÜ? D
=>
ÜÜE G
model
áá 
.
áá 
Specificulture
áá (
==
áá) +
_lang
áá, 1
&&
àà 
(
àà 
string
àà 
.
àà  
IsNullOrWhiteSpace
àà 1
(
àà1 2
request
àà2 9
.
àà9 :
Keyword
àà: A
)
ààA B
||
ââ 
(
ââ 
model
ââ 
.
ââ 
Title
ââ #
.
ââ# $
Contains
ââ$ ,
(
ââ, -
request
ââ- 4
.
ââ4 5
Keyword
ââ5 <
)
ââ< =
||
ää 
model
ää 
.
ää 
Description
ää (
.
ää( )
Contains
ää) 1
(
ää1 2
request
ää2 9
.
ää9 :
Keyword
ää: A
)
ääA B
)
ääB C
)
ääC D
;
ääD E
return
åå 
await
åå !
InfoModuleViewModel
åå 0
.
åå0 1

Repository
åå1 ;
.
åå; <!
GetModelListByAsync
åå< O
(
ååO P
	predicate
ååP Y
,
ååY Z
request
åå[ b
.
ååb c
OrderBy
ååc j
,
ååj k
request
åål s
.
åås t
	Direction
ååt }
,
åå} ~
requeståå Ü
.ååÜ á
PageSizeååá è
,ååè ê
requestååë ò
.ååò ô
	PageIndexååô ¢
)åå¢ £
.åå£ §
ConfigureAwaitåå§ ≤
(åå≤ ≥
falseåå≥ ∏
)åå∏ π
;ååπ ∫
}
çç 
}
éé 	
[
ëë 	
HttpPost
ëë	 
,
ëë 
HttpOptions
ëë 
]
ëë 
[
íí 	
Route
íí	 
(
íí 
$str
íí 
)
íí 
]
íí 
public
ìì 
async
ìì 
Task
ìì 
<
ìì  
RepositoryResponse
ìì ,
<
ìì, -
bool
ìì- 1
>
ìì1 2
>
ìì2 3
AddToArticle
ìì4 @
(
ìì@ A
[
ììA B
FromBody
ììB J
]
ììJ K&
BEArticleModuleViewModel
ììK c
view
ììd h
)
ììh i
{
îî 	
if
ïï 
(
ïï 
view
ïï 
.
ïï 
	IsActived
ïï 
)
ïï 
{
ññ 
var
óó 
	addResult
óó 
=
óó 
await
óó  %
view
óó& *
.
óó* +
SaveModelAsync
óó+ 9
(
óó9 :
)
óó: ;
.
óó; <
ConfigureAwait
óó< J
(
óóJ K
false
óóK P
)
óóP Q
;
óóQ R
return
òò 
new
òò  
RepositoryResponse
òò -
<
òò- .
bool
òò. 2
>
òò2 3
(
òò3 4
)
òò4 5
{
ôô 
	IsSucceed
öö 
=
öö 
	addResult
öö  )
.
öö) *
	IsSucceed
öö* 3
,
öö3 4
Data
õõ 
=
õõ 
	addResult
õõ $
.
õõ$ %
	IsSucceed
õõ% .
}
úú 
;
úú 
}
ùù 
else
ûû 
{
üü 
return
†† 
await
†† 
view
†† !
.
††! "
RemoveModelAsync
††" 2
(
††2 3
)
††3 4
.
††4 5
ConfigureAwait
††5 C
(
††C D
false
††D I
)
††I J
;
††J K
}
°° 
}
¢¢ 	
[
•• 	
HttpPost
••	 
,
•• 
HttpOptions
•• 
]
•• 
[
¶¶ 	
Route
¶¶	 
(
¶¶ 
$str
¶¶ 
)
¶¶ 
]
¶¶ 
public
ßß 
async
ßß 
Task
ßß 
<
ßß  
RepositoryResponse
ßß ,
<
ßß, -
BEModuleViewModel
ßß- >
>
ßß> ?
>
ßß? @
Post
ßßA E
(
ßßE F
[
ßßF G
FromBody
ßßG O
]
ßßO P
BEModuleViewModel
ßßP a
model
ßßb g
)
ßßg h
{
®® 	
if
©© 
(
©© 
model
©© 
!=
©© 
null
©© 
)
©© 
{
™™ 
return
´´ 
await
´´ 
model
´´ "
.
´´" #
SaveModelAsync
´´# 1
(
´´1 2
true
´´2 6
)
´´6 7
.
´´7 8
ConfigureAwait
´´8 F
(
´´F G
false
´´G L
)
´´L M
;
´´M N
}
¨¨ 
return
≠≠ 
new
≠≠  
RepositoryResponse
≠≠ )
<
≠≠) *
BEModuleViewModel
≠≠* ;
>
≠≠; <
(
≠≠< =
)
≠≠= >
;
≠≠> ?
}
ÆÆ 	
[
±± 	
HttpPost
±±	 
,
±± 
HttpOptions
±± 
]
±± 
[
≤≤ 	
Route
≤≤	 
(
≤≤ 
$str
≤≤ 
)
≤≤ 
]
≤≤ 
public
≥≥ 
async
≥≥ 
Task
≥≥ 
<
≥≥  
RepositoryResponse
≥≥ ,
<
≥≥, -
bool
≥≥- 1
>
≥≥1 2
>
≥≥2 3

SaveFields
≥≥4 >
(
≥≥> ?
int
≥≥? B
id
≥≥C E
,
≥≥E F
[
≥≥G H
FromBody
≥≥H P
]
≥≥P Q
List
≥≥Q U
<
≥≥U V
EntityField
≥≥V a
>
≥≥a b
fields
≥≥c i
)
≥≥i j
{
¥¥ 	
if
µµ 
(
µµ 
fields
µµ 
!=
µµ 
null
µµ 
)
µµ 
{
∂∂ 
foreach
∑∑ 
(
∑∑ 
var
∑∑ 
property
∑∑ %
in
∑∑& (
fields
∑∑) /
)
∑∑/ 0
{
∏∏ 
var
ππ 
result
ππ 
=
ππ  
await
ππ! &
BEModuleViewModel
ππ' 8
.
ππ8 9

Repository
ππ9 C
.
ππC D
UpdateFieldsAsync
ππD U
(
ππU V
c
ππV W
=>
ππX Z
c
ππ[ \
.
ππ\ ]
Id
ππ] _
==
ππ` b
id
ππc e
,
ππe f
fields
ππg m
)
ππm n
.
ππn o
ConfigureAwait
ππo }
(
ππ} ~
falseππ~ É
)ππÉ Ñ
;ππÑ Ö
return
ªª 
result
ªª !
;
ªª! "
}
ºº 
}
ΩΩ 
return
ææ 
new
ææ  
RepositoryResponse
ææ )
<
ææ) *
bool
ææ* .
>
ææ. /
(
ææ/ 0
)
ææ0 1
;
ææ1 2
}
øø 	
}
¬¬ 
}√√ àò
`E:\_Workspace\Github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiModuleDataController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Route 

(
 
$str &
)& '
]' (
public 

class #
ApiModuleDataController (
:) *
BaseApiController 
< 
SiocCmsContext (
,( )

SiocModule* 4
>4 5
{ 
public #
ApiModuleDataController &
(& '
IHostingEnvironment' :
env; >
)> ?
:@ A
baseB F
(F G
envG J
)J K
{ 	
} 	
[ 	
HttpPost	 
] 
[   	
Route  	 
(   
$str   
)   
]   
public!! 
async!! 
Task!! 
<!! 
RepositoryResponse!! ,
<!!, -!
BEModuleDataViewModel!!- B
>!!B C
>!!C D
	SaveAsync!!E N
(!!N O!
BEModuleDataViewModel!!O d
data!!e i
)!!i j
{"" 	
var## 
result## 
=## 
await## 
data## #
.### $
SaveModelAsync##$ 2
(##2 3
)##3 4
.##4 5
ConfigureAwait##5 C
(##C D
false##D I
)##I J
;##J K
return$$ 
result$$ 
;$$ 
}99 	
[<< 	
HttpPost<<	 
,<< 
HttpOptions<< 
]<< 
[== 	
Route==	 
(== 
$str== 
)== 
]== 
public>> 
async>> 
Task>> 
<>> 
RepositoryResponse>> ,
<>>, -
bool>>- 1
>>>1 2
>>>2 3

SaveFields>>4 >
(>>> ?
string>>? E
id>>F H
,>>H I
[>>J K
FromBody>>K S
]>>S T
List>>T X
<>>X Y
EntityField>>Y d
>>>d e
fields>>f l
)>>l m
{?? 	
if@@ 
(@@ 
fields@@ 
!=@@ 
null@@ 
)@@ 
{AA 
foreachBB 
(BB 
varBB 
propertyBB %
inBB& (
fieldsBB) /
)BB/ 0
{CC 
varDD 
resultDD 
=DD  
awaitDD! &#
InfoModuleDataViewModelDD' >
.DD> ?

RepositoryDD? I
.DDI J
UpdateFieldsAsyncDDJ [
(DD[ \
cDD\ ]
=>DD^ `
cDDa b
.DDb c
IdDDc e
==DDf h
idDDi k
,DDk l
fieldsDDm s
)DDs t
.DDt u
ConfigureAwait	DDu É
(
DDÉ Ñ
false
DDÑ â
)
DDâ ä
;
DDä ã
returnFF 
resultFF !
;FF! "
}GG 
}HH 
returnII 
newII 
RepositoryResponseII )
<II) *
boolII* .
>II. /
(II/ 0
)II0 1
;II1 2
}JJ 	
[MM 	
HttpGetMM	 
]MM 
[NN 	
RouteNN	 
(NN 
$strNN 
)NN 
]NN 
publicOO 
TaskOO 
<OO 
RepositoryResponseOO &
<OO& '#
InfoModuleDataViewModelOO' >
>OO> ?
>OO? @
DetailsOOA H
(OOH I
stringOOI O
idOOP R
)OOR S
{PP 	
returnQQ #
InfoModuleDataViewModelQQ *
.QQ* +

RepositoryQQ+ 5
.QQ5 6
GetSingleModelAsyncQQ6 I
(QQI J
modelQQJ O
=>QQP R
modelQQS X
.QQX Y
IdQQY [
==QQ\ ^
idQQ_ a
&&QQb d
modelQQe j
.QQj k
SpecificultureQQk y
==QQz |
_lang	QQ} Ç
)
QQÇ É
;
QQÉ Ñ
}RR 	
[UU 	
HttpGetUU	 
]UU 
[VV 	
RouteVV	 
(VV 
$strVV 
)VV 
]VV 
publicWW 
TaskWW 
<WW 
RepositoryResponseWW &
<WW& '#
InfoModuleDataViewModelWW' >
>WW> ?
>WW? @
EditWWA E
(WWE F
stringWWF L
idWWM O
)WWO P
{XX 	
returnYY #
InfoModuleDataViewModelYY *
.YY* +

RepositoryYY+ 5
.YY5 6
GetSingleModelAsyncYY6 I
(YYI J
modelYYJ O
=>YYP R
modelYYS X
.YYX Y
IdYYY [
==YY\ ^
idYY_ a
&&YYb d
modelYYe j
.YYj k
SpecificultureYYk y
==YYz |
_lang	YY} Ç
)
YYÇ É
;
YYÉ Ñ
}ZZ 	
[]] 	
HttpGet]]	 
]]] 
[^^ 	
Route^^	 
(^^ 
$str^^ "
)^^" #
]^^# $
public__ 
async__ 
Task__ 
<__ 
RepositoryResponse__ ,
<__, -!
BEModuleDataViewModel__- B
>__B C
>__C D
CreateAsync__E P
(__P Q
int__Q T
moduleId__U ]
)__] ^
{`` 	
varaa 
	getModuleaa 
=aa 
awaitaa !
InfoModuleViewModelaa" 5
.aa5 6

Repositoryaa6 @
.aa@ A
GetSingleModelAsyncaaA T
(aaT U
mbb 
=>bb 
mbb 
.bb 
Idbb 
==bb 
moduleIdbb %
&&bb& (
mbb) *
.bb* +
Specificulturebb+ 9
==bb: <
_langbb= B
)bbB C
.bbC D
ConfigureAwaitbbD R
(bbR S
falsebbS X
)bbX Y
;bbY Z
ifcc 
(cc 
	getModulecc 
.cc 
	IsSucceedcc #
)cc# $
{dd 
varee 

ModuleDataee 
=ee  
newee! $!
BEModuleDataViewModelee% :
(ee: ;
newff 
SiocModuleDataff &
(ff& '
)ff' (
{gg 
ModuleIdhh  
=hh! "
moduleIdhh# +
,hh+ ,
Specificultureii &
=ii' (
_langii) .
,ii. /
Fieldsjj 
=jj  
	getModulejj! *
.jj* +
Datajj+ /
.jj/ 0
Fieldsjj0 6
}kk 
)kk 
;kk 
returnll 
newll 
RepositoryResponsell -
<ll- .!
BEModuleDataViewModelll. C
>llC D
(llD E
)llE F
{mm 
	IsSucceednn 
=nn 
truenn  $
,nn$ %
Dataoo 
=oo 

ModuleDataoo %
}pp 
;pp 
}qq 
elserr 
{ss 
returntt 
newtt 
RepositoryResponsett -
<tt- .!
BEModuleDataViewModeltt. C
>ttC D
(ttD E
)ttE F
{uu 
	IsSucceedvv 
=vv 
falsevv  %
,vv% &
Dataww 
=ww 
nullww 
,ww  
	Exceptionxx 
=xx 
	getModulexx  )
.xx) *
	Exceptionxx* 3
,xx3 4
Errorsyy 
=yy 
	getModuleyy &
.yy& '
Errorsyy' -
}zz 
;zz 
}{{ 
}|| 	
[ 	
HttpGet	 
] 
[
ÄÄ 	
Route
ÄÄ	 
(
ÄÄ 
$str
ÄÄ 
)
ÄÄ 
]
ÄÄ 
public
ÅÅ 
Task
ÅÅ 
<
ÅÅ  
RepositoryResponse
ÅÅ &
<
ÅÅ& '
bool
ÅÅ' +
>
ÅÅ+ ,
>
ÅÅ, -
Delete
ÅÅ. 4
(
ÅÅ4 5
string
ÅÅ5 ;
id
ÅÅ< >
)
ÅÅ> ?
{
ÇÇ 	
return
ÉÉ %
InfoModuleDataViewModel
ÉÉ *
.
ÉÉ* +

Repository
ÉÉ+ 5
.
ÉÉ5 6
RemoveModelAsync
ÉÉ6 F
(
ÉÉF G
model
ÉÉG L
=>
ÉÉM O
model
ÉÉP U
.
ÉÉU V
Id
ÉÉV X
==
ÉÉY [
id
ÉÉ\ ^
&&
ÉÉ_ a
model
ÉÉb g
.
ÉÉg h
Specificulture
ÉÉh v
==
ÉÉw y
_lang
ÉÉz 
)ÉÉ Ä
;ÉÉÄ Å
}
ÑÑ 	
[
áá 	
HttpGet
áá	 
]
áá 
[
àà 	
Route
àà	 
(
àà 
$str
àà 
)
àà 
]
àà 
[
ââ 	
Route
ââ	 
(
ââ 
$str
ââ <
)
ââ< =
]
ââ= >
[
ää 	
Route
ää	 
(
ää 
$str
ää 1
)
ää1 2
]
ää2 3
[
ãã 	
Route
ãã	 
(
ãã 
$str
ãã R
)
ããR S
]
ããS T
public
åå 
async
åå 
Task
åå 
<
åå  
RepositoryResponse
åå ,
<
åå, -
PaginationModel
åå- <
<
åå< =%
InfoModuleDataViewModel
åå= T
>
ååT U
>
ååU V
>
ååV W
Get
ååX [
(
åå[ \
int
çç 
moduleId
çç 
,
çç 
int
éé 
?
éé 
pageSize
éé 
=
éé 
$num
éé 
,
éé 
int
éé  #
?
éé# $
	pageIndex
éé% .
=
éé/ 0
$num
éé1 2
,
éé2 3
string
éé4 :
orderBy
éé; B
=
ééC D
$str
ééE O
,
èè 
OrderByDirection
èè 
	direction
èè (
=
èè) *
OrderByDirection
èè+ ;
.
èè; <
	Ascending
èè< E
)
èèE F
{
êê 	
var
ëë 
result
ëë 
=
ëë 
await
ëë %
InfoModuleDataViewModel
ëë 6
.
ëë6 7

Repository
ëë7 A
.
ëëA B!
GetModelListByAsync
ëëB U
(
ëëU V
m
íí 
=>
íí 
m
íí 
.
íí 
ModuleId
íí 
==
íí  "
moduleId
íí# +
&&
íí, .
m
íí/ 0
.
íí0 1
Specificulture
íí1 ?
==
íí@ B
_lang
ííC H
,
ííH I
orderBy
ííJ Q
,
ííQ R
	direction
ííS \
,
íí\ ]
pageSize
íí^ f
,
ííf g
	pageIndex
ííh q
)
ííq r
.
íír s
ConfigureAwaitíís Å
(ííÅ Ç
falseííÇ á
)ííá à
;ííà â
string
ìì 
domain
ìì 
=
ìì 
string
ìì "
.
ìì" #
Format
ìì# )
(
ìì) *
$str
ìì* 5
,
ìì5 6
Request
ìì7 >
.
ìì> ?
Scheme
ìì? E
,
ììE F
Request
ììG N
.
ììN O
Host
ììO S
)
ììS T
;
ììT U
result
îî 
.
îî 
Data
îî 
.
îî 
	JsonItems
îî !
=
îî" #
new
îî$ '
List
îî( ,
<
îî, -

Newtonsoft
îî- 7
.
îî7 8
Json
îî8 <
.
îî< =
Linq
îî= A
.
îîA B
JObject
îîB I
>
îîI J
(
îîJ K
)
îîK L
;
îîL M
result
ïï 
.
ïï 
Data
ïï 
.
ïï 
Items
ïï 
.
ïï 
ForEach
ïï %
(
ïï% &
i
ïï& '
=>
ïï( *
result
ïï+ 1
.
ïï1 2
Data
ïï2 6
.
ïï6 7
	JsonItems
ïï7 @
.
ïï@ A
Add
ïïA D
(
ïïD E
i
ïïE F
.
ïïF G
	ParseJson
ïïG P
(
ïïP Q
)
ïïQ R
)
ïïR S
)
ïïS T
;
ïïT U
return
ññ 
result
ññ 
;
ññ 
}
óó 	
[
öö 	
HttpGet
öö	 
]
öö 
[
õõ 	
Route
õõ	 
(
õõ 
$str
õõ 4
)
õõ4 5
]
õõ5 6
[
úú 	
Route
úú	 
(
úú 
$str
úú U
)
úúU V
]
úúV W
[
ùù 	
Route
ùù	 
(
ùù 
$str
ùù J
)
ùùJ K
]
ùùK L
[
ûû 	
Route
ûû	 
(
ûû 
$str
ûû k
)
ûûk l
]
ûûl m
public
üü 
async
üü 
Task
üü 
<
üü  
RepositoryResponse
üü ,
<
üü, -
PaginationModel
üü- <
<
üü< =%
InfoModuleDataViewModel
üü= T
>
üüT U
>
üüU V
>
üüV W
GetByArticle
üüX d
(
üüd e
string
†† 
	articleId
†† 
,
†† 
int
†† !
moduleId
††" *
,
††* +
int
°° 
?
°° 
pageSize
°° 
=
°° 
$num
°° 
,
°° 
int
°°  #
?
°°# $
	pageIndex
°°% .
=
°°/ 0
$num
°°1 2
,
°°2 3
string
°°4 :
orderBy
°°; B
=
°°C D
$str
°°E O
,
¢¢ 
OrderByDirection
¢¢ 
	direction
¢¢ (
=
¢¢) *
OrderByDirection
¢¢+ ;
.
¢¢; <
	Ascending
¢¢< E
)
¢¢E F
{
££ 	
var
§§ 
result
§§ 
=
§§ 
await
§§ %
InfoModuleDataViewModel
§§ 6
.
§§6 7

Repository
§§7 A
.
§§A B!
GetModelListByAsync
§§B U
(
§§U V
m
•• 
=>
•• 
m
•• 
.
•• 
ModuleId
•• 
==
••  "
moduleId
••# +
&&
••, .
m
••/ 0
.
••0 1
	ArticleId
••1 :
==
••; =
	articleId
••> G
&&
••H J
m
••K L
.
••L M
Specificulture
••M [
==
••\ ^
_lang
••_ d
,
••d e
orderBy
¶¶ 
,
¶¶ 
	direction
¶¶ "
,
¶¶" #
pageSize
¶¶$ ,
,
¶¶, -
	pageIndex
¶¶. 7
)
¶¶7 8
.
¶¶8 9
ConfigureAwait
¶¶9 G
(
¶¶G H
false
¶¶H M
)
¶¶M N
;
¶¶N O
string
ßß 
domain
ßß 
=
ßß 
string
ßß "
.
ßß" #
Format
ßß# )
(
ßß) *
$str
ßß* 5
,
ßß5 6
Request
ßß7 >
.
ßß> ?
Scheme
ßß? E
,
ßßE F
Request
ßßG N
.
ßßN O
Host
ßßO S
)
ßßS T
;
ßßT U
result
®® 
.
®® 
Data
®® 
.
®® 
	JsonItems
®® !
=
®®" #
new
®®$ '
List
®®( ,
<
®®, -

Newtonsoft
®®- 7
.
®®7 8
Json
®®8 <
.
®®< =
Linq
®®= A
.
®®A B
JObject
®®B I
>
®®I J
(
®®J K
)
®®K L
;
®®L M
result
©© 
.
©© 
Data
©© 
.
©© 
Items
©© 
.
©© 
ForEach
©© %
(
©©% &
i
©©& '
=>
©©( *
result
©©+ 1
.
©©1 2
Data
©©2 6
.
©©6 7
	JsonItems
©©7 @
.
©©@ A
Add
©©A D
(
©©D E
i
©©E F
.
©©F G
	ParseJson
©©G P
(
©©P Q
)
©©Q R
)
©©R S
)
©©S T
;
©©T U
return
™™ 
result
™™ 
;
™™ 
}
´´ 	
[
ÆÆ 	
HttpGet
ÆÆ	 
]
ÆÆ 
[
ØØ 	
Route
ØØ	 
(
ØØ 
$str
ØØ %
)
ØØ% &
]
ØØ& '
[
∞∞ 	
Route
∞∞	 
(
∞∞ 
$str
∞∞ F
)
∞∞F G
]
∞∞G H
[
±± 	
Route
±±	 
(
±± 
$str
±± \
)
±±\ ]
]
±±] ^
public
≤≤ 
async
≤≤ 
Task
≤≤ 
<
≤≤  
RepositoryResponse
≤≤ ,
<
≤≤, -
PaginationModel
≤≤- <
<
≤≤< =%
InfoModuleDataViewModel
≤≤= T
>
≤≤T U
>
≤≤U V
>
≤≤V W
Search
≤≤X ^
(
≤≤^ _
int
≤≤_ b
moduleId
≤≤c k
,
≤≤k l
string
≤≤m s
keyword
≤≤t {
=
≤≤| }
null≤≤~ Ç
,≤≤Ç É
int≤≤Ñ á
?≤≤á à
pageSize≤≤â ë
=≤≤í ì
null≤≤î ò
,≤≤ò ô
int≤≤ö ù
?≤≤ù û
	pageIndex≤≤ü ®
=≤≤© ™
null≤≤´ Ø
,≤≤Ø ∞
string≤≤± ∑
orderBy≤≤∏ ø
=≤≤¿ ¡
$str≤≤¬ ∆
,≤≤∆ « 
OrderByDirection≤≤» ÿ
	direction≤≤Ÿ ‚
=≤≤„ ‰ 
OrderByDirection≤≤Â ı
.≤≤ı ˆ
	Ascending≤≤ˆ ˇ
)≤≤ˇ Ä
{
≥≥ 	

Expression
¥¥ 
<
¥¥ 
Func
¥¥ 
<
¥¥ 
SiocModuleData
¥¥ *
,
¥¥* +
bool
¥¥, 0
>
¥¥0 1
>
¥¥1 2
	predicate
¥¥3 <
=
¥¥= >
model
¥¥? D
=>
¥¥E G
model
µµ 
.
µµ 
ModuleId
µµ 
==
µµ !
moduleId
µµ" *
&&
∂∂ 
model
∂∂ 
.
∂∂ 
Specificulture
∂∂ '
==
∂∂( *
_lang
∂∂+ 0
&&
∑∑ 
(
∑∑ 
string
∑∑ 
.
∑∑  
IsNullOrWhiteSpace
∑∑ -
(
∑∑- .
keyword
∑∑. 5
)
∑∑5 6
||
∑∑7 9
(
∑∑: ;
model
∑∑; @
.
∑∑@ A
Fields
∑∑A G
.
∑∑G H
Contains
∑∑H P
(
∑∑P Q
keyword
∑∑Q X
)
∑∑X Y
)
∑∑Y Z
)
∑∑Z [
;
∑∑[ \
var
ππ 
result
ππ 
=
ππ 
await
ππ %
InfoModuleDataViewModel
ππ 6
.
ππ6 7

Repository
ππ7 A
.
ππA B!
GetModelListByAsync
ππB U
(
ππU V
	predicate
ππV _
,
ππ_ `
orderBy
ππa h
,
ππh i
	direction
ππj s
,
ππs t
pageSize
ππu }
,
ππ} ~
	pageIndexππ à
)ππà â
.ππâ ä
ConfigureAwaitππä ò
(ππò ô
falseππô û
)ππû ü
;ππü †
result
∫∫ 
.
∫∫ 
Data
∫∫ 
.
∫∫ 
	JsonItems
∫∫ !
=
∫∫" #
new
∫∫$ '
List
∫∫( ,
<
∫∫, -

Newtonsoft
∫∫- 7
.
∫∫7 8
Json
∫∫8 <
.
∫∫< =
Linq
∫∫= A
.
∫∫A B
JObject
∫∫B I
>
∫∫I J
(
∫∫J K
)
∫∫K L
;
∫∫L M
result
ªª 
.
ªª 
Data
ªª 
.
ªª 
Items
ªª 
.
ªª 
ForEach
ªª %
(
ªª% &
i
ªª& '
=>
ªª( *
result
ªª+ 1
.
ªª1 2
Data
ªª2 6
.
ªª6 7
	JsonItems
ªª7 @
.
ªª@ A
Add
ªªA D
(
ªªD E
i
ªªE F
.
ªªF G
	ParseJson
ªªG P
(
ªªP Q
)
ªªQ R
)
ªªR S
)
ªªS T
;
ªªT U
return
ºº 
result
ºº 
;
ºº 
}
ΩΩ 	
}
ææ 
}øø ¶
`E:\_Workspace\Github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiNavigationController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Route 

(
 
$str 
) 
]  
public 

class #
ApiNavigationController (
:) *
BaseApiController 
{ 
public #
ApiNavigationController &
(& '
IHostingEnvironment' :
env; >
)> ?
{ 	
}   	
[&& 	
HttpPost&&	 
,&& 
HttpOptions&& 
]&& 
['' 	
Route''	 
('' 
$str'' %
)''% &
]''& '
public(( 
async(( 
Task(( 
<(( 
RepositoryResponse(( ,
<((, -
PaginationModel((- <
<((< =&
NavRelatedProductViewModel((= W
>((W X
>((X Y
>((Y Z
GetList(([ b
(((b c
RequestPaging((c p
request((q x
)((x y
{)) 	
if** 
(** 
string** 
.** 
IsNullOrEmpty** $
(**$ %
request**% ,
.**, -
Keyword**- 4
)**4 5
)**5 6
{++ 
var,, 
data,, 
=,, 
await,,  &
NavRelatedProductViewModel,,! ;
.,,; <

Repository,,< F
.,,F G
GetModelListByAsync,,G Z
(,,Z [
m-- 
=>-- 
m-- 
.-- 
Specificulture-- %
==--& (
_lang--) .
,--. /
request--0 7
.--7 8
OrderBy--8 ?
,--? @
request--A H
.--H I
	Direction--I R
,--R S
request--T [
.--[ \
PageSize--\ d
,--d e
request--f m
.--m n
	PageIndex--n w
)--w x
.--x y
ConfigureAwait	--y á
(
--á à
false
--à ç
)
--ç é
;
--é è
return// 
data// 
;// 
}00 
else11 
{22 

Expression33 
<33 
Func33 
<33  
SiocRelatedProduct33  2
,332 3
bool334 8
>338 9
>339 :
	predicate33; D
=33E F
model33G L
=>33M O
model44 
.44 
Specificulture44 (
==44) +
_lang44, 1
&&55 
(55 
string55 
.55 
IsNullOrWhiteSpace55 1
(551 2
request552 9
.559 :
Keyword55: A
)55A B
)55B C
;55C D
var66 
data66 
=66 
await66  &
NavRelatedProductViewModel66! ;
.66; <

Repository66< F
.66F G
GetModelListByAsync66G Z
(66Z [
	predicate66[ d
,66d e
request66f m
.66m n
OrderBy66n u
,66u v
request66w ~
.66~ 
	Direction	66 à
,
66à â
request
66ä ë
.
66ë í
PageSize
66í ö
,
66ö õ
request
66ú £
.
66£ §
	PageIndex
66§ ≠
)
66≠ Æ
.
66Æ Ø
ConfigureAwait
66Ø Ω
(
66Ω æ
false
66æ √
)
66√ ƒ
;
66ƒ ≈
return88 
data88 
;88 
}99 
}:: 	
}@@ 
}AA ‘å
ZE:\_Workspace\Github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiPageController.cs
	namespace 	
Swastka
 
. 
IO 
. 
Cms 
. 
Api 
. 
Controllers (
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str 
)  
]  !
[ 
Route 

(
 
$str #
)# $
]$ %
public 

class !
ApiCategoryController &
:' (
BaseApiController 
< 
SiocCmsContext (
,( )
SiocCategory* 6
>6 7
{ 
[ 	
HttpGet	 
] 
[   	
Route  	 
(   
$str   
)   
]   
public!! 
Task!! 
<!! 
RepositoryResponse!! &
<!!& '
FECategoryViewModel!!' :
>!!: ;
>!!; <
Details!!= D
(!!D E
int!!E H
id!!I K
)!!K L
{"" 	
return## 
FECategoryViewModel## &
.##& '

Repository##' 1
.##1 2
GetSingleModelAsync##2 E
(##E F
model$$ 
=>$$ 
model$$ 
.$$ 
Id$$ !
==$$" $
id$$% '
&&$$( *
model$$+ 0
.$$0 1
Specificulture$$1 ?
==$$@ B
_lang$$C H
)$$H I
;$$I J
}%% 	
[)) 	
HttpGet))	 
])) 
[** 	
Route**	 
(** 
$str** 
)** 
]** 
public++ 
async++ 
Task++ 
<++ 
RepositoryResponse++ ,
<++, -
bool++- 1
>++1 2
>++2 3
DeleteAsync++4 ?
(++? @
int++@ C
id++D F
)++F G
{,, 	
var-- 
getPage-- 
=-- 
await-- 
FECategoryViewModel-- 2
.--2 3

Repository--3 =
.--= >
GetSingleModelAsync--> Q
(--Q R
model.. 
=>.. 
model.. 
... 
Id.. !
==.." $
id..% '
&&..( *
model..+ 0
...0 1
Specificulture..1 ?
==..@ B
_lang..C H
)..H I
;..I J
if// 
(// 
getPage// 
.// 
	IsSucceed// !
)//! "
{00 
return22 
await22 
getPage22 $
.22$ %
Data22% )
.22) *
RemoveModelAsync22* :
(22: ;
true22; ?
)22? @
;22@ A
}33 
else44 
{55 
return66 
new66 
RepositoryResponse66 -
<66- .
bool66. 2
>662 3
(663 4
)664 5
{77 
	IsSucceed88 
=88 
false88  %
}99 
;99 
}:: 
};; 	
[>> 	
HttpGet>>	 
]>> 
[?? 	
Route??	 
(?? 
$str?? %
)??% &
]??& '
public@@ 
Task@@ 
<@@ 
RepositoryResponse@@ &
<@@& '
BECategoryViewModel@@' :
>@@: ;
>@@; <
	BEDetails@@= F
(@@F G
int@@G J
id@@K M
)@@M N
{AA 	
returnBB 
BECategoryViewModelBB &
.BB& '

RepositoryBB' 1
.BB1 2
GetSingleModelAsyncBB2 E
(BBE F
modelCC 
=>CC 
modelCC 
.CC 
IdCC !
==CC" $
idCC% '
&&CC( *
modelCC+ 0
.CC0 1
SpecificultureCC1 ?
==CC@ B
_langCCC H
)CCH I
;CCI J
}DD 	
[GG 	
HttpGetGG	 
]GG 
[HH 	
RouteHH	 
(HH 
$strHH 
)HH  
]HH  !
[II 	
RouteII	 
(II 
$strII +
)II+ ,
]II, -
publicJJ 
TaskJJ 
<JJ 
RepositoryResponseJJ &
<JJ& '
FECategoryViewModelJJ' :
>JJ: ;
>JJ; <
GetByArticleJJ= I
(JJI J
intJJJ M
idJJN P
,JJP Q
stringJJR X
	articleIdJJY b
=JJc d
nullJJe i
)JJi j
{KK 	
returnLL 
FECategoryViewModelLL &
.LL& '

RepositoryLL' 1
.LL1 2
GetSingleModelAsyncLL2 E
(LLE F
modelMM 
=>MM 
modelMM 
.MM 
IdMM !
==MM" $
idMM% '
&&MM( *
modelMM+ 0
.MM0 1
SpecificultureMM1 ?
==MM@ B
_langMMC H
)MMH I
;MMI J
}NN 	
[QQ 	
HttpGetQQ	 
]QQ 
[RR 	
RouteRR	 
(RR 
$strRR 
)RR 
]RR 
[SS 	
RouteSS	 
(SS 
$strSS 6
)SS6 7
]SS7 8
[TT 	
RouteTT	 
(TT 
$strTT +
)TT+ ,
]TT, -
[UU 	
RouteUU	 
(UU 
$strUU L
)UUL M
]UUM N
publicVV 
asyncVV 
TaskVV 
<VV 
RepositoryResponseVV ,
<VV, -
PaginationModelVV- <
<VV< =!
InfoCategoryViewModelVV= R
>VVR S
>VVS T
>VVT U
GetVVV Y
(VVY Z
intWW 
?WW 
PageSizeWW 
=WW 
$numWW 
,WW 
intWW  #
?WW# $
	PageIndexWW% .
=WW/ 0
$numWW1 2
,WW2 3
stringWW4 :
orderByWW; B
=WWC D
$strWWE I
,XX 
OrderByDirectionXX 
	directionXX (
=XX) *
OrderByDirectionXX+ ;
.XX; <
	AscendingXX< E
)XXE F
{YY 	
varZZ 
dataZZ 
=ZZ 
awaitZZ !
InfoCategoryViewModelZZ 2
.ZZ2 3

RepositoryZZ3 =
.ZZ= >
GetModelListByAsyncZZ> Q
(ZZQ R
mZZR S
=>ZZT V
mZZW X
.ZZX Y
SpecificultureZZY g
==ZZh j
_langZZk p
,ZZp q
orderByZZr y
,ZZy z
	direction	ZZ{ Ñ
,
ZZÑ Ö
PageSize
ZZÜ é
,
ZZé è
	PageIndex
ZZê ô
)
ZZô ö
.
ZZö õ
ConfigureAwait
ZZõ ©
(
ZZ© ™
false
ZZ™ Ø
)
ZZØ ∞
;
ZZ∞ ±
string[[ 
domain[[ 
=[[ 
string[[ "
.[[" #
Format[[# )
([[) *
$str[[* 5
,[[5 6
Request[[7 >
.[[> ?
Scheme[[? E
,[[E F
Request[[G N
.[[N O
Host[[O S
)[[S T
;[[T U
return^^ 
data^^ 
;^^ 
}__ 	
[bb 	
HttpGetbb	 
]bb 
[cc 	
Routecc	 
(cc 
$strcc !
)cc! "
]cc" #
[dd 	
Routedd	 
(dd 
$strdd B
)ddB C
]ddC D
[ee 	
Routeee	 
(ee 
$stree P
)eeP Q
]eeQ R
[ff 	
Routeff	 
(ff 
$strff X
)ffX Y
]ffY Z
[gg 	
Routegg	 
(gg 
$strgg f
)ggf g
]ggg h
publichh 
Taskhh 
<hh 
RepositoryResponsehh &
<hh& '
PaginationModelhh' 6
<hh6 7!
InfoCategoryViewModelhh7 L
>hhL M
>hhM N
>hhN O
SearchhhP V
(hhV W
stringii 
keywordii 
=ii 
nullii !
,ii! "
stringjj 
descriptionjj 
=jj  
nulljj! %
,jj% &
intkk 
?kk 
PageSizekk 
=kk 
nullkk  
,kk  !
intkk" %
?kk% &
	PageIndexkk' 0
=kk1 2
nullkk3 7
,kk7 8
stringkk9 ?
orderBykk@ G
=kkH I
$strkkJ N
,ll 
OrderByDirectionll 
	directionll (
=ll) *
OrderByDirectionll+ ;
.ll; <
	Ascendingll< E
)llE F
{mm 	

Expressionnn 
<nn 
Funcnn 
<nn 
SiocCategorynn (
,nn( )
boolnn* .
>nn. /
>nn/ 0
	predicatenn1 :
=nn; <
modelnn= B
=>nnC E
modeloo 
.oo 
Specificultureoo  
==oo! #
_langoo$ )
&&pp 
(pp 
stringpp 
.pp 
IsNullOrWhiteSpacepp )
(pp) *
keywordpp* 1
)pp1 2
||pp3 5
(pp6 7
modelpp7 <
.pp< =
Titlepp= B
.ppB C
ContainsppC K
(ppK L
keywordppL S
)ppS T
)ppT U
)ppU V
&&qq 
(qq 
stringqq 
.qq 
IsNullOrWhiteSpaceqq )
(qq) *
descriptionqq* 5
)qq5 6
||qq7 9
(qq: ;
modelqq; @
.qq@ A
ExcerptqqA H
.qqH I
ContainsqqI Q
(qqQ R
descriptionqqR ]
)qq] ^
)qq^ _
)qq_ `
;qq` a
returnrr !
InfoCategoryViewModelrr (
.ss 

Repositoryss 
.tt 
GetModelListByAsynctt $
(tt$ %
	predicatett% .
,tt. /
orderBytt0 7
,tt7 8
	directiontt9 B
,ttB C
PageSizettD L
,ttL M
	PageIndexttN W
)ttW X
;ttX Y
}uu 	
[|| 	
HttpPost||	 
,|| 
HttpOptions|| 
]|| 
[}} 	
Route}}	 
(}} 
$str}} 
)}} 
]}} 
public~~ 
async~~ 
Task~~ 
<~~ 
RepositoryResponse~~ ,
<~~, -
BECategoryViewModel~~- @
>~~@ A
>~~A B
Post~~C G
(~~G H
[~~H I
FromBody~~I Q
]~~Q R
BECategoryViewModel~~R e
model~~f k
)~~k l
{ 	
if
ÄÄ 
(
ÄÄ 
model
ÄÄ 
!=
ÄÄ 
null
ÄÄ 
)
ÄÄ 
{
ÅÅ 
var
ÇÇ 
result
ÇÇ 
=
ÇÇ 
await
ÇÇ "
model
ÇÇ# (
.
ÇÇ( )
SaveModelAsync
ÇÇ) 7
(
ÇÇ7 8
true
ÇÇ8 <
)
ÇÇ< =
.
ÇÇ= >
ConfigureAwait
ÇÇ> L
(
ÇÇL M
false
ÇÇM R
)
ÇÇR S
;
ÇÇS T
return
ÉÉ 
result
ÉÉ 
;
ÉÉ 
}
ÑÑ 
return
ÖÖ 
new
ÖÖ  
RepositoryResponse
ÖÖ )
<
ÖÖ) *!
BECategoryViewModel
ÖÖ* =
>
ÖÖ= >
(
ÖÖ> ?
)
ÖÖ? @
;
ÖÖ@ A
}
ÜÜ 	
[
ââ 	
HttpPost
ââ	 
,
ââ 
HttpOptions
ââ 
]
ââ 
[
ää 	
Route
ää	 
(
ää 
$str
ää 
)
ää 
]
ää 
public
ãã 
async
ãã 
Task
ãã 
<
ãã  
RepositoryResponse
ãã ,
<
ãã, -
bool
ãã- 1
>
ãã1 2
>
ãã2 3

SaveFields
ãã4 >
(
ãã> ?
int
ãã? B
id
ããC E
,
ããE F
[
ããG H
FromBody
ããH P
]
ããP Q
List
ããQ U
<
ããU V
EntityField
ããV a
>
ããa b
fields
ããc i
)
ããi j
{
åå 	
if
çç 
(
çç 
fields
çç 
!=
çç 
null
çç 
)
çç 
{
éé 
foreach
èè 
(
èè 
var
èè 
property
èè %
in
èè& (
fields
èè) /
)
èè/ 0
{
êê 
var
ëë 
result
ëë 
=
ëë  
await
ëë! &#
InfoCategoryViewModel
ëë' <
.
ëë< =

Repository
ëë= G
.
ëëG H
UpdateFieldsAsync
ëëH Y
(
ëëY Z
c
ëëZ [
=>
ëë\ ^
c
ëë_ `
.
ëë` a
Id
ëëa c
==
ëëd f
id
ëëg i
&&
ëëj l
c
ëëm n
.
ëën o
Specificulture
ëëo }
==ëë~ Ä
_langëëÅ Ü
,ëëÜ á
fieldsëëà é
)ëëé è
.ëëè ê
ConfigureAwaitëëê û
(ëëû ü
falseëëü §
)ëë§ •
;ëë• ¶
return
ìì 
result
ìì !
;
ìì! "
}
îî 
}
ïï 
return
ññ 
new
ññ  
RepositoryResponse
ññ )
<
ññ) *
bool
ññ* .
>
ññ. /
(
ññ/ 0
)
ññ0 1
;
ññ1 2
}
óó 	
[
öö 	
HttpPost
öö	 
,
öö 
HttpOptions
öö 
]
öö 
[
õõ 	
Route
õõ	 
(
õõ 
$str
õõ 
)
õõ 
]
õõ 
public
úú 
async
úú 
Task
úú 
<
úú  
RepositoryResponse
úú ,
<
úú, -
PaginationModel
úú- <
<
úú< =#
InfoCategoryViewModel
úú= R
>
úúR S
>
úúS T
>
úúT U
GetList
úúV ]
(
úú] ^
RequestPaging
úú^ k
request
úúl s
)
úús t
{
ùù 	
string
ûû 
domain
ûû 
=
ûû 
string
ûû "
.
ûû" #
Format
ûû# )
(
ûû) *
$str
ûû* 5
,
ûû5 6
Request
ûû7 >
.
ûû> ?
Scheme
ûû? E
,
ûûE F
Request
ûûG N
.
ûûN O
Host
ûûO S
)
ûûS T
;
ûûT U

Expression
†† 
<
†† 
Func
†† 
<
†† 
SiocCategory
†† (
,
††( )
bool
††* .
>
††. /
>
††/ 0
	predicate
††1 :
=
††; <
model
††= B
=>
††C E
model
°° 
.
°° 
Specificulture
°° $
==
°°% '
_lang
°°( -
&&
¢¢ 
(
¢¢ 
string
¢¢ 
.
¢¢  
IsNullOrWhiteSpace
¢¢ -
(
¢¢- .
request
¢¢. 5
.
¢¢5 6
Keyword
¢¢6 =
)
¢¢= >
||
££ 
(
££ 
model
££ 
.
££ 
Title
££ #
.
££# $
Contains
££$ ,
(
££, -
request
££- 4
.
££4 5
Keyword
££5 <
)
££< =
||
§§ 
model
§§ 
.
§§ 
Excerpt
§§ $
.
§§$ %
Contains
§§% -
(
§§- .
request
§§. 5
.
§§5 6
Keyword
§§6 =
)
§§= >
)
§§> ?
)
§§? @
&&
•• 
(
•• 
!
•• 
request
•• 
.
•• 
FromDate
•• %
.
••% &
HasValue
••& .
||
¶¶ 
(
¶¶ 
model
¶¶ 
.
¶¶ 
CreatedDateTime
¶¶ -
>=
¶¶. 0
request
¶¶1 8
.
¶¶8 9
FromDate
¶¶9 A
.
¶¶A B
Value
¶¶B G
.
¶¶G H
ToUniversalTime
¶¶H W
(
¶¶W X
)
¶¶X Y
)
¶¶Y Z
)
ßß 
&&
®® 
(
®® 
!
®® 
request
®® 
.
®® 
ToDate
®® #
.
®®# $
HasValue
®®$ ,
||
©© 
(
©© 
model
©© 
.
©© 
CreatedDateTime
©© -
<=
©©. 0
request
©©1 8
.
©©8 9
ToDate
©©9 ?
.
©©? @
Value
©©@ E
.
©©E F
ToUniversalTime
©©F U
(
©©U V
)
©©V W
)
©©W X
)
™™ 
;
´´ 
var
≠≠ 
data
≠≠ 
=
≠≠ 
await
≠≠ #
InfoCategoryViewModel
≠≠ 2
.
≠≠2 3

Repository
≠≠3 =
.
≠≠= >!
GetModelListByAsync
≠≠> Q
(
≠≠Q R
	predicate
≠≠R [
,
≠≠[ \
request
≠≠] d
.
≠≠d e
OrderBy
≠≠e l
,
≠≠l m
request
≠≠n u
.
≠≠u v
	Direction
≠≠v 
,≠≠ Ä
request≠≠Å à
.≠≠à â
PageSize≠≠â ë
,≠≠ë í
request≠≠ì ö
.≠≠ö õ
	PageIndex≠≠õ §
)≠≠§ •
.≠≠• ¶
ConfigureAwait≠≠¶ ¥
(≠≠¥ µ
false≠≠µ ∫
)≠≠∫ ª
;≠≠ª º
if
ÆÆ 
(
ÆÆ 
data
ÆÆ 
.
ÆÆ 
	IsSucceed
ÆÆ 
)
ÆÆ 
{
ØØ 
data
∞∞ 
.
∞∞ 
Data
∞∞ 
.
∞∞ 
Items
∞∞ 
.
∞∞  
ForEach
∞∞  '
(
∞∞' (
a
∞∞( )
=>
∞∞* ,
{
±± 
a
≤≤ 
.
≤≤ 

DetailsUrl
≤≤  
=
≤≤! "
SWCmsHelper
≤≤# .
.
≤≤. /
GetRouterUrl
≤≤/ ;
(
≤≤; <
$str
≥≥ 
,
≥≥ 
new
≥≥  #
{
≥≥$ %
a
≥≥& '
.
≥≥' (
SeoName
≥≥( /
}
≥≥0 1
,
≥≥1 2
Request
≥≥3 :
,
≥≥: ;
Url
≥≥< ?
)
≥≥? @
;
≥≥@ A
}
¥¥ 
)
µµ 
;
µµ 
}
∂∂ 
return
∑∑ 
data
∑∑ 
;
∑∑ 
}
∏∏ 	
}
ªª 
}ºº “
]E:\_Workspace\Github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiProductController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str "
)" #
]# $
public 

class  
ApiProductController %
:& '
BaseApiController   
<   
SiocCmsContext   (
,  ( )
SiocProduct  * 5
>  5 6
{!! 
public""  
ApiProductController"" #
(""# $
IHostingEnvironment""$ 7
env""8 ;
)""; <
:""= >
base""? C
(""C D
env""D G
)""G H
{## 	
}$$ 	
[)) 	
HttpGet))	 
])) 
[** 	
Route**	 
(** 
$str** (
)**( )
]**) *
public++ 
async++ 
Task++ 
<++ 
JObject++ !
>++! "
	BEDetails++# ,
(++, -
string++- 3
viewType++4 <
,++< =
string++> D
id++E G
)++G H
{,, 	
switch-- 
(-- 
viewType-- 
)-- 
{.. 
case// 
$str// 
:// 
var00 
beResult00  
=00! "
await00# (
BEProductViewModel00) ;
.00; <

Repository00< F
.00F G
GetSingleModelAsync00G Z
(00Z [
model00[ `
=>00a c
model00d i
.00i j
Id00j l
==00m o
id00p r
&&00s u
model00v {
.00{ |
Specificulture	00| ä
==
00ã ç
_lang
00é ì
)
00ì î
.
00î ï
ConfigureAwait
00ï £
(
00£ §
false
00§ ©
)
00© ™
;
00™ ´
if11 
(11 
beResult11  
.11  !
	IsSucceed11! *
)11* +
{22 
beResult33  
.33  !
Data33! %
.33% &

DetailsUrl33& 0
=331 2
SWCmsHelper333 >
.33> ?
GetRouterUrl33? K
(33K L
$str33L U
,33U V
new33W Z
{33[ \
beResult33] e
.33e f
Data33f j
.33j k
SeoName33k r
}33s t
,33t u
Request33v }
,33} ~
Url	33 Ç
)
33Ç É
;
33É Ñ
}44 
return55 
JObject55 "
.55" #

FromObject55# -
(55- .
beResult55. 6
)556 7
;557 8
default77 
:77 
var88 
feResult88  
=88! "
await88# (
FEProductViewModel88) ;
.88; <

Repository88< F
.88F G
GetSingleModelAsync88G Z
(88Z [
model88[ `
=>88a c
model88d i
.88i j
Id88j l
==88m o
id88p r
&&88s u
model88v {
.88{ |
Specificulture	88| ä
==
88ã ç
_lang
88é ì
)
88ì î
.
88î ï
ConfigureAwait
88ï £
(
88£ §
false
88§ ©
)
88© ™
;
88™ ´
if99 
(99 
feResult99  
.99  !
	IsSucceed99! *
)99* +
{:: 
feResult;;  
.;;  !
Data;;! %
.;;% &

DetailsUrl;;& 0
=;;1 2
SWCmsHelper;;3 >
.;;> ?
GetRouterUrl;;? K
(;;K L
$str;;L U
,;;U V
new;;W Z
{;;[ \
feResult;;] e
.;;e f
Data;;f j
.;;j k
SeoName;;k r
};;s t
,;;t u
Request;;v }
,;;} ~
Url	;; Ç
)
;;Ç É
;
;;É Ñ
}<< 
return== 
JObject== "
.==" #

FromObject==# -
(==- .
feResult==. 6
)==6 7
;==7 8
}>> 
}?? 	
[BB 	
HttpGetBB	 
]BB 
[CC 	
RouteCC	 
(CC 
$strCC 
)CC 
]CC 
publicDD 
RepositoryResponseDD !
<DD! "
BEProductViewModelDD" 4
>DD4 5
CreateDD6 <
(DD< =
)DD= >
{EE 	
SiocProductFF 
productFF 
=FF  !
newFF" %
SiocProductFF& 1
(FF1 2
)FF2 3
{GG 
SpecificultureII 
=II  
_langII! &
}KK 
;KK 
returnLL 
newLL 
RepositoryResponseLL )
<LL) *
BEProductViewModelLL* <
>LL< =
(LL= >
)LL> ?
{MM 
	IsSucceedNN 
=NN 
trueNN  
,NN  !
DataOO 
=OO 
newOO 
BEProductViewModelOO -
(OO- .
productOO. 5
)OO5 6
{OO7 8
StatusOO9 ?
=OO@ A
SWStatusOOB J
.OOJ K
PreviewOOK R
}OOS T
}PP 
;PP 
}QQ 	
[TT 	
HttpGetTT	 
]TT 
[UU 	
RouteUU	 
(UU 
$strUU  
)UU  !
]UU! "
publicVV 
JObjectVV 
InitVV 
(VV 
stringVV "
viewTypeVV# +
)VV+ ,
{WW 	
SiocProductXX 
productXX 
=XX  !
newXX" %
SiocProductXX& 1
(XX1 2
)XX2 3
{YY 
Specificulture[[ 
=[[  
_lang[[! &
}]] 
;]] 
switch__ 
(__ 
viewType__ 
)__ 
{`` 
caseaa 
$straa 
:aa 
varbb 
bebb 
=bb 
newbb  
RepositoryResponsebb! 3
<bb3 4
BEProductViewModelbb4 F
>bbF G
(bbG H
)bbH I
{cc 
	IsSucceeddd !
=dd" #
truedd$ (
,dd( )
Dataee 
=ee 
newee "
BEProductViewModelee# 5
(ee5 6
productee6 =
)ee= >
{ee? @
StatuseeA G
=eeH I
SWStatuseeJ R
.eeR S
PrevieweeS Z
}ee[ \
}ff 
;ff 
returngg 
JObjectgg "
.gg" #

FromObjectgg# -
(gg- .
begg. 0
)gg0 1
;gg1 2
defaulthh 
:hh 
varii 
feii 
=ii 
newii  
RepositoryResponseii! 3
<ii3 4 
InfoProductViewModelii4 H
>iiH I
(iiI J
)iiJ K
{jj 
	IsSucceedkk !
=kk" #
truekk$ (
,kk( )
Datall 
=ll 
newll " 
InfoProductViewModelll# 7
(ll7 8
productll8 ?
)ll? @
{llA B
StatusllC I
=llJ K
SWStatusllL T
.llT U
PreviewllU \
}ll] ^
}mm 
;mm 
returnnn 
JObjectnn "
.nn" #

FromObjectnn# -
(nn- .
fenn. 0
)nn0 1
;nn1 2
}oo 
}pp 	
[ss 	
HttpGetss	 
]ss 
[tt 	
Routett	 
(tt 
$strtt 
)tt 
]tt 
publicuu 
asyncuu 
Taskuu 
<uu 
RepositoryResponseuu ,
<uu, - 
InfoProductViewModeluu- A
>uuA B
>uuB C
RecycleuuD K
(uuK L
stringuuL R
iduuS U
)uuU V
{vv 	
varww 

getProductww 
=ww  
InfoProductViewModelww 1
.ww1 2

Repositoryww2 <
.ww< =
GetSingleModelww= K
(wwK L
awwL M
=>wwN P
awwQ R
.wwR S
IdwwS U
==wwV X
idwwY [
)ww[ \
;ww\ ]
ifxx 
(xx 

getProductxx 
.xx 
	IsSucceedxx $
)xx$ %
{yy 
varzz 
datazz 
=zz 

getProductzz %
.zz% &
Datazz& *
;zz* +
data{{ 
.{{ 
Status{{ 
={{ 
SWStatus{{ &
.{{& '
Deleted{{' .
;{{. /
return|| 
await|| 
data|| !
.||! "
SaveModelAsync||" 0
(||0 1
)||1 2
.||2 3
ConfigureAwait||3 A
(||A B
false||B G
)||G H
;||H I
}}} 
else~~ 
{ 
return
ÄÄ 
new
ÄÄ  
RepositoryResponse
ÄÄ -
<
ÄÄ- ."
InfoProductViewModel
ÄÄ. B
>
ÄÄB C
(
ÄÄC D
)
ÄÄD E
{
ÄÄF G
	IsSucceed
ÄÄH Q
=
ÄÄR S
false
ÄÄT Y
}
ÄÄZ [
;
ÄÄ[ \
}
ÅÅ 
}
ÇÇ 	
[
ÖÖ 	
HttpGet
ÖÖ	 
]
ÖÖ 
[
ÜÜ 	
Route
ÜÜ	 
(
ÜÜ 
$str
ÜÜ 
)
ÜÜ 
]
ÜÜ 
public
áá 
async
áá 
Task
áá 
<
áá  
RepositoryResponse
áá ,
<
áá, -"
InfoProductViewModel
áá- A
>
ááA B
>
ááB C
Restore
ááD K
(
ááK L
string
ááL R
id
ááS U
)
ááU V
{
àà 	
var
ââ 

getProduct
ââ 
=
ââ "
InfoProductViewModel
ââ 1
.
ââ1 2

Repository
ââ2 <
.
ââ< =
GetSingleModel
ââ= K
(
ââK L
a
ââL M
=>
ââN P
a
ââQ R
.
ââR S
Id
ââS U
==
ââV X
id
ââY [
)
ââ[ \
;
ââ\ ]
if
ää 
(
ää 

getProduct
ää 
.
ää 
	IsSucceed
ää $
)
ää$ %
{
ãã 
var
åå 
data
åå 
=
åå 

getProduct
åå %
.
åå% &
Data
åå& *
;
åå* +
data
çç 
.
çç 
Status
çç 
=
çç 
SWStatus
çç &
.
çç& '
Preview
çç' .
;
çç. /
return
éé 
await
éé 
data
éé !
.
éé! "
SaveModelAsync
éé" 0
(
éé0 1
)
éé1 2
.
éé2 3
ConfigureAwait
éé3 A
(
ééA B
false
ééB G
)
ééG H
;
ééH I
}
èè 
else
êê 
{
ëë 
return
íí 
new
íí  
RepositoryResponse
íí -
<
íí- ."
InfoProductViewModel
íí. B
>
ííB C
(
ííC D
)
ííD E
{
ííF G
	IsSucceed
ííH Q
=
ííR S
false
ííT Y
}
ííZ [
;
íí[ \
}
ìì 
}
îî 	
[
óó 	
HttpGet
óó	 
]
óó 
[
òò 	
Route
òò	 
(
òò 
$str
òò 
)
òò 
]
òò 
public
ôô 
async
ôô 
Task
ôô 
<
ôô  
RepositoryResponse
ôô ,
<
ôô, -
bool
ôô- 1
>
ôô1 2
>
ôô2 3
Delete
ôô4 :
(
ôô: ;
string
ôô; A
id
ôôB D
)
ôôD E
{
öö 	
var
õõ 

getProduct
õõ 
=
õõ  
BEProductViewModel
õõ /
.
õõ/ 0

Repository
õõ0 :
.
õõ: ;
GetSingleModel
õõ; I
(
õõI J
a
õõJ K
=>
õõL N
a
õõO P
.
õõP Q
Id
õõQ S
==
õõT V
id
õõW Y
&&
õõZ \
a
õõ] ^
.
õõ^ _
Specificulture
õõ_ m
==
õõn p
_lang
õõq v
)
õõv w
;
õõw x
if
úú 
(
úú 

getProduct
úú 
.
úú 
	IsSucceed
úú $
)
úú$ %
{
ùù 
return
ûû 
await
ûû 

getProduct
ûû '
.
ûû' (
Data
ûû( ,
.
ûû, -
RemoveModelAsync
ûû- =
(
ûû= >
true
ûû> B
)
ûûB C
.
ûûC D
ConfigureAwait
ûûD R
(
ûûR S
false
ûûS X
)
ûûX Y
;
ûûY Z
}
üü 
else
†† 
{
°° 
return
¢¢ 
new
¢¢  
RepositoryResponse
¢¢ -
<
¢¢- .
bool
¢¢. 2
>
¢¢2 3
(
¢¢3 4
)
¢¢4 5
{
¢¢6 7
	IsSucceed
¢¢8 A
=
¢¢B C
false
¢¢D I
}
¢¢J K
;
¢¢K L
}
££ 
}
§§ 	
[
ßß 	
HttpGet
ßß	 
]
ßß 
[
©© 	
Route
©©	 
(
©© 
$str
©© 
)
©© 
]
©© 
[
™™ 	
Route
™™	 
(
™™ 
$str
™™ 6
)
™™6 7
]
™™7 8
[
´´ 	
Route
´´	 
(
´´ 
$str
´´ +
)
´´+ ,
]
´´, -
[
¨¨ 	
Route
¨¨	 
(
¨¨ 
$str
¨¨ L
)
¨¨L M
]
¨¨M N
public
≠≠ 
async
≠≠ 
Task
≠≠ 
<
≠≠  
RepositoryResponse
≠≠ ,
<
≠≠, -
PaginationModel
≠≠- <
<
≠≠< ="
InfoProductViewModel
≠≠= Q
>
≠≠Q R
>
≠≠R S
>
≠≠S T
Get
≠≠U X
(
≠≠X Y
int
≠≠Y \
?
≠≠\ ]
pageSize
≠≠^ f
=
≠≠g h
$num
≠≠i k
,
≠≠k l
int
≠≠m p
?
≠≠p q
	pageIndex
≠≠r {
=
≠≠| }
$num
≠≠~ 
,≠≠ Ä
string≠≠Å á
orderBy≠≠à è
=≠≠ê ë
$str≠≠í ñ
,≠≠ñ ó 
OrderByDirection≠≠ò ®
	direction≠≠© ≤
=≠≠≥ ¥ 
OrderByDirection≠≠µ ≈
.≠≠≈ ∆
	Ascending≠≠∆ œ
)≠≠œ –
{
ÆÆ 	
var
ØØ 
data
ØØ 
=
ØØ 
await
ØØ "
InfoProductViewModel
ØØ 1
.
ØØ1 2

Repository
ØØ2 <
.
ØØ< =!
GetModelListByAsync
ØØ= P
(
ØØP Q
m
∞∞ 
=>
∞∞ 
m
∞∞ 
.
∞∞ 
Status
∞∞ 
!=
∞∞  
(
∞∞! "
int
∞∞" %
)
∞∞% &
SWStatus
∞∞& .
.
∞∞. /
Deleted
∞∞/ 6
&&
∞∞7 9
m
∞∞: ;
.
∞∞; <
Specificulture
∞∞< J
==
∞∞K M
_lang
∞∞N S
,
∞∞S T
orderBy
∞∞U \
,
∞∞\ ]
	direction
∞∞^ g
,
∞∞g h
pageSize
∞∞i q
,
∞∞q r
	pageIndex
∞∞s |
)
∞∞| }
.
∞∞} ~
ConfigureAwait∞∞~ å
(∞∞å ç
false∞∞ç í
)∞∞í ì
;∞∞ì î
if
±± 
(
±± 
data
±± 
.
±± 
	IsSucceed
±± 
)
±± 
{
≤≤ 
data
≥≥ 
.
≥≥ 
Data
≥≥ 
.
≥≥ 
Items
≥≥ 
.
≥≥  
ForEach
≥≥  '
(
≥≥' (
a
≥≥( )
=>
≥≥* ,
a
≥≥- .
.
≥≥. /

DetailsUrl
≥≥/ 9
=
≥≥: ;
SWCmsHelper
≥≥< G
.
≥≥G H
GetRouterUrl
≥≥H T
(
≥≥T U
$str
≥≥U ^
,
≥≥^ _
new
≥≥` c
{
≥≥d e
a
≥≥f g
.
≥≥g h
SeoName
≥≥h o
}
≥≥p q
,
≥≥q r
Request
≥≥s z
,
≥≥z {
Url
≥≥| 
)≥≥ Ä
)≥≥Ä Å
;≥≥Å Ç
}
¥¥ 
return
µµ 
data
µµ 
;
µµ 
}
∂∂ 	
[
ππ 	
HttpGet
ππ	 
]
ππ 
[
∫∫ 	
Route
∫∫	 
(
∫∫ 
$str
∫∫ !
)
∫∫! "
]
∫∫" #
[
ªª 	
Route
ªª	 
(
ªª 
$str
ªª B
)
ªªB C
]
ªªC D
[
ºº 	
Route
ºº	 
(
ºº 
$str
ºº X
)
ººX Y
]
ººY Z
public
ΩΩ 
async
ΩΩ 
Task
ΩΩ 
<
ΩΩ  
RepositoryResponse
ΩΩ ,
<
ΩΩ, -
PaginationModel
ΩΩ- <
<
ΩΩ< ="
InfoProductViewModel
ΩΩ= Q
>
ΩΩQ R
>
ΩΩR S
>
ΩΩS T
Search
ΩΩU [
(
ΩΩ[ \
string
ΩΩ\ b
keyword
ΩΩc j
=
ΩΩk l
null
ΩΩm q
,
ΩΩq r
int
ΩΩs v
?
ΩΩv w
pageSizeΩΩx Ä
=ΩΩÅ Ç
nullΩΩÉ á
,ΩΩá à
intΩΩâ å
?ΩΩå ç
	pageIndexΩΩé ó
=ΩΩò ô
nullΩΩö û
,ΩΩû ü
stringΩΩ† ¶
orderByΩΩß Æ
=ΩΩØ ∞
$strΩΩ± µ
,ΩΩµ ∂ 
OrderByDirectionΩΩ∑ «
	directionΩΩ» —
=ΩΩ“ ” 
OrderByDirectionΩΩ‘ ‰
.ΩΩ‰ Â
	AscendingΩΩÂ Ó
)ΩΩÓ Ô
{
ææ 	

Expression
øø 
<
øø 
Func
øø 
<
øø 
SiocProduct
øø '
,
øø' (
bool
øø) -
>
øø- .
>
øø. /
	predicate
øø0 9
=
øø: ;
model
øø< A
=>
øøB D
model
¿¿ 
.
¿¿ 
Specificulture
¿¿ $
==
¿¿% '
_lang
¿¿( -
&&
¡¡ 
model
¡¡ 
.
¡¡ 
Status
¡¡ 
!=
¡¡  "
(
¡¡# $
int
¡¡$ '
)
¡¡' (
SWStatus
¡¡( 0
.
¡¡0 1
Deleted
¡¡1 8
&&
¬¬ 
(
¬¬ 
string
¬¬ 
.
¬¬  
IsNullOrWhiteSpace
¬¬ -
(
¬¬- .
keyword
¬¬. 5
)
¬¬5 6
||
√√ 
(
√√ 
model
√√ 
.
√√ 
Title
√√ #
.
√√# $
Contains
√√$ ,
(
√√, -
keyword
√√- 4
)
√√4 5
||
ƒƒ 
model
ƒƒ 
.
ƒƒ 
Content
ƒƒ $
.
ƒƒ$ %
Contains
ƒƒ% -
(
ƒƒ- .
keyword
ƒƒ. 5
)
ƒƒ5 6
)
ƒƒ6 7
)
ƒƒ7 8
;
ƒƒ8 9
var
∆∆ 
data
∆∆ 
=
∆∆ 
await
∆∆ "
InfoProductViewModel
∆∆ 1
.
∆∆1 2

Repository
∆∆2 <
.
∆∆< =!
GetModelListByAsync
∆∆= P
(
∆∆P Q
	predicate
∆∆Q Z
,
∆∆Z [
orderBy
∆∆\ c
,
∆∆c d
	direction
∆∆e n
,
∆∆n o
pageSize
∆∆p x
,
∆∆x y
	pageIndex∆∆z É
)∆∆É Ñ
.∆∆Ñ Ö
ConfigureAwait∆∆Ö ì
(∆∆ì î
false∆∆î ô
)∆∆ô ö
;∆∆ö õ
return
ÕÕ 
data
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
[
—— 	
HttpGet
——	 
]
—— 
[
““ 	
Route
““	 
(
““ 
$str
““  
)
““  !
]
““! "
[
”” 	
Route
””	 
(
”” 
$str
”” 7
)
””7 8
]
””8 9
[
‘‘ 	
Route
‘‘	 
(
‘‘ 
$str
‘‘ A
)
‘‘A B
]
‘‘B C
[
’’ 	
Route
’’	 
(
’’ 
$str
’’ W
)
’’W X
]
’’X Y
public
÷÷ 
async
÷÷ 
Task
÷÷ 
<
÷÷  
RepositoryResponse
÷÷ ,
<
÷÷, -
PaginationModel
÷÷- <
<
÷÷< ="
InfoProductViewModel
÷÷= Q
>
÷÷Q R
>
÷÷R S
>
÷÷S T
Draft
÷÷U Z
(
÷÷Z [
string
◊◊ 
keyword
◊◊ 
=
◊◊ 
null
◊◊ !
,
◊◊! "
int
◊◊# &
?
◊◊& '
pageSize
◊◊( 0
=
◊◊1 2
null
◊◊3 7
,
◊◊7 8
int
◊◊9 <
?
◊◊< =
	pageIndex
◊◊> G
=
◊◊H I
null
◊◊J N
,
◊◊N O
string
◊◊P V
orderBy
◊◊W ^
=
◊◊_ `
$str
◊◊a e
,
ÿÿ 
OrderByDirection
ÿÿ 
	direction
ÿÿ (
=
ÿÿ) *
OrderByDirection
ÿÿ+ ;
.
ÿÿ; <
	Ascending
ÿÿ< E
)
ÿÿE F
{
ŸŸ 	

Expression
⁄⁄ 
<
⁄⁄ 
Func
⁄⁄ 
<
⁄⁄ 
SiocProduct
⁄⁄ '
,
⁄⁄' (
bool
⁄⁄) -
>
⁄⁄- .
>
⁄⁄. /
	predicate
⁄⁄0 9
=
⁄⁄: ;
model
⁄⁄< A
=>
⁄⁄B D
model
€€ 
.
€€ 
Specificulture
€€  
==
€€! #
_lang
€€$ )
&&
›› 
model
›› 
.
›› 
Status
›› 
!=
›› 
(
››  
int
››  #
)
››# $
SWStatus
››$ ,
.
››, -
Deleted
››- 4
&&
ﬁﬁ 
(
ﬁﬁ 
string
ﬂﬂ 
.
ﬂﬂ  
IsNullOrWhiteSpace
ﬂﬂ %
(
ﬂﬂ% &
keyword
ﬂﬂ& -
)
ﬂﬂ- .
||
‡‡ 
(
‡‡ 
model
‡‡ 
.
‡‡ 
Title
‡‡ 
.
‡‡  
Contains
‡‡  (
(
‡‡( )
keyword
‡‡) 0
)
‡‡0 1
||
‡‡2 4
model
‡‡5 :
.
‡‡: ;
Content
‡‡; B
.
‡‡B C
Contains
‡‡C K
(
‡‡K L
keyword
‡‡L S
)
‡‡S T
)
‡‡T U
)
·· 
;
·· 
var
‚‚ 
data
‚‚ 
=
‚‚ 
await
‚‚ "
InfoProductViewModel
‚‚ 1
.
‚‚1 2

Repository
‚‚2 <
.
‚‚< =!
GetModelListByAsync
‚‚= P
(
‚‚P Q
	predicate
‚‚Q Z
,
‚‚Z [
orderBy
‚‚\ c
,
‚‚c d
	direction
‚‚e n
,
‚‚n o
pageSize
‚‚p x
,
‚‚x y
	pageIndex‚‚z É
)‚‚É Ñ
.‚‚Ñ Ö
ConfigureAwait‚‚Ö ì
(‚‚ì î
false‚‚î ô
)‚‚ô ö
;‚‚ö õ
return
ÈÈ 
data
ÈÈ 
;
ÈÈ 
}
ÍÍ 	
[
ÒÒ 	
HttpPost
ÒÒ	 
]
ÒÒ 
[
ÚÚ 	
Route
ÚÚ	 
(
ÚÚ 
$str
ÚÚ 
)
ÚÚ 
]
ÚÚ 
public
ÛÛ 
async
ÛÛ 
Task
ÛÛ 
<
ÛÛ  
RepositoryResponse
ÛÛ ,
<
ÛÛ, - 
BEProductViewModel
ÛÛ- ?
>
ÛÛ? @
>
ÛÛ@ A
Save
ÛÛB F
(
ÛÛF G
[
ÛÛG H
FromBody
ÛÛH P
]
ÛÛP Q 
BEProductViewModel
ÛÛR d
product
ÛÛe l
)
ÛÛl m
{
ÙÙ 	
if
ıı 
(
ıı 
product
ıı 
!=
ıı 
null
ıı 
)
ıı  
{
ˆˆ 
var
˜˜ 
result
˜˜ 
=
˜˜ 
await
˜˜ "
product
˜˜# *
.
˜˜* +
SaveModelAsync
˜˜+ 9
(
˜˜9 :
true
˜˜: >
)
˜˜> ?
.
˜˜? @
ConfigureAwait
˜˜@ N
(
˜˜N O
false
˜˜O T
)
˜˜T U
;
˜˜U V
return
¯¯ 
result
¯¯ 
;
¯¯ 
}
˘˘ 
return
˙˙ 
new
˙˙  
RepositoryResponse
˙˙ )
<
˙˙) * 
BEProductViewModel
˙˙* <
>
˙˙< =
(
˙˙= >
)
˙˙> ?
;
˙˙? @
}
˚˚ 	
[
˛˛ 	
HttpPost
˛˛	 
,
˛˛ 
HttpOptions
˛˛ 
]
˛˛ 
[
ˇˇ 	
Route
ˇˇ	 
(
ˇˇ 
$str
ˇˇ 
)
ˇˇ 
]
ˇˇ 
public
ÄÄ 
async
ÄÄ 
Task
ÄÄ 
<
ÄÄ  
RepositoryResponse
ÄÄ ,
<
ÄÄ, -
bool
ÄÄ- 1
>
ÄÄ1 2
>
ÄÄ2 3

SaveFields
ÄÄ4 >
(
ÄÄ> ?
string
ÄÄ? E
id
ÄÄF H
,
ÄÄH I
[
ÄÄJ K
FromBody
ÄÄK S
]
ÄÄS T
List
ÄÄT X
<
ÄÄX Y
EntityField
ÄÄY d
>
ÄÄd e
fields
ÄÄf l
)
ÄÄl m
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ 
fields
ÇÇ 
!=
ÇÇ 
null
ÇÇ 
)
ÇÇ 
{
ÉÉ 
foreach
ÑÑ 
(
ÑÑ 
var
ÑÑ 
property
ÑÑ %
in
ÑÑ& (
fields
ÑÑ) /
)
ÑÑ/ 0
{
ÖÖ 
var
ÜÜ 
result
ÜÜ 
=
ÜÜ  
await
ÜÜ! & 
BEProductViewModel
ÜÜ' 9
.
ÜÜ9 :

Repository
ÜÜ: D
.
ÜÜD E
UpdateFieldsAsync
ÜÜE V
(
ÜÜV W
c
ÜÜW X
=>
ÜÜY [
c
ÜÜ\ ]
.
ÜÜ] ^
Id
ÜÜ^ `
==
ÜÜa c
id
ÜÜd f
,
ÜÜf g
fields
ÜÜh n
)
ÜÜn o
.
ÜÜo p
ConfigureAwait
ÜÜp ~
(
ÜÜ~ 
falseÜÜ Ñ
)ÜÜÑ Ö
;ÜÜÖ Ü
return
àà 
result
àà !
;
àà! "
}
ââ 
}
ää 
return
ãã 
new
ãã  
RepositoryResponse
ãã )
<
ãã) *
bool
ãã* .
>
ãã. /
(
ãã/ 0
)
ãã0 1
;
ãã1 2
}
åå 	
[
êê 	
HttpPost
êê	 
,
êê 
HttpOptions
êê 
]
êê 
[
ëë 	
Route
ëë	 
(
ëë 
$str
ëë 
)
ëë 
]
ëë 
public
íí 
async
íí 
Task
íí 
<
íí  
RepositoryResponse
íí ,
<
íí, -
PaginationModel
íí- <
<
íí< ="
InfoProductViewModel
íí= Q
>
ííQ R
>
ííR S
>
ííS T
GetList
ííU \
(
íí\ ]
[
íí] ^
FromBody
íí^ f
]
ííf g
RequestPaging
ííh u
request
íív }
)
íí} ~
{
ìì 	
string
îî 
domain
îî 
=
îî 
string
îî "
.
îî" #
Format
îî# )
(
îî) *
$str
îî* 5
,
îî5 6
Request
îî7 >
.
îî> ?
Scheme
îî? E
,
îîE F
Request
îîG N
.
îîN O
Host
îîO S
)
îîS T
;
îîT U

Expression
ññ 
<
ññ 
Func
ññ 
<
ññ 
SiocProduct
ññ '
,
ññ' (
bool
ññ) -
>
ññ- .
>
ññ. /
	predicate
ññ0 9
=
ññ: ;
model
ññ< A
=>
ññB D
model
óó 
.
óó 
Specificulture
óó $
==
óó% '
_lang
óó( -
&&
òò 
(
òò 
!
òò 
request
òò 
.
òò 
Status
òò #
.
òò# $
HasValue
òò$ ,
||
òò- /
model
òò0 5
.
òò5 6
Status
òò6 <
==
òò= ?
(
òò@ A
int
òòA D
)
òòD E
request
òòE L
.
òòL M
Status
òòM S
.
òòS T
Value
òòT Y
)
òòY Z
&&
ôô 
(
ôô 
string
ôô 
.
ôô  
IsNullOrWhiteSpace
ôô -
(
ôô- .
request
ôô. 5
.
ôô5 6
Keyword
ôô6 =
)
ôô= >
||
öö 
(
öö 
model
õõ 
.
õõ 
Title
õõ 
.
õõ  
Contains
õõ  (
(
õõ( )
request
õõ) 0
.
õõ0 1
Keyword
õõ1 8
)
õõ8 9
||
ùù 
model
ùù 
.
ùù 
Excerpt
ùù $
.
ùù$ %
Contains
ùù% -
(
ùù- .
request
ùù. 5
.
ùù5 6
Keyword
ùù6 =
)
ùù= >
||
ûû 
model
ûû 
.
ûû 
Code
ûû !
.
ûû! "
Contains
ûû" *
(
ûû* +
request
ûû+ 2
.
ûû2 3
Keyword
ûû3 :
)
ûû: ;
)
üü 
)
†† 
&&
°° 
(
°° 
!
°° 
request
°° 
.
°° 
FromDate
°° %
.
°°% &
HasValue
°°& .
||
¢¢ 
(
¢¢ 
model
¢¢ 
.
¢¢ 
CreatedDateTime
¢¢ -
>=
¢¢. 0
request
¢¢1 8
.
¢¢8 9
FromDate
¢¢9 A
.
¢¢A B
Value
¢¢B G
.
¢¢G H
ToUniversalTime
¢¢H W
(
¢¢W X
)
¢¢X Y
)
¢¢Y Z
)
££ 
&&
§§ 
(
§§ 
!
§§ 
request
§§ 
.
§§ 
ToDate
§§ #
.
§§# $
HasValue
§§$ ,
||
•• 
(
•• 
model
•• 
.
•• 
CreatedDateTime
•• -
<=
••. 0
request
••1 8
.
••8 9
ToDate
••9 ?
.
••? @
Value
••@ E
.
••E F
ToUniversalTime
••F U
(
••U V
)
••V W
)
••W X
)
¶¶ 
;
¶¶ 
var
®® 
data
®® 
=
®® 
await
®® "
InfoProductViewModel
®® 1
.
®®1 2

Repository
®®2 <
.
®®< =!
GetModelListByAsync
®®= P
(
®®P Q
	predicate
®®Q Z
,
®®Z [
request
®®\ c
.
®®c d
OrderBy
®®d k
,
®®k l
request
®®m t
.
®®t u
	Direction
®®u ~
,
®®~ 
request®®Ä á
.®®á à
PageSize®®à ê
,®®ê ë
request®®í ô
.®®ô ö
	PageIndex®®ö £
)®®£ §
.®®§ •
ConfigureAwait®®• ≥
(®®≥ ¥
false®®¥ π
)®®π ∫
;®®∫ ª
if
©© 
(
©© 
data
©© 
.
©© 
	IsSucceed
©© 
)
©© 
{
™™ 
data
´´ 
.
´´ 
Data
´´ 
.
´´ 
Items
´´ 
.
´´  
ForEach
´´  '
(
´´' (
a
´´( )
=>
´´* ,
{
¨¨ 
a
≠≠ 
.
≠≠ 

DetailsUrl
≠≠  
=
≠≠! "
SWCmsHelper
≠≠# .
.
≠≠. /
GetRouterUrl
≠≠/ ;
(
≠≠; <
$str
ÆÆ !
,
ÆÆ! "
new
ÆÆ# &
{
ÆÆ' (
a
ÆÆ) *
.
ÆÆ* +
SeoName
ÆÆ+ 2
}
ÆÆ3 4
,
ÆÆ4 5
Request
ÆÆ6 =
,
ÆÆ= >
Url
ÆÆ? B
)
ÆÆB C
;
ÆÆC D
}
ØØ 
)
ØØ 
;
ØØ 
}
∞∞ 
return
±± 
data
±± 
;
±± 
}
≤≤ 	
}
µµ 
}∂∂ ∑:
ZE:\_Workspace\Github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiRoleController.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
. 
Controllers %
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str 
) 
] 
public 

class 
ApiRoleController "
:# $
BaseApiController% 6
{ 
private 
readonly 
UserManager $
<$ %
ApplicationUser% 4
>4 5
_userManager6 B
;B C
private 
readonly 
SignInManager &
<& '
ApplicationUser' 6
>6 7
_signInManager8 F
;F G
private 
readonly 
RoleManager $
<$ %
IdentityRole% 1
>1 2
_roleManager3 ?
;? @
private 
readonly 
IEmailSender %
_emailSender& 2
;2 3
private 
readonly 
ILogger  
_logger! (
;( )
public   
ApiRoleController    
(    !
UserManager  ! ,
<  , -
ApplicationUser  - <
>  < =
userManager  > I
,  I J
SignInManager!! 
<!! 
ApplicationUser!! )
>!!) *
signInManager!!+ 8
,!!8 9
RoleManager"" 
<"" 
IdentityRole"" $
>""$ %
roleManager""& 1
,""1 2
IEmailSender## 
emailSender## $
,##$ %
ILogger$$ 
<$$ 
ApiRoleController$$ %
>$$% &
logger$$' -
)$$- .
{%% 	
_userManager&& 
=&& 
userManager&& &
;&&& '
_signInManager'' 
='' 
signInManager'' *
;''* +
_roleManager(( 
=(( 
roleManager(( &
;((& '
_emailSender)) 
=)) 
emailSender)) &
;))& '
_logger** 
=** 
logger** 
;** 
}++ 	
[-- 	
	Authorize--	 
(-- !
AuthenticationSchemes-- (
=--) *
JwtBearerDefaults--+ <
.--< = 
AuthenticationScheme--= Q
)--Q R
]--R S
[.. 	
HttpGet..	 
(.. 
$str.. 
).. 
].. 
public// 
object// 
Claims// 
(// 
)// 
{00 	
return11 
User11 
.11 
Claims11 
.11 
Select11 %
(11% &
c11& '
=>11( *
new22 
{33 
Type44 
=44 
c44 
.44 
Type44 
,44 
Value55 
=55 
c55 
.55 
Value55 
}66 
)66 
;66 
}77 	
[99 	
	Authorize99	 
(99 !
AuthenticationSchemes99 (
=99) *
JwtBearerDefaults99+ <
.99< = 
AuthenticationScheme99= Q
,99Q R
Roles99S X
=99Y Z
$str99[ g
)99g h
]99h i
[:: 	
HttpGet::	 
,:: 
HttpPost:: 
]:: 
[;; 	
Route;;	 
(;; 
$str;; 
);; 
];; 
public<< 
async<< 
Task<< 
<<< 
RepositoryResponse<< ,
<<<, -
List<<- 1
<<<1 2
RoleViewModel<<2 ?
><<? @
><<@ A
><<A B
GetList<<C J
(<<J K
)<<K L
{== 	
return>> 
await>> 
RoleViewModel>> &
.>>& '

Repository>>' 1
.>>1 2
GetModelListAsync>>2 C
(>>C D
)>>D E
;>>E F
}?? 	
[AA 	
	AuthorizeAA	 
(AA !
AuthenticationSchemesAA (
=AA) *
JwtBearerDefaultsAA+ <
.AA< = 
AuthenticationSchemeAA= Q
,AAQ R
RolesAAS X
=AAY Z
$strAA[ g
)AAg h
]AAh i
[BB 	
HttpPostBB	 
]BB 
[CC 	
RouteCC	 
(CC 
$strCC 
)CC 
]CC 
publicDD 
asyncDD 
TaskDD 
<DD 
RepositoryResponseDD ,
<DD, -
IdentityRoleDD- 9
>DD9 :
>DD: ;
SaveDD< @
(DD@ A
stringDDA G
nameDDH L
)DDL M
{EE 	
varFF 
roleFF 
=FF 
newFF 
IdentityRoleFF '
(FF' (
)FF( )
{GG 
NameHH 
=HH 
nameHH 
,HH 
IdII 
=II 
GuidII 
.II 
NewGuidII !
(II! "
)II" #
.II# $
ToStringII$ ,
(II, -
)II- .
}JJ 
;JJ 
varLL 
resultLL 
=LL 
awaitLL 
_roleManagerLL +
.LL+ ,
CreateAsyncLL, 7
(LL7 8
roleLL8 <
)LL< =
;LL= >
returnNN 
newNN 
RepositoryResponseNN )
<NN) *
IdentityRoleNN* 6
>NN6 7
(NN7 8
)NN8 9
{OO 
	IsSucceedPP 
=PP 
resultPP "
.PP" #
	SucceededPP# ,
,PP, -
DataQQ 
=QQ 
roleQQ 
,QQ 
ErrorsRR 
=RR 
resultRR 
.RR  
ErrorsRR  &
?RR& '
.RR' (
SelectRR( .
(RR. /
eRR/ 0
=>RR1 3
$"RR4 6
{RR6 7
eRR7 8
.RR8 9
CodeRR9 =
}RR= >
: RR> @
{RR@ A
eRRA B
.RRB C
DescriptionRRC N
}RRN O
"RRO P
)RRP Q
.RRQ R
ToListRRR X
(RRX Y
)RRY Z
}SS 
;SS 
}TT 	
[VV 	
	AuthorizeVV	 
(VV !
AuthenticationSchemesVV (
=VV) *
JwtBearerDefaultsVV+ <
.VV< = 
AuthenticationSchemeVV= Q
,VVQ R
RolesVVS X
=VVY Z
$strVV[ g
)VVg h
]VVh i
[WW 	
HttpPostWW	 
]WW 
[XX 	
RouteXX	 
(XX 
$strXX 
)XX 
]XX 
publicYY 
asyncYY 
TaskYY 
<YY 
RepositoryResponseYY ,
<YY, -
boolYY- 1
>YY1 2
>YY2 3
DeleteYY4 :
(YY: ;
stringYY; A
nameYYB F
)YYF G
{ZZ 	
var[[ 
result[[ 
=[[ 
await[[ 
RoleViewModel[[ ,
.[[, -

Repository[[- 7
.[[7 8
RemoveModelAsync[[8 H
([[H I
r[[I J
=>[[K M
r[[N O
.[[O P
Name[[P T
==[[U W
name[[X \
)[[\ ]
;[[] ^
return\\ 
result\\ 
;\\ 
}]] 	
}`` 
}aa ≥d
^E:\_Workspace\Github\Swastika-IO-Core\src\Swastka.Cms.Api\Controllers\ApiTemplateController.cs
	namespace 	
Swastka
 
. 
IO 
. 
Cms 
. 
Api 
. 
Controllers (
{ 
[ 
Produces 
( 
$str  
)  !
]! "
[ 
Route 

(
 
$str #
)# $
]$ %
public 

class !
ApiTemplateController &
:' (
BaseApiController 
< 
SiocCmsContext (
,( )
SiocTemplate* 6
>6 7
{ 
[ 	
HttpGet	 
] 
[   	
Route  	 
(   
$str   
)   
]   
public!! 
Task!! 
<!! 
RepositoryResponse!! &
<!!& '
FETemplateViewModel!!' :
>!!: ;
>!!; <
Details!!= D
(!!D E
int!!E H
id!!I K
)!!K L
{"" 	
return## 
FETemplateViewModel## &
.##& '

Repository##' 1
.##1 2
GetSingleModelAsync##2 E
(##E F
model$$ 
=>$$ 
model$$ 
.$$ 
Id$$ !
==$$" $
id$$% '
)$$' (
;$$( )
}%% 	
[(( 	
HttpGet((	 
](( 
[)) 	
Route))	 
()) 
$str)) %
)))% &
]))& '
public** 
Task** 
<** 
RepositoryResponse** &
<**& '
BETemplateViewModel**' :
>**: ;
>**; <
	BEDetails**= F
(**F G
int**G J
id**K M
)**M N
{++ 	
return,, 
BETemplateViewModel,, &
.,,& '

Repository,,' 1
.,,1 2
GetSingleModelAsync,,2 E
(,,E F
model-- 
=>-- 
model-- 
.-- 
Id-- !
==--" $
id--% '
)--' (
;--( )
}.. 	
[22 	
HttpGet22	 
]22 
[33 	
Route33	 
(33 
$str33 
)33 
]33 
[44 	
Route44	 
(44 
$str44 6
)446 7
]447 8
[55 	
Route55	 
(55 
$str55 +
)55+ ,
]55, -
[66 	
Route66	 
(66 
$str66 L
)66L M
]66M N
public77 
async77 
Task77 
<77 
RepositoryResponse77 ,
<77, -
PaginationModel77- <
<77< =!
InfoTemplateViewModel77= R
>77R S
>77S T
>77T U
Get77V Y
(77Y Z
int88 
?88 
PageSize88 
=88 
$num88 
,88 
int88  #
?88# $
	PageIndex88% .
=88/ 0
$num881 2
,882 3
string884 :
orderBy88; B
=88C D
$str88E I
,99 
OrderByDirection99 
	direction99 (
=99) *
OrderByDirection99+ ;
.99; <
	Ascending99< E
)99E F
{:: 	
var;; 
data;; 
=;; 
await;; !
InfoTemplateViewModel;; 2
.;;2 3

Repository;;3 =
.;;= >
GetModelListAsync;;> O
(;;O P
orderBy;;P W
,;;W X
	direction;;Y b
,;;b c
PageSize;;d l
,;;l m
	PageIndex;;n w
);;w x
.;;x y
ConfigureAwait	;;y á
(
;;á à
false
;;à ç
)
;;ç é
;
;;é è
string<< 
domain<< 
=<< 
string<< "
.<<" #
Format<<# )
(<<) *
$str<<* 5
,<<5 6
Request<<7 >
.<<> ?
Scheme<<? E
,<<E F
Request<<G N
.<<N O
Host<<O S
)<<S T
;<<T U
return== 
data== 
;== 
}>> 	
[AA 	
HttpGetAA	 
]AA 
[BB 	
RouteBB	 
(BB 
$strBB !
)BB! "
]BB" #
[CC 	
RouteCC	 
(CC 
$strCC B
)CCB C
]CCC D
[DD 	
RouteDD	 
(DD 
$strDD P
)DDP Q
]DDQ R
[EE 	
RouteEE	 
(EE 
$strEE X
)EEX Y
]EEY Z
[FF 	
RouteFF	 
(FF 
$strFF f
)FFf g
]FFg h
publicGG 
TaskGG 
<GG 
RepositoryResponseGG &
<GG& '
PaginationModelGG' 6
<GG6 7!
InfoTemplateViewModelGG7 L
>GGL M
>GGM N
>GGN O
SearchGGP V
(GGV W
stringHH 
keywordHH 
=HH 
nullHH !
,HH! "
stringII 
descriptionII 
=II  
nullII! %
,II% &
intJJ 
?JJ 
PageSizeJJ 
=JJ 
nullJJ  
,JJ  !
intJJ" %
?JJ% &
	PageIndexJJ' 0
=JJ1 2
nullJJ3 7
,JJ7 8
stringJJ9 ?
orderByJJ@ G
=JJH I
$strJJJ N
,KK 
OrderByDirectionKK 
	directionKK (
=KK) *
OrderByDirectionKK+ ;
.KK; <
	AscendingKK< E
)KKE F
{LL 	

ExpressionMM 
<MM 
FuncMM 
<MM 
SiocTemplateMM (
,MM( )
boolMM* .
>MM. /
>MM/ 0
	predicateMM1 :
=MM; <
modelMM= B
=>MMC E
(NN 
stringNN 
.NN 
IsNullOrWhiteSpaceNN &
(NN& '
keywordNN' .
)NN. /
||NN0 2
(NN3 4
modelNN4 9
.NN9 :
FileNameNN: B
.NNB C
ContainsNNC K
(NNK L
keywordNNL S
)NNS T
)NNT U
)NNU V
&&OO 
(OO 
stringOO 
.OO 
IsNullOrWhiteSpaceOO )
(OO) *
descriptionOO* 5
)OO5 6
||OO7 9
(OO: ;
modelOO; @
.OO@ A

FileFolderOOA K
.OOK L
ContainsOOL T
(OOT U
descriptionOOU `
)OO` a
)OOa b
)OOb c
;OOc d
returnPP !
InfoTemplateViewModelPP (
.QQ 

RepositoryQQ 
.RR 
GetModelListByAsyncRR $
(RR$ %
	predicateRR% .
,RR. /
orderByRR0 7
,RR7 8
	directionRR9 B
,RRB C
PageSizeRRD L
,RRL M
	PageIndexRRN W
)RRW X
;RRX Y
}SS 	
[ZZ 	
HttpPostZZ	 
,ZZ 
HttpOptionsZZ 
]ZZ 
[[[ 	
Route[[	 
([[ 
$str[[ 
)[[ 
][[ 
public\\ 
async\\ 
Task\\ 
<\\ 
RepositoryResponse\\ ,
<\\, -
BETemplateViewModel\\- @
>\\@ A
>\\A B
Post\\C G
(\\G H
BETemplateViewModel\\H [
model\\\ a
)\\a b
{]] 	
if^^ 
(^^ 
model^^ 
!=^^ 
null^^ 
)^^ 
{__ 
var`` 
result`` 
=`` 
await`` "
model``# (
.``( )
SaveModelAsync``) 7
(``7 8
true``8 <
)``< =
.``= >
ConfigureAwait``> L
(``L M
false``M R
)``R S
;``S T
returnaa 
resultaa 
;aa 
}bb 
returncc 
newcc 
RepositoryResponsecc )
<cc) *
BETemplateViewModelcc* =
>cc= >
(cc> ?
)cc? @
;cc@ A
}dd 	
[gg 	
HttpPostgg	 
,gg 
HttpOptionsgg 
]gg 
[hh 	
Routehh	 
(hh 
$strhh 
)hh 
]hh 
publicii 
asyncii 
Taskii 
<ii 
RepositoryResponseii ,
<ii, -
boolii- 1
>ii1 2
>ii2 3

SaveFieldsii4 >
(ii> ?
intii? B
idiiC E
,iiE F
[iiG H
FromBodyiiH P
]iiP Q
ListiiQ U
<iiU V
EntityFieldiiV a
>iia b
fieldsiic i
)iii j
{jj 	
ifkk 
(kk 
fieldskk 
!=kk 
nullkk 
)kk 
{ll 
foreachmm 
(mm 
varmm 
propertymm %
inmm& (
fieldsmm) /
)mm/ 0
{nn 
varoo 
resultoo 
=oo  
awaitoo! &!
InfoTemplateViewModeloo' <
.oo< =

Repositoryoo= G
.ooG H
UpdateFieldsAsyncooH Y
(ooY Z
cooZ [
=>oo\ ^
coo_ `
.oo` a
Idooa c
==ood f
idoog i
,ooi j
fieldsook q
)ooq r
.oor s
ConfigureAwait	oos Å
(
ooÅ Ç
false
ooÇ á
)
ooá à
;
ooà â
returnqq 
resultqq !
;qq! "
}rr 
}ss 
returntt 
newtt 
RepositoryResponsett )
<tt) *
booltt* .
>tt. /
(tt/ 0
)tt0 1
;tt1 2
}uu 	
[xx 	
HttpPostxx	 
,xx 
HttpOptionsxx 
]xx 
[yy 	
Routeyy	 
(yy 
$stryy 
)yy 
]yy 
publiczz 
asynczz 
Taskzz 
<zz 
RepositoryResponsezz ,
<zz, -
PaginationModelzz- <
<zz< =
BETemplateViewModelzz= P
>zzP Q
>zzQ R
>zzR S
GetListzzT [
(zz[ \
RequestPagingzz\ i
requestzzj q
)zzq r
{{{ 	
string|| 
domain|| 
=|| 
string|| "
.||" #
Format||# )
(||) *
$str||* 5
,||5 6
Request||7 >
.||> ?
Scheme||? E
,||E F
Request||G N
.||N O
Host||O S
)||S T
;||T U
int}} 
.}} 
TryParse}} 
(}} 
request}}  
.}}  !
Key}}! $
,}}$ %
out}}& )
int}}* -
themeId}}. 5
)}}5 6
;}}6 7

Expression~~ 
<~~ 
Func~~ 
<~~ 
SiocTemplate~~ (
,~~( )
bool~~* .
>~~. /
>~~/ 0
	predicate~~1 :
=~~; <
model~~= B
=>~~C E
model 
. 

TemplateId  
==! #
themeId$ +
&&, .
(
ÄÄ 
string
ÄÄ 
.
ÄÄ  
IsNullOrWhiteSpace
ÄÄ *
(
ÄÄ* +
request
ÄÄ+ 2
.
ÄÄ2 3
Keyword
ÄÄ3 :
)
ÄÄ: ;
||
ÅÅ 
(
ÇÇ 
model
ÉÉ 
.
ÉÉ 
FileName
ÉÉ &
.
ÉÉ& '
Contains
ÉÉ' /
(
ÉÉ/ 0
request
ÉÉ0 7
.
ÉÉ7 8
Keyword
ÉÉ8 ?
)
ÉÉ? @
||
ÑÑ 
model
ÑÑ  
.
ÑÑ  !

FileFolder
ÑÑ! +
.
ÑÑ+ ,
Contains
ÑÑ, 4
(
ÑÑ4 5
request
ÑÑ5 <
.
ÑÑ< =
Keyword
ÑÑ= D
)
ÑÑD E
||
ÖÖ 
model
ÖÖ  
.
ÖÖ  !

FolderType
ÖÖ! +
==
ÖÖ, .
request
ÖÖ/ 6
.
ÖÖ6 7
Keyword
ÖÖ7 >
)
ÜÜ 
)
ÜÜ 
;
ÜÜ 
var
àà 
data
àà 
=
àà 
await
àà !
BETemplateViewModel
àà 0
.
àà0 1

Repository
àà1 ;
.
àà; <!
GetModelListByAsync
àà< O
(
ààO P
	predicate
ààP Y
,
ààY Z
request
àà[ b
.
ààb c
OrderBy
ààc j
,
ààj k
request
ààl s
.
ààs t
	Direction
ààt }
,
àà} ~
requestàà Ü
.ààÜ á
PageSizeààá è
,ààè ê
requestààë ò
.ààò ô
	PageIndexààô ¢
)àà¢ £
.àà£ §
ConfigureAwaitàà§ ≤
(àà≤ ≥
falseàà≥ ∏
)àà∏ π
;ààπ ∫
return
ää 
data
ää 
;
ää 
}
ãã 	
}
éé 
}èè é	
DE:\_Workspace\Github\Swastika-IO-Core\src\Swastka.Cms.Api\Program.cs
	namespace 	
Swastka
 
. 
Cms 
. 
Api 
{		 
public

 

class

 
Program

 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
BuildWebHost 
( 
args 
) 
. 
Run "
(" #
)# $
;$ %
} 	
public 
static 
IWebHost 
BuildWebHost +
(+ ,
string, 2
[2 3
]3 4
args5 9
)9 :
=>; =
WebHost 
.  
CreateDefaultBuilder (
(( )
args) -
)- .
. 

UseStartup 
< 
Startup #
># $
($ %
)% &
. 
Build 
( 
) 
; 
} 
} —
DE:\_Workspace\Github\Swastika-IO-Core\src\Swastka.Cms.Api\Startup.cs
	namespace

 	
Swastka


 
.

 
Cms

 
.

 
Web

 
{ 
public 

partial 
class 
Startup  
{ 
public 
const 
string '
CONST_ROUTE_DEFAULT_CULTURE 7
=8 9
SWCmsConstants: H
.H I
DefaultI P
.P Q
SpecificultureQ _
;_ `
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 

AddMvcCore 
(  
)  !
. 
AddAuthorization !
(! "
)" #
. 
AddJsonFormatters "
(" #
)# $
;$ %
services 
. 
AddAuthentication &
(& '
$str' /
)/ 0
;0 1
} 	
public   
void   
	Configure   
(   
IApplicationBuilder   1
app  2 5
)  5 6
{!! 	
app"" 
."" 
UseAuthentication"" !
(""! "
)""" #
;""# $
app$$ 
.$$ 
UseMvc$$ 
($$ 
routes$$ 
=>$$  
{%% 
routes&& 
.&& 
MapRoute&& 
(&&  
name'' 
:'' 
$str'' $
,''$ %
template(( 
:(( 
$str(( -
+((. /'
CONST_ROUTE_DEFAULT_CULTURE((0 K
+((L M
$str	((N Ç
)
((Ç É
;
((É Ñ
})) 
))) 
;)) 
}** 	
}++ 
},, ¡
TE:\_Workspace\Github\Swastika-IO-Core\src\Swastka.Cms.Api\App_Start\Startup.Auth.txt
	namespace

 	
Swastka


 
.

 
Cms

 
.

 
Api

 
{ 
public 

partial 
class 
Startup  
{ 
public 
static 
void 
ConfigureApi '
(' (
IServiceCollection 
services '
)' (
{ 	
services 
. 
AddAuthentication &
(& '
JwtBearerDefaults' 8
.8 9 
AuthenticationScheme9 M
)M N
. 
AddJwtBearer !
(! "
options" )
=>* ,
{ 
options 
.  %
TokenValidationParameters  9
=: ;
new  %
TokenValidationParameters! :
{ 
ValidateIssuer! /
=0 1
true2 6
,6 7
ValidateAudience! 1
=2 3
true4 8
,8 9
ValidateLifetime! 1
=2 3
true4 8
,8 9$
ValidateIssuerSigningKey! 9
=: ;
true< @
,@ A
ValidIssuer! ,
=- .
$str/ I
,I J
ValidAudience! .
=/ 0
$str1 K
,K L
IssuerSigningKey! 1
=2 3
JwtSecurityKey" 0
.0 1
Create1 7
(7 8
$str8 H
)H I
}   
;   
}!! 
)!! 
;!! 
}$$ 	
}.. 
public00 

static00 
class00 
JwtSecurityKey00 &
{11 
public22 
static22  
SymmetricSecurityKey22 *
Create22+ 1
(221 2
string222 8
secret229 ?
)22? @
{33 	
return44 
new44  
SymmetricSecurityKey44 +
(44+ ,
Encoding44, 4
.444 5
ASCII445 :
.44: ;
GetBytes44; C
(44C D
secret44D J
)44J K
)44K L
;44L M
}55 	
}66 
}77 