// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Swastika.Messenger.Lib.Models;
using System;

namespace Swastika.Messenger.Lib.Migrations
{
    [DbContext(typeof(MessengerContext))]
    [Migration("20171223062210_AddFirstName")]
    partial class AddFirstName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Swastika.Messenger.Lib.Models.MessengerHubRoom", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Avatar")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("HostId")
                        .HasMaxLength(128);

                    b.Property<bool>("IsOpen");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("TeamId");

                    b.Property<string>("Title")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("messenger_hub_room");
                });

            modelBuilder.Entity("Swastika.Messenger.Lib.Models.MessengerMessage", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Content")
                        .HasColumnType("ntext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("RoomId");

                    b.Property<int?>("TeamId");

                    b.Property<string>("UserId")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("messenger_message");
                });

            modelBuilder.Entity("Swastika.Messenger.Lib.Models.MessengerNavRoomUser", b =>
                {
                    b.Property<Guid>("RoomId");

                    b.Property<string>("UserId")
                        .HasMaxLength(128);

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime");

                    b.HasKey("RoomId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("messenger_nav_room_user");
                });

            modelBuilder.Entity("Swastika.Messenger.Lib.Models.MessengerNavTeamUser", b =>
                {
                    b.Property<int>("TeamId");

                    b.Property<string>("UserId")
                        .HasMaxLength(128);

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<int>("Status");

                    b.HasKey("TeamId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("messenger_nav_team_user");
                });

            modelBuilder.Entity("Swastika.Messenger.Lib.Models.MessengerTeam", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Avatar")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HostId")
                        .HasMaxLength(128);

                    b.Property<bool?>("IsOpen")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("messenger_team");
                });

            modelBuilder.Entity("Swastika.Messenger.Lib.Models.MessengerUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128);

                    b.Property<string>("Avatar")
                        .HasMaxLength(250);

                    b.Property<string>("ConnectionId")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("messenger_user");
                });

            modelBuilder.Entity("Swastika.Messenger.Lib.Models.MessengerMessage", b =>
                {
                    b.HasOne("Swastika.Messenger.Lib.Models.MessengerHubRoom", "Room")
                        .WithMany("MessengerMessage")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_messenger_message_messenger_hub_room");

                    b.HasOne("Swastika.Messenger.Lib.Models.MessengerTeam", "Team")
                        .WithMany("MessengerMessage")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK_messenger_message_messenger_team");

                    b.HasOne("Swastika.Messenger.Lib.Models.MessengerUser", "User")
                        .WithMany("MessengerMessage")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_messenger_message_messenger_user");
                });

            modelBuilder.Entity("Swastika.Messenger.Lib.Models.MessengerNavRoomUser", b =>
                {
                    b.HasOne("Swastika.Messenger.Lib.Models.MessengerHubRoom", "Room")
                        .WithMany("MessengerNavRoomUser")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_messenger_nav_room_user_messenger_hub_room");

                    b.HasOne("Swastika.Messenger.Lib.Models.MessengerUser", "User")
                        .WithMany("MessengerNavRoomUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_messenger_nav_room_user_messenger_user");
                });

            modelBuilder.Entity("Swastika.Messenger.Lib.Models.MessengerNavTeamUser", b =>
                {
                    b.HasOne("Swastika.Messenger.Lib.Models.MessengerTeam", "Team")
                        .WithMany("MessengerNavTeamUser")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK_messenger_nav_team_user_messenger_team");

                    b.HasOne("Swastika.Messenger.Lib.Models.MessengerUser", "User")
                        .WithMany("MessengerNavTeamUser")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_messenger_nav_team_user_messenger_user");
                });
#pragma warning restore 612, 618
        }
    }
}
