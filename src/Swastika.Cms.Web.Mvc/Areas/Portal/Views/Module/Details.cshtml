@using Swastika.Domain.Core.ViewModels;
@model BEModuleViewModel
@{
    ViewData["Title"] = "Module " + Model.Name;
    //Layout = "~/Areas/Portal/Views/Shared/_Layout.cshtml";
    var Data = Model.Data;

    int fromValue = Data.PageIndex * Data.PageSize + 1;
    int toValue = fromValue + Data.PageSize;
    int prevPage = Data.PageIndex > 0 ? Data.PageIndex - 1 : 0;
    int nextPage = Data.PageIndex == Data.TotalPage - 1 ? Data.PageIndex : Data.PageIndex + 1;
    toValue = toValue > Data.TotalItems ? Data.TotalItems : toValue;
}

<section class="content container-fluid">
    <form enctype="multipart/form-data" asp-action="@ViewContext.RouteData.Values["action"].ToString()">

        @if (Model.Data.TotalItems > 0)
        {
            <div class="row">
                <div class="col-md-8">
                    <div class="btn-toolbar mb-3" role="toolbar" aria-label="Toolbar with button groups">
                        <div class="btn-group mr-2" role="group" aria-label="First group">
                            <a asp-area="Portal" asp-controller="Module" asp-action="AddModuleData" asp-route-id="@Model.Id" class="btn btn-secondary">
                                <i class="mi mi-Add"></i>
                            </a>
                            @*<a asp-area="Portal" asp-controller="Module" asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">
                                    <span class="oi oi-list"></span>
                                </a>*@
                            <a asp-area="Portal" asp-controller="Module" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-secondary">
                                <i class="mi mi-Edit"></i>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                </div>
            </div>

            <table class="table table-sm table-hover" cellspacing="0">
                <thead class="thead-light">
                    <tr>
                        <th scope="col">
                            <span class="oi oi-move"></span>
                        </th>
                        <th scope="col">
                            <span class="oi oi-sort-ascending"></span>
                        </th>
                        @foreach (var col in Model.Columns.Where(c => c.IsDisplay))
                        {
                            <th scope="col">
                                @col.Name
                            </th>
                        }
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th scope="col">
                            <span class="oi oi-move"></span>
                        </th>
                        <th scope="col">
                            <span class="oi oi-sort-ascending"></span>
                        </th>
                        @foreach (var col in Model.Columns.Where(c => c.IsDisplay))
                        {
                            <th scope="col">
                                @col.Name
                            </th>
                        }
                        <th scope="col">Actions</th>
                    </tr>
                </tfoot>
                <tbody class="sortable">
                    @for (int i = 0; i < Data.Items.OrderBy(n => n.Priority).ToList().Count; i++)
                    {
                        <tr class="sortable-item">
                            <td style="cursor:move;">
                                <span class="oi oi-move"></span>
                            </td>
                            <td>
                                <input type="text" asp-for="@Data.Items[i].Priority" class="item-priority form-control form-control-sm d-inline" style="width:40px;" />
                            </td>
                            @foreach (var col in Model.Columns.Where(c => c.IsDisplay))
                            {
                                var prop = Data.Items[i].GetDataProperty(col.Name);
                                <td>
                                    @{Html.RenderPartial("_ViewByFieldType",
                                                new ViewDataDictionary(this.Vi‌​ewData) { { "dataType", prop.DataType }, { "Value", prop.Value } });
                                    }
                                </td>
                            }
                            <td>
                                <div class="btn-group btn-group-sm" role="group" aria-label="Actions">
                                    <a asp-action="EditModuleData" asp-route-id="@Data.Items[i].ModuleId" asp-route-dataId="@Data.Items[i].Id" class="btn btn-sm btn-warning"> <span class="oi oi-pencil"></span></a>
                                    <a asp-action="DeleteModuleData" asp-route-id="@Data.Items[i].Id" class="btn btn-sm btn-danger" data-popout="true" data-toggle="confirmation" data-singleton="true"> <span class="oi oi-x"></span> </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>

                <tbody></tbody>
            </table>
            @await Html.PartialAsync("_Pagination", Model, new ViewDataDictionary(this.Vi‌​ewData) { { "PageSize", Model.Data.PageSize }, { "PageIndex", Model.Data.PageIndex }, { "TotalPage", Model.Data.TotalPage } })

        }
        else
        {
            <div class="alert alert-warning" role="alert">
                No module data added yet! Please add your first module data <a asp-area="Portal" asp-controller="Module" asp-action="AddModuleData" asp-route-id="@Model.Id">here</a>.
            </div>
        }

        @if (Model.Articles.TotalItems > 0)
        {

            <table class="table table-sm table-hover" cellspacing="0">
                <thead class="thead-light">
                    <tr>
                        <th scope="col">
                            <span class="oi oi-move"></span>
                        </th>
                        <th scope="col">
                            <span class="oi oi-sort-ascending"></span>
                        </th>
                        <th scope="col">
                            Title
                        </th>
                        <th scope="col">
                            Excerpt
                        </th>

                        <th scope="col">
                            Type
                        </th>
                        <th scope="col">
                            CreatedBy
                        </th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th scope="col">
                            <span class="oi oi-move"></span>
                        </th>
                        <th scope="col">
                            <span class="oi oi-sort-ascending"></span>
                        </th>
                        <th scope="col">
                            Title
                        </th>
                        <th scope="col">
                            Excerpt
                        </th>

                        <th scope="col">
                            Type
                        </th>
                        <th scope="col">
                            CreatedBy
                        </th>
                        <th scope="col"></th>
                    </tr>
                </tfoot>
                <tbody class="sortable">
                    @for (int i = 0; i < Model.Articles.Items.OrderBy(n => n.Priority).ToList().Count; i++)
                    {
                        <tr class="sortable-item">
                            <td style="cursor:move;">
                                <span class="oi oi-move"></span>
                            </td>
                            <td>
                                <input type="text" asp-for="@Model.Articles.Items[i].Priority" class="item-priority form-control form-control-sm d-inline" style="width:40px;" />
                            </td>
                            <td>
                                @Model.Articles.Items[i].Title
                            </td>
                            <td>
                                @Model.Articles.Items[i].Excerpt
                            </td>

                            <td>
                                @Model.Articles.Items[i].Type
                            </td>
                            <td>
                                @Model.Articles.Items[i].CreatedBy
                            </td>

                            <td>
                                <div class="btn-group btn-group-sm" role="group" aria-label="Actions">
                                    <a href="/@ViewBag.culture/Portal/Articles/Edit/@Model.Articles.Items[i].Id"
                                       class="btn btn-sm btn-warning"><span class="oi oi-pencil"></span></a>
                                    @*<a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info"> <span class="oi oi-eye"></span> </a>*@
                                    <a href="/@ViewBag.culture/Portal/Articles/Recycle/@Model.Articles.Items[i].Id" class="btn btn-sm btn-danger" data-popout="true" data-toggle="confirmation" data-singleton="true"> <span class="oi oi-x"></span> </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>

                <tbody></tbody>
            </table>
            @await Html.PartialAsync("_Pagination", Model, new ViewDataDictionary(this.Vi‌​ewData)
{
{ "PageSize", Model.Articles.PageSize}, { "PageIndex", Model.Articles.PageIndex }, { "TotalPage", Model.Articles.TotalPage } })
        }
    </form>
</section>
<!-- /.mail-box-messages -->