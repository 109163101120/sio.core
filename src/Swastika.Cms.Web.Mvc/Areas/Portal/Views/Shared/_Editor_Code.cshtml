@model BETemplateViewModel
@inject UserManager<ApplicationUser> UserManager

@{
    ViewBag.IsAdmin = true;
    string isHidden = ViewBag.IsAdmin ? string.Empty : "hidden";

    List<BETemplateViewModel> files = (List<BETemplateViewModel>)this.ViewData["Files"];
    files = files ?? new List<BETemplateViewModel>();
    string name = (string)this.ViewData["Name"];

    string inpName_TemplateName = string.IsNullOrEmpty(name) ? "TemplateName" : string.Format("{0}.TemplateName", name);
    string inpId_TemplateName = string.IsNullOrEmpty(name) ? "TemplateName" : string.Format("{0}_TemplateName", name);

    string inpName_TemplateId = string.IsNullOrEmpty(name) ? "TemplateId" : string.Format("{0}.TemplateId", name);
    string inpId_TemplateId = string.IsNullOrEmpty(name) ? "TemplateId" : string.Format("{0}_TemplateId", name);

    string inpName_Id = string.IsNullOrEmpty(name) ? "Id" : string.Format("{0}.Id", name);
    string inpId_Id = string.IsNullOrEmpty(name) ? "Id" : string.Format("{0}_Id", name);

    string inpName_FolderType = string.IsNullOrEmpty(name) ? "FolderType" : string.Format("{0}.FolderType", name);
    string inpFolderType_FolderType = string.IsNullOrEmpty(name) ? "FolderType" : string.Format("{0}_FolderType", name);

    string inpName_FileFolder = string.IsNullOrEmpty(name) ? "FileFolder" : string.Format("{0}.FileFolder", name);
    string inpId_FileFolder = string.IsNullOrEmpty(name) ? "FileFolder" : string.Format("{0}_FileFolder", name);

    string inpName_Extension = string.IsNullOrEmpty(name) ? "Extension" : string.Format("{0}.Extension", name);
    string inpId_Extension = string.IsNullOrEmpty(name) ? "Extension" : string.Format("{0}_Extension", name);

    string inpName_CreatedDateTime = string.IsNullOrEmpty(name) ? "CreatedDateTime" : string.Format("{0}.CreatedDateTime", name);
    string inpId_CreatedDateTime = string.IsNullOrEmpty(name) ? "CreatedDateTime" : string.Format("{0}_CreatedDateTime", name);

    string inpName_LastModified = string.IsNullOrEmpty(name) ? "LastModified" : string.Format("{0}.LastModified", name);
    string inpId_LastModified = string.IsNullOrEmpty(name) ? "LastModified" : string.Format("{0}_LastModified", name);

    string inpName_ModifiedBy = string.IsNullOrEmpty(name) ? "ModifiedBy" : string.Format("{0}.ModifiedBy", name);
    string inpId_ModifiedBy = string.IsNullOrEmpty(name) ? "ModifiedBy" : string.Format("{0}_ModifiedBy", name);

    string inpName_Filename = string.IsNullOrEmpty(name) ? "Filename" : string.Format("{0}.Filename", name);
    string inpId_Filename = string.IsNullOrEmpty(name) ? "Filename" : string.Format("{0}_Filename", name);

    string inpName_Content = string.IsNullOrEmpty(name) ? "Content" : string.Format("{0}.Content", name);
    string inpId_Content = string.IsNullOrEmpty(name) ? "Content" : string.Format("{0}_Content", name);

    string inpName_Scripts = string.IsNullOrEmpty(name) ? "Scripts" : string.Format("{0}.Scripts", name);
    string inpId_Scripts = string.IsNullOrEmpty(name) ? "Scripts" : string.Format("{0}_Scripts", name);

    string inpName_Styles = string.IsNullOrEmpty(name) ? "Styles" : string.Format("{0}.Styles", name);
    string inpId_Styles = string.IsNullOrEmpty(name) ? "Styles" : string.Format("{0}Styles", name);


    var templates = new SelectList(files, "Content", "FileName");
}

<div>
    <div class="form-group">
        <div class="input-group mb-3">
            @if (files.Count > 0)
            {
                <select asp-for="FileName" asp-items="@templates" id="sel-template" class="btn btn-outline-secondary custom-select col-sm-3">
                    <option value="<div></div>">--- Seclect Template Layout ---</option>
                </select>
            }
            @*<input id="@inputId" name="@inputName" value="@Model.Filename" class="form-control sel-filename"/>*@
            <input type="hidden" id="@inpId_TemplateName" name="@inpName_TemplateName" value="@Model.TemplateName">
            <input type="hidden" id="@inpId_TemplateId" name="@inpName_TemplateId" value="@Model.TemplateId">
            <input type="hidden" id="@inpId_Id" name="@inpName_Id" value="@Model.Id">
            <input type="hidden" id="@inpId_FileFolder" name="@inpName_FileFolder" value="@Model.FileFolder">
            <input type="hidden" id="@inpId_Extension" name="@inpName_Extension" value="@Model.Extension">
            <input type="hidden" id="@inpId_CreatedDateTime" name="@inpName_CreatedDateTime" value="@Model.CreatedDateTime">
            <input type="hidden" id="@inpId_LastModified" name="@inpName_LastModified" value="@Model.LastModified">
            <input type="hidden" id="@inpId_ModifiedBy" name="@inpName_ModifiedBy" value="@Model.ModifiedBy">


            <input class="form-control sel-filename" type="text" id="@inpId_Filename" name="@inpName_Filename" value="@Model.FileName">
        </div>

        <div class="container-code-editor">
            <div class="form-control" id="code-editor">@Model.Content</div>
            <input class="form-control code-content" type="hidden" id="@inpId_Content" name="@inpName_Content" value="@Model.Content">
        </div>
    </div>
    <div class="form-group">
        Scripts
        <div class="container-code-editor">

            <div class="form-control code-editor">@Model.Scripts</div>
            <input class="form-control code-content" type="hidden" id="@inpId_Scripts" name="@inpName_Scripts" value="@Model.Scripts">
        </div>
    </div>
    <div class="form-group">
        Styles
        <div class="container-code-editor">

            <div class="form-control code-editor">@Model.Styles</div>
            <input class="form-control code-content" type="hidden" id="@inpId_Styles" name="@inpName_Styles" value="@Model.Styles">
        </div>
    </div>

    </div>
